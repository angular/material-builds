@use 'sass:map';
@use 'sass:list';
@use '../core/tokens/m3-utils';
@use '../core/theming/theming';
@use '../core/theming/inspection';

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (mat, button-toggle);

/// Generates custom tokens for the mat-button-toggle.
@function get-tokens($theme, $color-variant: null) {
  $system: m3-utils.get-system($theme);
  @if $color-variant {
    $system: m3-utils.replace-colors-with-variant($system, secondary, $color-variant);
  }

  $tokens: (
    base: (
      focus-state-layer-opacity: map.get($system, focus-state-layer-opacity),
      hover-state-layer-opacity: map.get($system, hover-state-layer-opacity),
      shape: map.get($system, corner-extra-large),
    ),
    typography: (
      label-text-font: map.get($system, label-large-font),
      label-text-line-height: map.get($system, label-large-line-height),
      label-text-size: map.get($system, label-large-size),
      label-text-tracking: map.get($system, label-large-tracking),
      label-text-weight: map.get($system, label-large-weight),
    ),
    color: (
      background-color: transparent,
      disabled-selected-state-background-color:
          m3-utils.color-with-opacity(map.get($system, on-surface), 12%),
      disabled-selected-state-text-color:
          m3-utils.color-with-opacity(map.get($system, on-surface), 38%),
      disabled-state-background-color: transparent,
      disabled-state-text-color: m3-utils.color-with-opacity(map.get($system, on-surface), 38%),
      divider-color: map.get($system, outline),
      selected-state-background-color: map.get($system, secondary-container),
      selected-state-text-color: map.get($system, on-secondary-container),
      state-layer-color: map.get($system, on-surface),
      text-color: map.get($system, on-surface),
    ),
    density: get-density-tokens(map.get($theme, inspection.$internals, density-scale)),
  );

  @return $tokens;
}

// Tokens that can be configured through Angular Material's density theming API.
@function get-density-tokens($scale) {
  $scale: theming.clamp-density(scale, -4);
  $index: ($scale * -1) + 1;

  @return (
    height: list.nth((40px, 40px, 40px, 36px, 24px), $index),
  );
}
