@use 'sass:map';
@use '../../token-utils';
@use '../../../typography/typography-utils';
@use '../../../theming/theming';
@use '../../../style/sass-utils';

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (mat, legacy-button-toggle);

// Tokens that can't be configured through Angular Material's current theming API,
// but may be in a future version of the theming API.
@function get-unthemable-tokens() {
  @return (
    height: 36px,
    shape: 2px,
    focus-state-layer-opacity: 1,
  );
}

// Tokens that can be configured through Angular Material's color theming API.
@function get-color-tokens($config) {
  $foreground: map.get($config, foreground);
  $background: map.get($config, background);

  @return (
    text-color: theming.get-color-from-palette($foreground, hint-text),
    state-layer-color: theming.get-color-from-palette($background, focused-button),
    selected-state-text-color: theming.get-color-from-palette($foreground, secondary-text),
    selected-state-background-color: theming.get-color-from-palette($background, selected-button),
    disabled-state-text-color: theming.get-color-from-palette($foreground, disabled-button),
    disabled-state-background-color:
      theming.get-color-from-palette($background, disabled-button-toggle),
    disabled-selected-state-background-color:
      theming.get-color-from-palette($background, selected-disabled-button)
  );
}

// Tokens that can be configured through Angular Material's typography theming API.
@function get-typography-tokens($config) {
  @return (
    // TODO(crisbeto): other components have tokens for all typography dimensions (font weight,
    // letter spacing etc). The button toggle only has the font to match what it had in the
    // old theming API and to reduce internal breakages. We should introduce more typography
    // tokens at some point.
    text-font: typography-utils.font-family($config),
  );
}

// Tokens that can be configured through Angular Material's density theming API.
@function get-density-tokens($config) {
  @return ();
}

// Combines the tokens generated by the above functions into a single map with placeholder values.
// This is used to create token slots.
@function get-token-slots() {
  @return sass-utils.deep-merge-all(
      get-unthemable-tokens(),
      get-color-tokens(token-utils.$placeholder-color-config),
      get-typography-tokens(token-utils.$placeholder-typography-config),
      get-density-tokens(token-utils.$placeholder-density-config)
  );
}
