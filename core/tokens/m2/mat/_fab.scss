@use '../../token-utils';
@use '../../../theming/inspection';
@use '../../../style/sass-utils';

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (mat, fab);

// Tokens that can't be configured through Angular Material's current theming API,
// but may be in a future version of the theming API.
@function get-unthemable-tokens() {
  @return ();
}

// Tokens that can be configured through Angular Material's color theming API.
@function get-color-tokens($theme) {
  $is-dark: inspection.get-theme-type($theme) == dark;
  $surface: if($is-dark, #fff, #000);

  @return (
    // Color of icons and text projected into a FAB.
    foreground-color: inspection.get-theme-color($theme, foreground, base),

    // MDC doesn't have tokens for disabled FABs so we need to implemented them ourselves.
    // Background color of the container when the FAB is disabled.
    disabled-state-container-color: rgba($surface, 0.12),
    // Color of the icons and projected text when the FAB is disabled.
    disabled-state-foreground-color: rgba($surface, if($is-dark, 0.5, 0.38)),
  );
}

// Generates the mapping for the properties that change based on the FAB palette color.
@function private-get-color-palette-color-tokens($theme, $palette-name) {
  @return (
    foreground-color: inspection.get-theme-color($theme, $palette-name, default-contrast),
  );
}

// Tokens that can be configured through Angular Material's typography theming API.
@function get-typography-tokens($theme) {
  @return ();
}

// Tokens that can be configured through Angular Material's density theming API.
@function get-density-tokens($theme) {
  @return ();
}

// Combines the tokens generated by the above functions into a single map with placeholder values.
// This is used to create token slots.
@function get-token-slots() {
  @return sass-utils.deep-merge-all(
      get-unthemable-tokens(),
      get-color-tokens(token-utils.$placeholder-color-config),
      get-typography-tokens(token-utils.$placeholder-typography-config),
      get-density-tokens(token-utils.$placeholder-density-config)
  );
}
