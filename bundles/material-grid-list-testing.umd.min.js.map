{"version":3,"sources":["src/material/material-grid-list-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","material","gridList","testing","cdk","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__read","o","m","r","i","ar","error","MatGridTileHarness","_super","_this","arguments","_header","locatorForOptional","_footer","_avatar","with","options","HarnessPredicate","addOption","headerText","harness","pattern","stringMatches","getHeaderText","footerText","getFooterText","getRowspan","_a","_b","Number","host","getAttribute","getColspan","hasHeader","hasFooter","hasAvatar","headerEl","text","hostSelector","ComponentHarness","MatGridListHarness","_tileCoordinator","ÉµTileCoordinator","getTiles","filters","locatorForAll","getColumns","getTileAtPosition","row","column","tileHarnesses","columns","tileSpans","tiles","position","_c","rowspan","colspan","_d","all","map","update","positions","col","Error","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk/testing'), require('@angular/material/grid-list')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/grid-list/testing', ['exports', '@angular/cdk/testing', '@angular/material/grid-list'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.gridList = global.ng.material.gridList || {}, global.ng.material.gridList.testing = {}), global.ng.cdk.testing, global.ng.material.gridList));\n}(this, (function (exports, testing, gridList) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Harness for interacting with a standard `MatGridTitle` in tests. */\n    var MatGridTileHarness = /** @class */ (function (_super) {\n        __extends(MatGridTileHarness, _super);\n        function MatGridTileHarness() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._header = _this.locatorForOptional('.mat-grid-tile-header');\n            _this._footer = _this.locatorForOptional('.mat-grid-tile-footer');\n            _this._avatar = _this.locatorForOptional('.mat-grid-avatar');\n            return _this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a `MatGridTileHarness`\n         * that meets certain criteria.\n         * @param options Options for filtering which dialog instances are considered a match.\n         * @return a `HarnessPredicate` configured with the given options.\n         */\n        MatGridTileHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatGridTileHarness, options)\n                .addOption('headerText', options.headerText, function (harness, pattern) { return testing.HarnessPredicate.stringMatches(harness.getHeaderText(), pattern); })\n                .addOption('footerText', options.footerText, function (harness, pattern) { return testing.HarnessPredicate.stringMatches(harness.getFooterText(), pattern); });\n        };\n        /** Gets the amount of rows that the grid-tile takes up. */\n        MatGridTileHarness.prototype.getRowspan = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var _a;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            _a = Number;\n                            return [4 /*yield*/, this.host()];\n                        case 1: return [4 /*yield*/, (_b.sent()).getAttribute('rowspan')];\n                        case 2: return [2 /*return*/, _a.apply(void 0, [_b.sent()])];\n                    }\n                });\n            });\n        };\n        /** Gets the amount of columns that the grid-tile takes up. */\n        MatGridTileHarness.prototype.getColspan = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var _a;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            _a = Number;\n                            return [4 /*yield*/, this.host()];\n                        case 1: return [4 /*yield*/, (_b.sent()).getAttribute('colspan')];\n                        case 2: return [2 /*return*/, _a.apply(void 0, [_b.sent()])];\n                    }\n                });\n            });\n        };\n        /** Whether the grid-tile has a header. */\n        MatGridTileHarness.prototype.hasHeader = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._header()];\n                        case 1: return [2 /*return*/, (_a.sent()) !== null];\n                    }\n                });\n            });\n        };\n        /** Whether the grid-tile has a footer. */\n        MatGridTileHarness.prototype.hasFooter = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._footer()];\n                        case 1: return [2 /*return*/, (_a.sent()) !== null];\n                    }\n                });\n            });\n        };\n        /** Whether the grid-tile has an avatar. */\n        MatGridTileHarness.prototype.hasAvatar = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._avatar()];\n                        case 1: return [2 /*return*/, (_a.sent()) !== null];\n                    }\n                });\n            });\n        };\n        /** Gets the text of the header if present. */\n        MatGridTileHarness.prototype.getHeaderText = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var headerEl;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._header()];\n                        case 1:\n                            headerEl = _a.sent();\n                            return [2 /*return*/, headerEl ? headerEl.text() : null];\n                    }\n                });\n            });\n        };\n        /** Gets the text of the footer if present. */\n        MatGridTileHarness.prototype.getFooterText = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var headerEl;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._footer()];\n                        case 1:\n                            headerEl = _a.sent();\n                            return [2 /*return*/, headerEl ? headerEl.text() : null];\n                    }\n                });\n            });\n        };\n        /** The selector for the host element of a `MatGridTile` instance. */\n        MatGridTileHarness.hostSelector = '.mat-grid-tile';\n        return MatGridTileHarness;\n    }(testing.ComponentHarness));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Harness for interacting with a standard `MatGridList` in tests. */\n    var MatGridListHarness = /** @class */ (function (_super) {\n        __extends(MatGridListHarness, _super);\n        function MatGridListHarness() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /**\n             * Tile coordinator that is used by the \"MatGridList\" for computing\n             * positions of tiles. We leverage the coordinator to provide an API\n             * for retrieving tiles based on visual tile positions.\n             */\n            _this._tileCoordinator = new gridList.ÉµTileCoordinator();\n            return _this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a `MatGridListHarness`\n         * that meets certain criteria.\n         * @param options Options for filtering which dialog instances are considered a match.\n         * @return a `HarnessPredicate` configured with the given options.\n         */\n        MatGridListHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatGridListHarness, options);\n        };\n        /** Gets all tiles of the grid-list. */\n        MatGridListHarness.prototype.getTiles = function (filters) {\n            if (filters === void 0) { filters = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.locatorForAll(MatGridTileHarness.with(filters))()];\n                        case 1: return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        /** Gets the amount of columns of the grid-list. */\n        MatGridListHarness.prototype.getColumns = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var _a;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            _a = Number;\n                            return [4 /*yield*/, this.host()];\n                        case 1: return [4 /*yield*/, (_b.sent()).getAttribute('cols')];\n                        case 2: return [2 /*return*/, _a.apply(void 0, [_b.sent()])];\n                    }\n                });\n            });\n        };\n        /**\n         * Gets a tile of the grid-list that is located at the given location.\n         * @param row Zero-based row index.\n         * @param column Zero-based column index.\n         */\n        MatGridListHarness.prototype.getTileAtPosition = function (_a) {\n            var row = _a.row, column = _a.column;\n            return __awaiter(this, void 0, void 0, function () {\n                var _b, tileHarnesses, columns, tileSpans, tiles, i, position, _c, rowspan, colspan;\n                return __generator(this, function (_d) {\n                    switch (_d.label) {\n                        case 0: return [4 /*yield*/, Promise.all([this.getTiles(), this.getColumns()])];\n                        case 1:\n                            _b = __read.apply(void 0, [_d.sent(), 2]), tileHarnesses = _b[0], columns = _b[1];\n                            tileSpans = tileHarnesses.map(function (t) { return Promise.all([t.getColspan(), t.getRowspan()]); });\n                            return [4 /*yield*/, Promise.all(tileSpans)];\n                        case 2:\n                            tiles = (_d.sent()).map(function (_a) {\n                                var _b = __read(_a, 2), colspan = _b[0], rowspan = _b[1];\n                                return ({ colspan: colspan, rowspan: rowspan });\n                            });\n                            // Update the tile coordinator to reflect the current column amount and\n                            // rendered tiles. We update upon every call of this method since we do not\n                            // know if tiles have been added, removed or updated (in terms of rowspan/colspan).\n                            this._tileCoordinator.update(columns, tiles);\n                            // The tile coordinator respects the colspan and rowspan for calculating the positions\n                            // of tiles, but it does not create multiple position entries if a tile spans over multiple\n                            // columns or rows. We want to provide an API where developers can retrieve a tile based on\n                            // any position that lies within the visual tile boundaries. For example: If a tile spans\n                            // over two columns, then the same tile should be returned for either column indices.\n                            for (i = 0; i < this._tileCoordinator.positions.length; i++) {\n                                position = this._tileCoordinator.positions[i];\n                                _c = tiles[i], rowspan = _c.rowspan, colspan = _c.colspan;\n                                // Return the tile harness if the given position visually resolves to the tile.\n                                if (column >= position.col && column <= position.col + colspan - 1 && row >= position.row &&\n                                    row <= position.row + rowspan - 1) {\n                                    return [2 /*return*/, tileHarnesses[i]];\n                                }\n                            }\n                            throw Error('Could not find tile at given position.');\n                    }\n                });\n            });\n        };\n        /** The selector for the host element of a `MatGridList` instance. */\n        MatGridListHarness.hostSelector = '.mat-grid-list';\n        return MatGridListHarness;\n    }(testing.ComponentHarness));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.MatGridListHarness = MatGridListHarness;\n    exports.MatGridTileHarness = MatGridTileHarness;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-grid-list-testing.umd.js.map\n"]}