{"version":3,"sources":["src/material/material-table-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","material","table","testing","cdk","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__read","o","m","r","i","ar","error","MatCellHarness","_super","arguments","with","options","getCellPredicate","getText","_a","host","text","getColumnName","classAttribute","name_1","getAttribute","split","map","c","trim","find","startsWith","Error","hostSelector","ComponentHarness","MatHeaderCellHarness","MatFooterCellHarness","type","HarnessPredicate","addOption","harness","stringMatches","MatRowHarness","getCells","filter","locatorForAll","getCellTextByIndex","getCellTextByColumnName","MatHeaderRowHarness","MatFooterRowHarness","cells","all","cell","output","forEach","_b","MatTableHarness","getHeaderRows","getRows","getFooterRows","rows","row","footerRows","dataRows","headerData","footerData","_c","data","keys","columnName","cellText","headerText","getCellTextsByColumn","footerText","rowsData","column","columnTexts","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk/testing')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/table/testing', ['exports', '@angular/cdk/testing'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.table = global.ng.material.table || {}, global.ng.material.table.testing = {}), global.ng.cdk.testing));\n}(this, (function (exports, testing) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Harness for interacting with a standard Angular Material table cell. */\n    var MatCellHarness = /** @class */ (function (_super) {\n        __extends(MatCellHarness, _super);\n        function MatCellHarness() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a table cell with specific attributes.\n         * @param options Options for narrowing the search\n         * @return a `HarnessPredicate` configured with the given options.\n         */\n        MatCellHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return getCellPredicate(MatCellHarness, options);\n        };\n        /** Gets the cell's text. */\n        MatCellHarness.prototype.getText = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [2 /*return*/, (_a.sent()).text()];\n                    }\n                });\n            });\n        };\n        /** Gets the name of the column that the cell belongs to. */\n        MatCellHarness.prototype.getColumnName = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var host, classAttribute, prefix_1, name_1;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1:\n                            host = _a.sent();\n                            return [4 /*yield*/, host.getAttribute('class')];\n                        case 2:\n                            classAttribute = _a.sent();\n                            if (classAttribute) {\n                                prefix_1 = 'mat-column-';\n                                name_1 = classAttribute.split(' ').map(function (c) { return c.trim(); }).find(function (c) { return c.startsWith(prefix_1); });\n                                if (name_1) {\n                                    return [2 /*return*/, name_1.split(prefix_1)[1]];\n                                }\n                            }\n                            throw Error('Could not determine column name of cell.');\n                    }\n                });\n            });\n        };\n        /** The selector for the host element of a `MatCellHarness` instance. */\n        MatCellHarness.hostSelector = '.mat-cell';\n        return MatCellHarness;\n    }(testing.ComponentHarness));\n    /** Harness for interacting with a standard Angular Material table header cell. */\n    var MatHeaderCellHarness = /** @class */ (function (_super) {\n        __extends(MatHeaderCellHarness, _super);\n        function MatHeaderCellHarness() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for\n         * a table header cell with specific attributes.\n         * @param options Options for narrowing the search\n         * @return a `HarnessPredicate` configured with the given options.\n         */\n        MatHeaderCellHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return getCellPredicate(MatHeaderCellHarness, options);\n        };\n        /** The selector for the host element of a `MatHeaderCellHarness` instance. */\n        MatHeaderCellHarness.hostSelector = '.mat-header-cell';\n        return MatHeaderCellHarness;\n    }(MatCellHarness));\n    /** Harness for interacting with a standard Angular Material table footer cell. */\n    var MatFooterCellHarness = /** @class */ (function (_super) {\n        __extends(MatFooterCellHarness, _super);\n        function MatFooterCellHarness() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for\n         * a table footer cell with specific attributes.\n         * @param options Options for narrowing the search\n         * @return a `HarnessPredicate` configured with the given options.\n         */\n        MatFooterCellHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return getCellPredicate(MatFooterCellHarness, options);\n        };\n        /** The selector for the host element of a `MatFooterCellHarness` instance. */\n        MatFooterCellHarness.hostSelector = '.mat-footer-cell';\n        return MatFooterCellHarness;\n    }(MatCellHarness));\n    function getCellPredicate(type, options) {\n        return new testing.HarnessPredicate(type, options)\n            .addOption('text', options.text, function (harness, text) { return testing.HarnessPredicate.stringMatches(harness.getText(), text); });\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Harness for interacting with a standard Angular Material table row. */\n    var MatRowHarness = /** @class */ (function (_super) {\n        __extends(MatRowHarness, _super);\n        function MatRowHarness() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a table row with specific attributes.\n         * @param options Options for narrowing the search\n         * @return a `HarnessPredicate` configured with the given options.\n         */\n        MatRowHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatRowHarness, options);\n        };\n        /** Gets a list of `MatCellHarness` for all cells in the row. */\n        MatRowHarness.prototype.getCells = function (filter) {\n            if (filter === void 0) { filter = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.locatorForAll(MatCellHarness.with(filter))()];\n                });\n            });\n        };\n        /** Gets the text of the cells in the row. */\n        MatRowHarness.prototype.getCellTextByIndex = function (filter) {\n            if (filter === void 0) { filter = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, getCellTextByIndex(this, filter)];\n                });\n            });\n        };\n        /** Gets the text inside the row organized by columns. */\n        MatRowHarness.prototype.getCellTextByColumnName = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, getCellTextByColumnName(this)];\n                });\n            });\n        };\n        /** The selector for the host element of a `MatRowHarness` instance. */\n        MatRowHarness.hostSelector = '.mat-row';\n        return MatRowHarness;\n    }(testing.ComponentHarness));\n    /** Harness for interacting with a standard Angular Material table header row. */\n    var MatHeaderRowHarness = /** @class */ (function (_super) {\n        __extends(MatHeaderRowHarness, _super);\n        function MatHeaderRowHarness() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for\n         * a table header row with specific attributes.\n         * @param options Options for narrowing the search\n         * @return a `HarnessPredicate` configured with the given options.\n         */\n        MatHeaderRowHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatHeaderRowHarness, options);\n        };\n        /** Gets a list of `MatHeaderCellHarness` for all cells in the row. */\n        MatHeaderRowHarness.prototype.getCells = function (filter) {\n            if (filter === void 0) { filter = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.locatorForAll(MatHeaderCellHarness.with(filter))()];\n                });\n            });\n        };\n        /** Gets the text of the cells in the header row. */\n        MatHeaderRowHarness.prototype.getCellTextByIndex = function (filter) {\n            if (filter === void 0) { filter = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, getCellTextByIndex(this, filter)];\n                });\n            });\n        };\n        /** Gets the text inside the header row organized by columns. */\n        MatHeaderRowHarness.prototype.getCellTextByColumnName = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, getCellTextByColumnName(this)];\n                });\n            });\n        };\n        /** The selector for the host element of a `MatHeaderRowHarness` instance. */\n        MatHeaderRowHarness.hostSelector = '.mat-header-row';\n        return MatHeaderRowHarness;\n    }(testing.ComponentHarness));\n    /** Harness for interacting with a standard Angular Material table footer row. */\n    var MatFooterRowHarness = /** @class */ (function (_super) {\n        __extends(MatFooterRowHarness, _super);\n        function MatFooterRowHarness() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for\n         * a table footer row cell with specific attributes.\n         * @param options Options for narrowing the search\n         * @return a `HarnessPredicate` configured with the given options.\n         */\n        MatFooterRowHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatFooterRowHarness, options);\n        };\n        /** Gets a list of `MatFooterCellHarness` for all cells in the row. */\n        MatFooterRowHarness.prototype.getCells = function (filter) {\n            if (filter === void 0) { filter = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.locatorForAll(MatFooterCellHarness.with(filter))()];\n                });\n            });\n        };\n        /** Gets the text of the cells in the footer row. */\n        MatFooterRowHarness.prototype.getCellTextByIndex = function (filter) {\n            if (filter === void 0) { filter = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, getCellTextByIndex(this, filter)];\n                });\n            });\n        };\n        /** Gets the text inside the footer row organized by columns. */\n        MatFooterRowHarness.prototype.getCellTextByColumnName = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, getCellTextByColumnName(this)];\n                });\n            });\n        };\n        /** The selector for the host element of a `MatFooterRowHarness` instance. */\n        MatFooterRowHarness.hostSelector = '.mat-footer-row';\n        return MatFooterRowHarness;\n    }(testing.ComponentHarness));\n    function getCellTextByIndex(harness, filter) {\n        return __awaiter(this, void 0, void 0, function () {\n            var cells;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, harness.getCells(filter)];\n                    case 1:\n                        cells = _a.sent();\n                        return [2 /*return*/, Promise.all(cells.map(function (cell) { return cell.getText(); }))];\n                }\n            });\n        });\n    }\n    function getCellTextByColumnName(harness) {\n        return __awaiter(this, void 0, void 0, function () {\n            var output, cells, cellsData;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        output = {};\n                        return [4 /*yield*/, harness.getCells()];\n                    case 1:\n                        cells = _a.sent();\n                        return [4 /*yield*/, Promise.all(cells.map(function (cell) {\n                                return Promise.all([cell.getColumnName(), cell.getText()]);\n                            }))];\n                    case 2:\n                        cellsData = _a.sent();\n                        cellsData.forEach(function (_a) {\n                            var _b = __read(_a, 2), columnName = _b[0], text = _b[1];\n                            return output[columnName] = text;\n                        });\n                        return [2 /*return*/, output];\n                }\n            });\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Harness for interacting with a standard mat-table in tests. */\n    var MatTableHarness = /** @class */ (function (_super) {\n        __extends(MatTableHarness, _super);\n        function MatTableHarness() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a table with specific attributes.\n         * @param options Options for narrowing the search\n         * @return a `HarnessPredicate` configured with the given options.\n         */\n        MatTableHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatTableHarness, options);\n        };\n        /** Gets all of the header rows in a table. */\n        MatTableHarness.prototype.getHeaderRows = function (filter) {\n            if (filter === void 0) { filter = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.locatorForAll(MatHeaderRowHarness.with(filter))()];\n                });\n            });\n        };\n        /** Gets all of the regular data rows in a table. */\n        MatTableHarness.prototype.getRows = function (filter) {\n            if (filter === void 0) { filter = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.locatorForAll(MatRowHarness.with(filter))()];\n                });\n            });\n        };\n        /** Gets all of the footer rows in a table. */\n        MatTableHarness.prototype.getFooterRows = function (filter) {\n            if (filter === void 0) { filter = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.locatorForAll(MatFooterRowHarness.with(filter))()];\n                });\n            });\n        };\n        /** Gets the text inside the entire table organized by rows. */\n        MatTableHarness.prototype.getCellTextByIndex = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var rows;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.getRows()];\n                        case 1:\n                            rows = _a.sent();\n                            return [2 /*return*/, Promise.all(rows.map(function (row) { return row.getCellTextByIndex(); }))];\n                    }\n                });\n            });\n        };\n        /** Gets the text inside the entire table organized by columns. */\n        MatTableHarness.prototype.getCellTextByColumnName = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var _a, headerRows, footerRows, dataRows, text, _b, headerData, footerData, rowsData;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0: return [4 /*yield*/, Promise.all([\n                                this.getHeaderRows(),\n                                this.getFooterRows(),\n                                this.getRows()\n                            ])];\n                        case 1:\n                            _a = __read.apply(void 0, [_c.sent(), 3]), headerRows = _a[0], footerRows = _a[1], dataRows = _a[2];\n                            text = {};\n                            return [4 /*yield*/, Promise.all([\n                                    Promise.all(headerRows.map(function (row) { return row.getCellTextByColumnName(); })),\n                                    Promise.all(footerRows.map(function (row) { return row.getCellTextByColumnName(); })),\n                                    Promise.all(dataRows.map(function (row) { return row.getCellTextByColumnName(); })),\n                                ])];\n                        case 2:\n                            _b = __read.apply(void 0, [_c.sent(), 3]), headerData = _b[0], footerData = _b[1], rowsData = _b[2];\n                            rowsData.forEach(function (data) {\n                                Object.keys(data).forEach(function (columnName) {\n                                    var cellText = data[columnName];\n                                    if (!text[columnName]) {\n                                        text[columnName] = {\n                                            headerText: getCellTextsByColumn(headerData, columnName),\n                                            footerText: getCellTextsByColumn(footerData, columnName),\n                                            text: []\n                                        };\n                                    }\n                                    text[columnName].text.push(cellText);\n                                });\n                            });\n                            return [2 /*return*/, text];\n                    }\n                });\n            });\n        };\n        /** The selector for the host element of a `MatTableHarness` instance. */\n        MatTableHarness.hostSelector = '.mat-table';\n        return MatTableHarness;\n    }(testing.ComponentHarness));\n    /** Extracts the text of cells only under a particular column. */\n    function getCellTextsByColumn(rowsData, column) {\n        var columnTexts = [];\n        rowsData.forEach(function (data) {\n            Object.keys(data).forEach(function (columnName) {\n                if (columnName === column) {\n                    columnTexts.push(data[columnName]);\n                }\n            });\n        });\n        return columnTexts;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.MatCellHarness = MatCellHarness;\n    exports.MatFooterCellHarness = MatFooterCellHarness;\n    exports.MatFooterRowHarness = MatFooterRowHarness;\n    exports.MatHeaderCellHarness = MatHeaderCellHarness;\n    exports.MatHeaderRowHarness = MatHeaderRowHarness;\n    exports.MatRowHarness = MatRowHarness;\n    exports.MatTableHarness = MatTableHarness;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-table-testing.umd.js.map\n"]}