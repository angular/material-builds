{"version":3,"sources":["src/material/material-card.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","material","card","core","platformBrowser","animations","this","core$1","MatCardContent","MatCardTitle","MatCardSubtitle","MatCardActions","MatCardFooter","MatCardImage","MatCardSmImage","MatCardMdImage","MatCardLgImage","MatCardXlImage","MatCardAvatar","MatCard","MatCardHeader","MatCardTitleGroup","MatCardModule","decorators","type","Directive","args","selector","host","class","align","exportAs","[class.mat-card-actions-align-end]","propDecorators","Input","_animationMode","Component","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","[class._mat-animation-noopable]","styles","ctorParameters","String","Optional","Inject","ANIMATION_MODULE_TYPE","NgModule","imports","MatCommonModule","declarations","Object","defineProperty","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/platform-browser/animations'), require('@angular/material/core')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/card', ['exports', '@angular/core', '@angular/platform-browser/animations', '@angular/material/core'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.card = {}), global.ng.core, global.ng.platformBrowser.animations, global.ng.material.core));\n}(this, (function (exports, core, animations, core$1) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Content of a card, needed as it's used as a selector in the API.\n     * @docs-private\n     */\n    var MatCardContent = /** @class */ (function () {\n        function MatCardContent() {\n        }\n        return MatCardContent;\n    }());\n    MatCardContent.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                    host: { 'class': 'mat-card-content' }\n                },] }\n    ];\n    /**\n     * Title of a card, needed as it's used as a selector in the API.\n     * @docs-private\n     */\n    var MatCardTitle = /** @class */ (function () {\n        function MatCardTitle() {\n        }\n        return MatCardTitle;\n    }());\n    MatCardTitle.decorators = [\n        { type: core.Directive, args: [{\n                    selector: \"mat-card-title, [mat-card-title], [matCardTitle]\",\n                    host: {\n                        'class': 'mat-card-title'\n                    }\n                },] }\n    ];\n    /**\n     * Sub-title of a card, needed as it's used as a selector in the API.\n     * @docs-private\n     */\n    var MatCardSubtitle = /** @class */ (function () {\n        function MatCardSubtitle() {\n        }\n        return MatCardSubtitle;\n    }());\n    MatCardSubtitle.decorators = [\n        { type: core.Directive, args: [{\n                    selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\",\n                    host: {\n                        'class': 'mat-card-subtitle'\n                    }\n                },] }\n    ];\n    /**\n     * Action section of a card, needed as it's used as a selector in the API.\n     * @docs-private\n     */\n    var MatCardActions = /** @class */ (function () {\n        function MatCardActions() {\n            /** Position of the actions inside the card. */\n            this.align = 'start';\n        }\n        return MatCardActions;\n    }());\n    MatCardActions.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'mat-card-actions',\n                    exportAs: 'matCardActions',\n                    host: {\n                        'class': 'mat-card-actions',\n                        '[class.mat-card-actions-align-end]': 'align === \"end\"',\n                    }\n                },] }\n    ];\n    MatCardActions.propDecorators = {\n        align: [{ type: core.Input }]\n    };\n    /**\n     * Footer of a card, needed as it's used as a selector in the API.\n     * @docs-private\n     */\n    var MatCardFooter = /** @class */ (function () {\n        function MatCardFooter() {\n        }\n        return MatCardFooter;\n    }());\n    MatCardFooter.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'mat-card-footer',\n                    host: { 'class': 'mat-card-footer' }\n                },] }\n    ];\n    /**\n     * Image used in a card, needed to add the mat- CSS styling.\n     * @docs-private\n     */\n    var MatCardImage = /** @class */ (function () {\n        function MatCardImage() {\n        }\n        return MatCardImage;\n    }());\n    MatCardImage.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[mat-card-image], [matCardImage]',\n                    host: { 'class': 'mat-card-image' }\n                },] }\n    ];\n    /**\n     * Image used in a card, needed to add the mat- CSS styling.\n     * @docs-private\n     */\n    var MatCardSmImage = /** @class */ (function () {\n        function MatCardSmImage() {\n        }\n        return MatCardSmImage;\n    }());\n    MatCardSmImage.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[mat-card-sm-image], [matCardImageSmall]',\n                    host: { 'class': 'mat-card-sm-image' }\n                },] }\n    ];\n    /**\n     * Image used in a card, needed to add the mat- CSS styling.\n     * @docs-private\n     */\n    var MatCardMdImage = /** @class */ (function () {\n        function MatCardMdImage() {\n        }\n        return MatCardMdImage;\n    }());\n    MatCardMdImage.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[mat-card-md-image], [matCardImageMedium]',\n                    host: { 'class': 'mat-card-md-image' }\n                },] }\n    ];\n    /**\n     * Image used in a card, needed to add the mat- CSS styling.\n     * @docs-private\n     */\n    var MatCardLgImage = /** @class */ (function () {\n        function MatCardLgImage() {\n        }\n        return MatCardLgImage;\n    }());\n    MatCardLgImage.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[mat-card-lg-image], [matCardImageLarge]',\n                    host: { 'class': 'mat-card-lg-image' }\n                },] }\n    ];\n    /**\n     * Large image used in a card, needed to add the mat- CSS styling.\n     * @docs-private\n     */\n    var MatCardXlImage = /** @class */ (function () {\n        function MatCardXlImage() {\n        }\n        return MatCardXlImage;\n    }());\n    MatCardXlImage.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                    host: { 'class': 'mat-card-xl-image' }\n                },] }\n    ];\n    /**\n     * Avatar image used in a card, needed to add the mat- CSS styling.\n     * @docs-private\n     */\n    var MatCardAvatar = /** @class */ (function () {\n        function MatCardAvatar() {\n        }\n        return MatCardAvatar;\n    }());\n    MatCardAvatar.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[mat-card-avatar], [matCardAvatar]',\n                    host: { 'class': 'mat-card-avatar' }\n                },] }\n    ];\n    /**\n     * A basic content container component that adds the styles of a Material design card.\n     *\n     * While this component can be used alone, it also provides a number\n     * of preset styles for common card sections, including:\n     * - mat-card-title\n     * - mat-card-subtitle\n     * - mat-card-content\n     * - mat-card-actions\n     * - mat-card-footer\n     */\n    var MatCard = /** @class */ (function () {\n        // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n        function MatCard(_animationMode) {\n            this._animationMode = _animationMode;\n        }\n        return MatCard;\n    }());\n    MatCard.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'mat-card',\n                    exportAs: 'matCard',\n                    template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                    encapsulation: core.ViewEncapsulation.None,\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    host: {\n                        'class': 'mat-card mat-focus-indicator',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    },\n                    styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n                },] }\n    ];\n    MatCard.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: core.Optional }, { type: core.Inject, args: [animations.ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    /**\n     * Component intended to be used within the `<mat-card>` component. It adds styles for a\n     * preset header section (i.e. a title, subtitle, and avatar layout).\n     * @docs-private\n     */\n    var MatCardHeader = /** @class */ (function () {\n        function MatCardHeader() {\n        }\n        return MatCardHeader;\n    }());\n    MatCardHeader.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'mat-card-header',\n                    template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                    encapsulation: core.ViewEncapsulation.None,\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    host: { 'class': 'mat-card-header' }\n                },] }\n    ];\n    /**\n     * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n     * layout that groups an image with a title section.\n     * @docs-private\n     */\n    var MatCardTitleGroup = /** @class */ (function () {\n        function MatCardTitleGroup() {\n        }\n        return MatCardTitleGroup;\n    }());\n    MatCardTitleGroup.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'mat-card-title-group',\n                    template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                    encapsulation: core.ViewEncapsulation.None,\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    host: { 'class': 'mat-card-title-group' }\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MatCardModule = /** @class */ (function () {\n        function MatCardModule() {\n        }\n        return MatCardModule;\n    }());\n    MatCardModule.decorators = [\n        { type: core.NgModule, args: [{\n                    imports: [core$1.MatCommonModule],\n                    exports: [\n                        MatCard,\n                        MatCardHeader,\n                        MatCardTitleGroup,\n                        MatCardContent,\n                        MatCardTitle,\n                        MatCardSubtitle,\n                        MatCardActions,\n                        MatCardFooter,\n                        MatCardSmImage,\n                        MatCardMdImage,\n                        MatCardLgImage,\n                        MatCardImage,\n                        MatCardXlImage,\n                        MatCardAvatar,\n                        core$1.MatCommonModule,\n                    ],\n                    declarations: [\n                        MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                        MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                        MatCardXlImage, MatCardAvatar,\n                    ],\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.MatCard = MatCard;\n    exports.MatCardActions = MatCardActions;\n    exports.MatCardAvatar = MatCardAvatar;\n    exports.MatCardContent = MatCardContent;\n    exports.MatCardFooter = MatCardFooter;\n    exports.MatCardHeader = MatCardHeader;\n    exports.MatCardImage = MatCardImage;\n    exports.MatCardLgImage = MatCardLgImage;\n    exports.MatCardMdImage = MatCardMdImage;\n    exports.MatCardModule = MatCardModule;\n    exports.MatCardSmImage = MatCardSmImage;\n    exports.MatCardSubtitle = MatCardSubtitle;\n    exports.MatCardTitle = MatCardTitle;\n    exports.MatCardTitleGroup = MatCardTitleGroup;\n    exports.MatCardXlImage = MatCardXlImage;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-card.umd.js.map\n"]}