{"version":3,"sources":["src/material/material-slider.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","material","slider","common","core","cdk","a11y","bidi","coercion","keycodes","forms","platformBrowser","animations","platform","rxjs","this","core$1","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","activeEventOptions","normalizePassiveListenerOptions","passive","MAT_SLIDER_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatSlider","multi","MatSliderChange","_super","elementRef","_focusMonitor","_changeDetectorRef","_dir","tabIndex","_animationMode","_ngZone","document","_this","call","_invert","_max","_min","_step","_thumbLabel","_tickInterval","_value","_vertical","change","EventEmitter","input","valueChange","onTouched","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_controlValueAccessorChangeFn","_dirChangeSubscription","Subscription","EMPTY","_pointerDown","event","disabled","isTouchEvent","button","_runInsideZone","oldValue","value","pointerPosition","getPointerPositionOnPage","_lastPointerEvent","preventDefault","_focusHostElement","_onMouseenter","_bindGlobalEvents","_updateValueFromPosition","_valueOnSlideStart","_pointerPositionOnStart","_emitInputEvent","_emitChangeEvent","_pointerMove","_pointerUp","pointerPositionOnStart","currentPointerPosition","_removeGlobalEvents","x","y","_windowBlur","_document","parseInt","_runOutsizeZone","element","nativeElement","addEventListener","__extends","__","constructor","prototype","create","defineProperty","get","set","coerceBooleanProperty","enumerable","configurable","v","coerceNumberProperty","_calculatePercentage","markForCheck","_roundToDecimal","toString","split","pop","length","parseFloat","toFixed","displayWith","focus","options","blur","_blurHostElement","_clamp","vertical","invert","percent","_isMinValue","thumbLabel","scale","transform","_shouldInvertMouseCoords","_thumbGap","display","_getDirection","tickSize","styles","backgroundSize","_invertAxis","ngOnInit","monitor","_elementRef","subscribe","origin","detectChanges","ngOnDestroy","removeEventListener","stopMonitoring","unsubscribe","_getSliderDimensions","_updateTickIntervalPercent","_onFocus","_onBlur","_onKeydown","hasModifierKey","keyCode","PAGE_UP","_increment","PAGE_DOWN","END","max","HOME","min","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","_onKeyup","_getWindow","_a","defaultView","window","triggerEvent","isTouch","endEventName","numSteps","step","pos","top","left","height","width","exactValue","_calculateValue","closestValue","Math","round","emit","_createChangeEvent","tickInterval","trackSize","stepsPerTick","ceil","source","percentage","_sliderWrapper","getBoundingClientRect","fn","run","runOutsideAngular","writeValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","decorators","type","Component","args","selector","exportAs","providers","host","(focus)","(blur)","(keydown)","(keyup)","(mouseenter)","(selectstart)","class","role","[tabIndex]","[attr.aria-disabled]","[attr.aria-valuemax]","[attr.aria-valuemin]","[attr.aria-valuenow]","[attr.aria-orientation]","[class.mat-slider-disabled]","[class.mat-slider-has-ticks]","[class.mat-slider-horizontal]","[class.mat-slider-axis-inverted]","[class.mat-slider-invert-mouse-coords]","[class.mat-slider-sliding]","[class.mat-slider-thumb-label-showing]","[class.mat-slider-vertical]","[class.mat-slider-min-value]","[class.mat-slider-hide-last-tick]","[class._mat-animation-noopable]","template","inputs","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","ctorParameters","ElementRef","FocusMonitor","ChangeDetectorRef","Directionality","Optional","String","Attribute","Inject","ANIMATION_MODULE_TYPE","NgZone","undefined","DOCUMENT","propDecorators","Input","Output","ViewChild","mixinTabIndex","mixinColor","mixinDisabled","MatSliderBase","point","touches","changedTouches","clientX","clientY","MatSliderModule","NgModule","imports","CommonModule","MatCommonModule","declarations"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/material/core'), require('@angular/cdk/a11y'), require('@angular/cdk/bidi'), require('@angular/cdk/coercion'), require('@angular/cdk/keycodes'), require('@angular/forms'), require('@angular/platform-browser/animations'), require('@angular/cdk/platform'), require('rxjs')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/slider', ['exports', '@angular/common', '@angular/core', '@angular/material/core', '@angular/cdk/a11y', '@angular/cdk/bidi', '@angular/cdk/coercion', '@angular/cdk/keycodes', '@angular/forms', '@angular/platform-browser/animations', '@angular/cdk/platform', 'rxjs'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.slider = {}), global.ng.common, global.ng.core, global.ng.material.core, global.ng.cdk.a11y, global.ng.cdk.bidi, global.ng.cdk.coercion, global.ng.cdk.keycodes, global.ng.forms, global.ng.platformBrowser.animations, global.ng.cdk.platform, global.rxjs));\n}(this, (function (exports, common, core, core$1, a11y, bidi, coercion, keycodes, forms, animations, platform, rxjs) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var activeEventOptions = platform.normalizePassiveListenerOptions({ passive: false });\n    /**\n     * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n     * the default separation we chose.\n     */\n    var MIN_AUTO_TICK_SEPARATION = 30;\n    /** The thumb gap size for a disabled slider. */\n    var DISABLED_THUMB_GAP = 7;\n    /** The thumb gap size for a non-active slider at its minimum value. */\n    var MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n    /** The thumb gap size for an active slider at its minimum value. */\n    var MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n    /**\n     * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n     * This allows it to support [(ngModel)] and [formControl].\n     * @docs-private\n     */\n    var MAT_SLIDER_VALUE_ACCESSOR = {\n        provide: forms.NG_VALUE_ACCESSOR,\n        useExisting: core.forwardRef(function () { return MatSlider; }),\n        multi: true\n    };\n    /** A simple change event emitted by the MatSlider component. */\n    var MatSliderChange = /** @class */ (function () {\n        function MatSliderChange() {\n        }\n        return MatSliderChange;\n    }());\n    // Boilerplate for applying mixins to MatSlider.\n    /** @docs-private */\n    var MatSliderBase = /** @class */ (function () {\n        function MatSliderBase(_elementRef) {\n            this._elementRef = _elementRef;\n        }\n        return MatSliderBase;\n    }());\n    var _MatSliderMixinBase = core$1.mixinTabIndex(core$1.mixinColor(core$1.mixinDisabled(MatSliderBase), 'accent'));\n    /**\n     * Allows users to select from a range of values by moving the slider thumb. It is similar in\n     * behavior to the native `<input type=\"range\">` element.\n     */\n    var MatSlider = /** @class */ (function (_super) {\n        __extends(MatSlider, _super);\n        function MatSlider(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, \n        // @breaking-change 8.0.0 `_animationMode` parameter to be made required.\n        _animationMode, \n        // @breaking-change 9.0.0 `_ngZone` parameter to be made required.\n        _ngZone, \n        /** @breaking-change 11.0.0 make document required */\n        document) {\n            var _this = _super.call(this, elementRef) || this;\n            _this._focusMonitor = _focusMonitor;\n            _this._changeDetectorRef = _changeDetectorRef;\n            _this._dir = _dir;\n            _this._animationMode = _animationMode;\n            _this._ngZone = _ngZone;\n            _this._invert = false;\n            _this._max = 100;\n            _this._min = 0;\n            _this._step = 1;\n            _this._thumbLabel = false;\n            _this._tickInterval = 0;\n            _this._value = null;\n            _this._vertical = false;\n            /** Event emitted when the slider value has changed. */\n            _this.change = new core.EventEmitter();\n            /** Event emitted when the slider thumb moves. */\n            _this.input = new core.EventEmitter();\n            /**\n             * Emits when the raw value of the slider changes. This is here primarily\n             * to facilitate the two-way binding for the `value` input.\n             * @docs-private\n             */\n            _this.valueChange = new core.EventEmitter();\n            /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n            _this.onTouched = function () { };\n            _this._percent = 0;\n            /**\n             * Whether or not the thumb is sliding.\n             * Used to determine if there should be a transition for the thumb and fill track.\n             */\n            _this._isSliding = false;\n            /**\n             * Whether or not the slider is active (clicked or sliding).\n             * Used to shrink and grow the thumb as according to the Material Design spec.\n             */\n            _this._isActive = false;\n            /** The size of a tick interval as a percentage of the size of the track. */\n            _this._tickIntervalPercent = 0;\n            /** The dimensions of the slider. */\n            _this._sliderDimensions = null;\n            _this._controlValueAccessorChangeFn = function () { };\n            /** Subscription to the Directionality change EventEmitter. */\n            _this._dirChangeSubscription = rxjs.Subscription.EMPTY;\n            /** Called when the user has put their pointer down on the slider. */\n            _this._pointerDown = function (event) {\n                // Don't do anything if the slider is disabled or the\n                // user is using anything other than the main mouse button.\n                if (_this.disabled || _this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n                    return;\n                }\n                _this._runInsideZone(function () {\n                    var oldValue = _this.value;\n                    var pointerPosition = getPointerPositionOnPage(event);\n                    _this._isSliding = true;\n                    _this._lastPointerEvent = event;\n                    event.preventDefault();\n                    _this._focusHostElement();\n                    _this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n                    _this._bindGlobalEvents(event);\n                    _this._focusHostElement();\n                    _this._updateValueFromPosition(pointerPosition);\n                    _this._valueOnSlideStart = _this.value;\n                    _this._pointerPositionOnStart = pointerPosition;\n                    // Emit a change and input event if the value changed.\n                    if (oldValue != _this.value) {\n                        _this._emitInputEvent();\n                        _this._emitChangeEvent();\n                    }\n                });\n            };\n            /**\n             * Called when the user has moved their pointer after\n             * starting to drag. Bound on the document level.\n             */\n            _this._pointerMove = function (event) {\n                if (_this._isSliding) {\n                    // Prevent the slide from selecting anything else.\n                    event.preventDefault();\n                    var oldValue = _this.value;\n                    _this._lastPointerEvent = event;\n                    _this._updateValueFromPosition(getPointerPositionOnPage(event));\n                    // Native range elements always emit `input` events when the value changed while sliding.\n                    if (oldValue != _this.value) {\n                        _this._emitInputEvent();\n                    }\n                }\n            };\n            /** Called when the user has lifted their pointer. Bound on the document level. */\n            _this._pointerUp = function (event) {\n                if (_this._isSliding) {\n                    var pointerPositionOnStart = _this._pointerPositionOnStart;\n                    var currentPointerPosition = getPointerPositionOnPage(event);\n                    event.preventDefault();\n                    _this._removeGlobalEvents();\n                    _this._valueOnSlideStart = _this._pointerPositionOnStart = _this._lastPointerEvent = null;\n                    _this._isSliding = false;\n                    if (_this._valueOnSlideStart != _this.value && !_this.disabled &&\n                        pointerPositionOnStart && (pointerPositionOnStart.x !== currentPointerPosition.x ||\n                        pointerPositionOnStart.y !== currentPointerPosition.y)) {\n                        _this._emitChangeEvent();\n                    }\n                }\n            };\n            /** Called when the window has lost focus. */\n            _this._windowBlur = function () {\n                // If the window is blurred while dragging we need to stop dragging because the\n                // browser won't dispatch the `mouseup` and `touchend` events anymore.\n                if (_this._lastPointerEvent) {\n                    _this._pointerUp(_this._lastPointerEvent);\n                }\n            };\n            _this._document = document;\n            _this.tabIndex = parseInt(tabIndex) || 0;\n            _this._runOutsizeZone(function () {\n                var element = elementRef.nativeElement;\n                element.addEventListener('mousedown', _this._pointerDown, activeEventOptions);\n                element.addEventListener('touchstart', _this._pointerDown, activeEventOptions);\n            });\n            return _this;\n        }\n        Object.defineProperty(MatSlider.prototype, \"invert\", {\n            /** Whether the slider is inverted. */\n            get: function () { return this._invert; },\n            set: function (value) {\n                this._invert = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatSlider.prototype, \"max\", {\n            /** The maximum value that the slider can have. */\n            get: function () { return this._max; },\n            set: function (v) {\n                this._max = coercion.coerceNumberProperty(v, this._max);\n                this._percent = this._calculatePercentage(this._value);\n                // Since this also modifies the percentage, we need to let the change detection know.\n                this._changeDetectorRef.markForCheck();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatSlider.prototype, \"min\", {\n            /** The minimum value that the slider can have. */\n            get: function () { return this._min; },\n            set: function (v) {\n                this._min = coercion.coerceNumberProperty(v, this._min);\n                // If the value wasn't explicitly set by the user, set it to the min.\n                if (this._value === null) {\n                    this.value = this._min;\n                }\n                this._percent = this._calculatePercentage(this._value);\n                // Since this also modifies the percentage, we need to let the change detection know.\n                this._changeDetectorRef.markForCheck();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatSlider.prototype, \"step\", {\n            /** The values at which the thumb will snap. */\n            get: function () { return this._step; },\n            set: function (v) {\n                this._step = coercion.coerceNumberProperty(v, this._step);\n                if (this._step % 1 !== 0) {\n                    this._roundToDecimal = this._step.toString().split('.').pop().length;\n                }\n                // Since this could modify the label, we need to notify the change detection.\n                this._changeDetectorRef.markForCheck();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatSlider.prototype, \"thumbLabel\", {\n            /** Whether or not to show the thumb label. */\n            get: function () { return this._thumbLabel; },\n            set: function (value) { this._thumbLabel = coercion.coerceBooleanProperty(value); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatSlider.prototype, \"tickInterval\", {\n            /**\n             * How often to show ticks. Relative to the step so that a tick always appears on a step.\n             * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n             */\n            get: function () { return this._tickInterval; },\n            set: function (value) {\n                if (value === 'auto') {\n                    this._tickInterval = 'auto';\n                }\n                else if (typeof value === 'number' || typeof value === 'string') {\n                    this._tickInterval = coercion.coerceNumberProperty(value, this._tickInterval);\n                }\n                else {\n                    this._tickInterval = 0;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatSlider.prototype, \"value\", {\n            /** Value of the slider. */\n            get: function () {\n                // If the value needs to be read and it is still uninitialized, initialize it to the min.\n                if (this._value === null) {\n                    this.value = this._min;\n                }\n                return this._value;\n            },\n            set: function (v) {\n                if (v !== this._value) {\n                    var value = coercion.coerceNumberProperty(v);\n                    // While incrementing by a decimal we can end up with values like 33.300000000000004.\n                    // Truncate it to ensure that it matches the label and to make it easier to work with.\n                    if (this._roundToDecimal) {\n                        value = parseFloat(value.toFixed(this._roundToDecimal));\n                    }\n                    this._value = value;\n                    this._percent = this._calculatePercentage(this._value);\n                    // Since this also modifies the percentage, we need to let the change detection know.\n                    this._changeDetectorRef.markForCheck();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatSlider.prototype, \"vertical\", {\n            /** Whether the slider is vertical. */\n            get: function () { return this._vertical; },\n            set: function (value) {\n                this._vertical = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatSlider.prototype, \"displayValue\", {\n            /** The value to be used for display purposes. */\n            get: function () {\n                if (this.displayWith) {\n                    // Value is never null but since setters and getters cannot have\n                    // different types, the value getter is also typed to return null.\n                    return this.displayWith(this.value);\n                }\n                // Note that this could be improved further by rounding something like 0.999 to 1 or\n                // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n                // every change detection cycle.\n                if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n                    return this.value.toFixed(this._roundToDecimal);\n                }\n                return this.value || 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** set focus to the host element */\n        MatSlider.prototype.focus = function (options) {\n            this._focusHostElement(options);\n        };\n        /** blur the host element */\n        MatSlider.prototype.blur = function () {\n            this._blurHostElement();\n        };\n        Object.defineProperty(MatSlider.prototype, \"percent\", {\n            /** The percentage of the slider that coincides with the value. */\n            get: function () { return this._clamp(this._percent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatSlider.prototype, \"_invertAxis\", {\n            /**\n             * Whether the axis of the slider is inverted.\n             * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n             */\n            get: function () {\n                // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n                // top. However from a y-axis standpoint this is inverted.\n                return this.vertical ? !this.invert : this.invert;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatSlider.prototype, \"_isMinValue\", {\n            /** Whether the slider is at its minimum value. */\n            get: function () {\n                return this.percent === 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatSlider.prototype, \"_thumbGap\", {\n            /**\n             * The amount of space to leave between the slider thumb and the track fill & track background\n             * elements.\n             */\n            get: function () {\n                if (this.disabled) {\n                    return DISABLED_THUMB_GAP;\n                }\n                if (this._isMinValue && !this.thumbLabel) {\n                    return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n                }\n                return 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatSlider.prototype, \"_trackBackgroundStyles\", {\n            /** CSS styles for the track background element. */\n            get: function () {\n                var axis = this.vertical ? 'Y' : 'X';\n                var scale = this.vertical ? \"1, \" + (1 - this.percent) + \", 1\" : 1 - this.percent + \", 1, 1\";\n                var sign = this._shouldInvertMouseCoords() ? '-' : '';\n                return {\n                    // scale3d avoids some rendering issues in Chrome. See #12071.\n                    transform: \"translate\" + axis + \"(\" + sign + this._thumbGap + \"px) scale3d(\" + scale + \")\"\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatSlider.prototype, \"_trackFillStyles\", {\n            /** CSS styles for the track fill element. */\n            get: function () {\n                var percent = this.percent;\n                var axis = this.vertical ? 'Y' : 'X';\n                var scale = this.vertical ? \"1, \" + percent + \", 1\" : percent + \", 1, 1\";\n                var sign = this._shouldInvertMouseCoords() ? '' : '-';\n                return {\n                    // scale3d avoids some rendering issues in Chrome. See #12071.\n                    transform: \"translate\" + axis + \"(\" + sign + this._thumbGap + \"px) scale3d(\" + scale + \")\",\n                    // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n                    // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n                    // the value of the slider is 0, we can easily get into this situation. We force a\n                    // recalculation by changing the element's `display` when it goes from 0 to any other value.\n                    display: percent === 0 ? 'none' : ''\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatSlider.prototype, \"_ticksContainerStyles\", {\n            /** CSS styles for the ticks container element. */\n            get: function () {\n                var axis = this.vertical ? 'Y' : 'X';\n                // For a horizontal slider in RTL languages we push the ticks container off the left edge\n                // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n                var sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n                var offset = this._tickIntervalPercent / 2 * 100;\n                return {\n                    'transform': \"translate\" + axis + \"(\" + sign + offset + \"%)\"\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatSlider.prototype, \"_ticksStyles\", {\n            /** CSS styles for the ticks element. */\n            get: function () {\n                var tickSize = this._tickIntervalPercent * 100;\n                var backgroundSize = this.vertical ? \"2px \" + tickSize + \"%\" : tickSize + \"% 2px\";\n                var axis = this.vertical ? 'Y' : 'X';\n                // Depending on the direction we pushed the ticks container, push the ticks the opposite\n                // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n                // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n                var sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n                var rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n                var styles = {\n                    'backgroundSize': backgroundSize,\n                    // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n                    'transform': \"translateZ(0) translate\" + axis + \"(\" + sign + tickSize / 2 + \"%)\" + rotate\n                };\n                if (this._isMinValue && this._thumbGap) {\n                    var side = void 0;\n                    if (this.vertical) {\n                        side = this._invertAxis ? 'Bottom' : 'Top';\n                    }\n                    else {\n                        side = this._invertAxis ? 'Right' : 'Left';\n                    }\n                    styles[\"padding\" + side] = this._thumbGap + \"px\";\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatSlider.prototype, \"_thumbContainerStyles\", {\n            get: function () {\n                var axis = this.vertical ? 'Y' : 'X';\n                // For a horizontal slider in RTL languages we push the thumb container off the left edge\n                // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n                var invertOffset = (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n                var offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n                return {\n                    'transform': \"translate\" + axis + \"(-\" + offset + \"%)\"\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Whether mouse events should be converted to a slider position by calculating their distance\n         * from the right or bottom edge of the slider as opposed to the top or left.\n         */\n        MatSlider.prototype._shouldInvertMouseCoords = function () {\n            return (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n        };\n        /** The language direction for this slider element. */\n        MatSlider.prototype._getDirection = function () {\n            return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n        };\n        MatSlider.prototype.ngOnInit = function () {\n            var _this = this;\n            this._focusMonitor\n                .monitor(this._elementRef, true)\n                .subscribe(function (origin) {\n                _this._isActive = !!origin && origin !== 'keyboard';\n                _this._changeDetectorRef.detectChanges();\n            });\n            if (this._dir) {\n                this._dirChangeSubscription = this._dir.change.subscribe(function () {\n                    _this._changeDetectorRef.markForCheck();\n                });\n            }\n        };\n        MatSlider.prototype.ngOnDestroy = function () {\n            var element = this._elementRef.nativeElement;\n            element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n            element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n            this._lastPointerEvent = null;\n            this._removeGlobalEvents();\n            this._focusMonitor.stopMonitoring(this._elementRef);\n            this._dirChangeSubscription.unsubscribe();\n        };\n        MatSlider.prototype._onMouseenter = function () {\n            if (this.disabled) {\n                return;\n            }\n            // We save the dimensions of the slider here so we can use them to update the spacing of the\n            // ticks and determine where on the slider click and slide events happen.\n            this._sliderDimensions = this._getSliderDimensions();\n            this._updateTickIntervalPercent();\n        };\n        MatSlider.prototype._onFocus = function () {\n            // We save the dimensions of the slider here so we can use them to update the spacing of the\n            // ticks and determine where on the slider click and slide events happen.\n            this._sliderDimensions = this._getSliderDimensions();\n            this._updateTickIntervalPercent();\n        };\n        MatSlider.prototype._onBlur = function () {\n            this.onTouched();\n        };\n        MatSlider.prototype._onKeydown = function (event) {\n            if (this.disabled || keycodes.hasModifierKey(event)) {\n                return;\n            }\n            var oldValue = this.value;\n            switch (event.keyCode) {\n                case keycodes.PAGE_UP:\n                    this._increment(10);\n                    break;\n                case keycodes.PAGE_DOWN:\n                    this._increment(-10);\n                    break;\n                case keycodes.END:\n                    this.value = this.max;\n                    break;\n                case keycodes.HOME:\n                    this.value = this.min;\n                    break;\n                case keycodes.LEFT_ARROW:\n                    // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                    // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                    // about the slider indicates that it is inverted. They will expect left to be decrement,\n                    // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                    // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                    // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                    // sighted users, therefore we do not swap the meaning.\n                    this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                    break;\n                case keycodes.UP_ARROW:\n                    this._increment(1);\n                    break;\n                case keycodes.RIGHT_ARROW:\n                    // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                    this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                    break;\n                case keycodes.DOWN_ARROW:\n                    this._increment(-1);\n                    break;\n                default:\n                    // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                    // it.\n                    return;\n            }\n            if (oldValue != this.value) {\n                this._emitInputEvent();\n                this._emitChangeEvent();\n            }\n            this._isSliding = true;\n            event.preventDefault();\n        };\n        MatSlider.prototype._onKeyup = function () {\n            this._isSliding = false;\n        };\n        /** Use defaultView of injected document if available or fallback to global window reference */\n        MatSlider.prototype._getWindow = function () {\n            var _a;\n            return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n        };\n        /**\n         * Binds our global move and end events. They're bound at the document level and only while\n         * dragging so that the user doesn't have to keep their pointer exactly over the slider\n         * as they're swiping across the screen.\n         */\n        MatSlider.prototype._bindGlobalEvents = function (triggerEvent) {\n            // Note that we bind the events to the `document`, because it allows us to capture\n            // drag cancel events where the user's pointer is outside the browser window.\n            var document = this._document;\n            if (typeof document !== 'undefined' && document) {\n                var isTouch = isTouchEvent(triggerEvent);\n                var moveEventName = isTouch ? 'touchmove' : 'mousemove';\n                var endEventName = isTouch ? 'touchend' : 'mouseup';\n                document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n                document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n                if (isTouch) {\n                    document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n                }\n            }\n            var window = this._getWindow();\n            if (typeof window !== 'undefined' && window) {\n                window.addEventListener('blur', this._windowBlur);\n            }\n        };\n        /** Removes any global event listeners that we may have added. */\n        MatSlider.prototype._removeGlobalEvents = function () {\n            var document = this._document;\n            if (typeof document !== 'undefined' && document) {\n                document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n                document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n                document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n                document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n                document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n            }\n            var window = this._getWindow();\n            if (typeof window !== 'undefined' && window) {\n                window.removeEventListener('blur', this._windowBlur);\n            }\n        };\n        /** Increments the slider by the given number of steps (negative number decrements). */\n        MatSlider.prototype._increment = function (numSteps) {\n            this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n        };\n        /** Calculate the new value from the new physical location. The value will always be snapped. */\n        MatSlider.prototype._updateValueFromPosition = function (pos) {\n            if (!this._sliderDimensions) {\n                return;\n            }\n            var offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n            var size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            var posComponent = this.vertical ? pos.y : pos.x;\n            // The exact value is calculated from the event and used to find the closest snap value.\n            var percent = this._clamp((posComponent - offset) / size);\n            if (this._shouldInvertMouseCoords()) {\n                percent = 1 - percent;\n            }\n            // Since the steps may not divide cleanly into the max value, if the user\n            // slid to 0 or 100 percent, we jump to the min/max value. This approach\n            // is slightly more intuitive than using `Math.ceil` below, because it\n            // follows the user's pointer closer.\n            if (percent === 0) {\n                this.value = this.min;\n            }\n            else if (percent === 1) {\n                this.value = this.max;\n            }\n            else {\n                var exactValue = this._calculateValue(percent);\n                // This calculation finds the closest step by finding the closest\n                // whole number divisible by the step relative to the min.\n                var closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n                // The value needs to snap to the min and max.\n                this.value = this._clamp(closestValue, this.min, this.max);\n            }\n        };\n        /** Emits a change event if the current value is different from the last emitted value. */\n        MatSlider.prototype._emitChangeEvent = function () {\n            this._controlValueAccessorChangeFn(this.value);\n            this.valueChange.emit(this.value);\n            this.change.emit(this._createChangeEvent());\n        };\n        /** Emits an input event when the current value is different from the last emitted value. */\n        MatSlider.prototype._emitInputEvent = function () {\n            this.input.emit(this._createChangeEvent());\n        };\n        /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n        MatSlider.prototype._updateTickIntervalPercent = function () {\n            if (!this.tickInterval || !this._sliderDimensions) {\n                return;\n            }\n            if (this.tickInterval == 'auto') {\n                var trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n                var pixelsPerStep = trackSize * this.step / (this.max - this.min);\n                var stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n                var pixelsPerTick = stepsPerTick * this.step;\n                this._tickIntervalPercent = pixelsPerTick / trackSize;\n            }\n            else {\n                this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n            }\n        };\n        /** Creates a slider change object from the specified value. */\n        MatSlider.prototype._createChangeEvent = function (value) {\n            if (value === void 0) { value = this.value; }\n            var event = new MatSliderChange();\n            event.source = this;\n            event.value = value;\n            return event;\n        };\n        /** Calculates the percentage of the slider that a value is. */\n        MatSlider.prototype._calculatePercentage = function (value) {\n            return ((value || 0) - this.min) / (this.max - this.min);\n        };\n        /** Calculates the value a percentage of the slider corresponds to. */\n        MatSlider.prototype._calculateValue = function (percentage) {\n            return this.min + percentage * (this.max - this.min);\n        };\n        /** Return a number between two numbers. */\n        MatSlider.prototype._clamp = function (value, min, max) {\n            if (min === void 0) { min = 0; }\n            if (max === void 0) { max = 1; }\n            return Math.max(min, Math.min(value, max));\n        };\n        /**\n         * Get the bounding client rect of the slider track element.\n         * The track is used rather than the native element to ignore the extra space that the thumb can\n         * take up.\n         */\n        MatSlider.prototype._getSliderDimensions = function () {\n            return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n        };\n        /**\n         * Focuses the native element.\n         * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n         */\n        MatSlider.prototype._focusHostElement = function (options) {\n            this._elementRef.nativeElement.focus(options);\n        };\n        /** Blurs the native element. */\n        MatSlider.prototype._blurHostElement = function () {\n            this._elementRef.nativeElement.blur();\n        };\n        /** Runs a callback inside of the NgZone, if possible. */\n        MatSlider.prototype._runInsideZone = function (fn) {\n            // @breaking-change 9.0.0 Remove this function once `_ngZone` is a required parameter.\n            this._ngZone ? this._ngZone.run(fn) : fn();\n        };\n        /** Runs a callback outside of the NgZone, if possible. */\n        MatSlider.prototype._runOutsizeZone = function (fn) {\n            // @breaking-change 9.0.0 Remove this function once `_ngZone` is a required parameter.\n            this._ngZone ? this._ngZone.runOutsideAngular(fn) : fn();\n        };\n        /**\n         * Sets the model value. Implemented as part of ControlValueAccessor.\n         * @param value\n         */\n        MatSlider.prototype.writeValue = function (value) {\n            this.value = value;\n        };\n        /**\n         * Registers a callback to be triggered when the value has changed.\n         * Implemented as part of ControlValueAccessor.\n         * @param fn Callback to be registered.\n         */\n        MatSlider.prototype.registerOnChange = function (fn) {\n            this._controlValueAccessorChangeFn = fn;\n        };\n        /**\n         * Registers a callback to be triggered when the component is touched.\n         * Implemented as part of ControlValueAccessor.\n         * @param fn Callback to be registered.\n         */\n        MatSlider.prototype.registerOnTouched = function (fn) {\n            this.onTouched = fn;\n        };\n        /**\n         * Sets whether the component should be disabled.\n         * Implemented as part of ControlValueAccessor.\n         * @param isDisabled\n         */\n        MatSlider.prototype.setDisabledState = function (isDisabled) {\n            this.disabled = isDisabled;\n        };\n        MatSlider.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'mat-slider',\n                        exportAs: 'matSlider',\n                        providers: [MAT_SLIDER_VALUE_ACCESSOR],\n                        host: {\n                            '(focus)': '_onFocus()',\n                            '(blur)': '_onBlur()',\n                            '(keydown)': '_onKeydown($event)',\n                            '(keyup)': '_onKeyup()',\n                            '(mouseenter)': '_onMouseenter()',\n                            // On Safari starting to slide temporarily triggers text selection mode which\n                            // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n                            '(selectstart)': '$event.preventDefault()',\n                            'class': 'mat-slider mat-focus-indicator',\n                            'role': 'slider',\n                            '[tabIndex]': 'tabIndex',\n                            '[attr.aria-disabled]': 'disabled',\n                            '[attr.aria-valuemax]': 'max',\n                            '[attr.aria-valuemin]': 'min',\n                            '[attr.aria-valuenow]': 'value',\n                            '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                            '[class.mat-slider-disabled]': 'disabled',\n                            '[class.mat-slider-has-ticks]': 'tickInterval',\n                            '[class.mat-slider-horizontal]': '!vertical',\n                            '[class.mat-slider-axis-inverted]': '_invertAxis',\n                            // Class binding which is only used by the test harness as there is no other\n                            // way for the harness to detect if mouse coordinates need to be inverted.\n                            '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n                            '[class.mat-slider-sliding]': '_isSliding',\n                            '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                            '[class.mat-slider-vertical]': 'vertical',\n                            '[class.mat-slider-min-value]': '_isMinValue',\n                            '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n                            '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        },\n                        template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_trackBackgroundStyles\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_trackFillStyles\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_ticksContainerStyles\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_ticksStyles\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_thumbContainerStyles\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\",\n                        inputs: ['disabled', 'color', 'tabIndex'],\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        MatSlider.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: a11y.FocusMonitor },\n            { type: core.ChangeDetectorRef },\n            { type: bidi.Directionality, decorators: [{ type: core.Optional }] },\n            { type: String, decorators: [{ type: core.Attribute, args: ['tabindex',] }] },\n            { type: String, decorators: [{ type: core.Optional }, { type: core.Inject, args: [animations.ANIMATION_MODULE_TYPE,] }] },\n            { type: core.NgZone },\n            { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [common.DOCUMENT,] }] }\n        ]; };\n        MatSlider.propDecorators = {\n            invert: [{ type: core.Input }],\n            max: [{ type: core.Input }],\n            min: [{ type: core.Input }],\n            step: [{ type: core.Input }],\n            thumbLabel: [{ type: core.Input }],\n            tickInterval: [{ type: core.Input }],\n            value: [{ type: core.Input }],\n            displayWith: [{ type: core.Input }],\n            vertical: [{ type: core.Input }],\n            change: [{ type: core.Output }],\n            input: [{ type: core.Output }],\n            valueChange: [{ type: core.Output }],\n            _sliderWrapper: [{ type: core.ViewChild, args: ['sliderWrapper',] }]\n        };\n        return MatSlider;\n    }(_MatSliderMixinBase));\n    /** Returns whether an event is a touch event. */\n    function isTouchEvent(event) {\n        // This function is called for every pixel that the user has dragged so we need it to be\n        // as fast as possible. Since we only bind mouse events and touch events, we can assume\n        // that if the event's name starts with `t`, it's a touch event.\n        return event.type[0] === 't';\n    }\n    /** Gets the coordinates of a touch or mouse event relative to the viewport. */\n    function getPointerPositionOnPage(event) {\n        // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n        var point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n        return { x: point.clientX, y: point.clientY };\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MatSliderModule = /** @class */ (function () {\n        function MatSliderModule() {\n        }\n        MatSliderModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [common.CommonModule, core$1.MatCommonModule],\n                        exports: [MatSlider, core$1.MatCommonModule],\n                        declarations: [MatSlider],\n                    },] }\n        ];\n        return MatSliderModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.MAT_SLIDER_VALUE_ACCESSOR = MAT_SLIDER_VALUE_ACCESSOR;\n    exports.MatSlider = MatSlider;\n    exports.MatSliderChange = MatSliderChange;\n    exports.MatSliderModule = MatSliderModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-slider.umd.js.map\n"]}