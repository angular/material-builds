{"version":3,"sources":["src/material/material-radio-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","material","radio","testing","cdk","coercion","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__values","o","m","i","MatRadioGroupHarness","_super","arguments","with","options","HarnessPredicate","addOption","name","_checkRadioGroupName","getName","hostName","radioNames","_a","_getGroupNameFromHost","_getNamesFromRadioButtons","_checkRadioNamesInGroupEqual","Error","getId","host","getProperty","getCheckedRadioButton","_b","radioButton","e_1_1","e_1","_c","_d","getRadioButtons","isChecked","error","getCheckedValue","checkedRadio","getValue","filter","locatorForAll","MatRadioButtonHarness","checkRadioButton","radioButtons","JSON","stringify","check","getAttribute","groupNames","radioName","e_2_1","e_2","e_3","groupName","radioNames_1","radioNames_1_1","e_3_1","harness","indexOf","hostSelector","ComponentHarness","_this","_textLabel","locatorFor","_clickLabel","_input","stringMatches","getLabelText","checked","coerceBooleanProperty","isDisabled","disabled","isRequired","required","text","focus","blur","click","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk/coercion'), require('@angular/cdk/testing')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/radio/testing', ['exports', '@angular/cdk/coercion', '@angular/cdk/testing'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.radio = global.ng.material.radio || {}, global.ng.material.radio.testing = {}), global.ng.cdk.coercion, global.ng.cdk.testing));\n}(this, (function (exports, coercion, testing) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Harness for interacting with a standard mat-radio-group in tests. */\n    var MatRadioGroupHarness = /** @class */ (function (_super) {\n        __extends(MatRadioGroupHarness, _super);\n        function MatRadioGroupHarness() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a `MatRadioGroupHarness` that meets\n         * certain criteria.\n         * @param options Options for filtering which radio group instances are considered a match.\n         * @return a `HarnessPredicate` configured with the given options.\n         */\n        MatRadioGroupHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatRadioGroupHarness, options)\n                .addOption('name', options.name, this._checkRadioGroupName);\n        };\n        /** Gets the name of the radio-group. */\n        MatRadioGroupHarness.prototype.getName = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var hostName, radioNames;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._getGroupNameFromHost()];\n                        case 1:\n                            hostName = _a.sent();\n                            // It's not possible to always determine the \"name\" of a radio-group by reading\n                            // the attribute. This is because the radio-group does not set the \"name\" as an\n                            // element attribute if the \"name\" value is set through a binding.\n                            if (hostName !== null) {\n                                return [2 /*return*/, hostName];\n                            }\n                            return [4 /*yield*/, this._getNamesFromRadioButtons()];\n                        case 2:\n                            radioNames = _a.sent();\n                            if (!radioNames.length) {\n                                return [2 /*return*/, null];\n                            }\n                            if (!this._checkRadioNamesInGroupEqual(radioNames)) {\n                                throw Error('Radio buttons in radio-group have mismatching names.');\n                            }\n                            return [2 /*return*/, radioNames[0]];\n                    }\n                });\n            });\n        };\n        /** Gets the id of the radio-group. */\n        MatRadioGroupHarness.prototype.getId = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [2 /*return*/, (_a.sent()).getProperty('id')];\n                    }\n                });\n            });\n        };\n        /** Gets the checked radio-button in a radio-group. */\n        MatRadioGroupHarness.prototype.getCheckedRadioButton = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var _a, _b, radioButton, e_1_1;\n                var e_1, _c;\n                return __generator(this, function (_d) {\n                    switch (_d.label) {\n                        case 0:\n                            _d.trys.push([0, 6, 7, 8]);\n                            return [4 /*yield*/, this.getRadioButtons()];\n                        case 1:\n                            _a = __values.apply(void 0, [_d.sent()]), _b = _a.next();\n                            _d.label = 2;\n                        case 2:\n                            if (!!_b.done) return [3 /*break*/, 5];\n                            radioButton = _b.value;\n                            return [4 /*yield*/, radioButton.isChecked()];\n                        case 3:\n                            if (_d.sent()) {\n                                return [2 /*return*/, radioButton];\n                            }\n                            _d.label = 4;\n                        case 4:\n                            _b = _a.next();\n                            return [3 /*break*/, 2];\n                        case 5: return [3 /*break*/, 8];\n                        case 6:\n                            e_1_1 = _d.sent();\n                            e_1 = { error: e_1_1 };\n                            return [3 /*break*/, 8];\n                        case 7:\n                            try {\n                                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                            }\n                            finally { if (e_1) throw e_1.error; }\n                            return [7 /*endfinally*/];\n                        case 8: return [2 /*return*/, null];\n                    }\n                });\n            });\n        };\n        /** Gets the checked value of the radio-group. */\n        MatRadioGroupHarness.prototype.getCheckedValue = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var checkedRadio;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.getCheckedRadioButton()];\n                        case 1:\n                            checkedRadio = _a.sent();\n                            if (!checkedRadio) {\n                                return [2 /*return*/, null];\n                            }\n                            return [2 /*return*/, checkedRadio.getValue()];\n                    }\n                });\n            });\n        };\n        /**\n         * Gets a list of radio buttons which are part of the radio-group.\n         * @param filter Optionally filters which radio buttons are included.\n         */\n        MatRadioGroupHarness.prototype.getRadioButtons = function (filter) {\n            if (filter === void 0) { filter = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, this.locatorForAll(MatRadioButtonHarness.with(filter))()];\n                });\n            });\n        };\n        /**\n         * Checks a radio button in this group.\n         * @param filter An optional filter to apply to the child radio buttons. The first tab matching\n         *     the filter will be selected.\n         */\n        MatRadioGroupHarness.prototype.checkRadioButton = function (filter) {\n            if (filter === void 0) { filter = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                var radioButtons;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.getRadioButtons(filter)];\n                        case 1:\n                            radioButtons = _a.sent();\n                            if (!radioButtons.length) {\n                                throw Error(\"Could not find radio button matching \" + JSON.stringify(filter));\n                            }\n                            return [2 /*return*/, radioButtons[0].check()];\n                    }\n                });\n            });\n        };\n        /** Gets the name attribute of the host element. */\n        MatRadioGroupHarness.prototype._getGroupNameFromHost = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [2 /*return*/, (_a.sent()).getAttribute('name')];\n                    }\n                });\n            });\n        };\n        /** Gets a list of the name attributes of all child radio buttons. */\n        MatRadioGroupHarness.prototype._getNamesFromRadioButtons = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var groupNames, _a, _b, radio, radioName, e_2_1;\n                var e_2, _c;\n                return __generator(this, function (_d) {\n                    switch (_d.label) {\n                        case 0:\n                            groupNames = [];\n                            _d.label = 1;\n                        case 1:\n                            _d.trys.push([1, 7, 8, 9]);\n                            return [4 /*yield*/, this.getRadioButtons()];\n                        case 2:\n                            _a = __values.apply(void 0, [_d.sent()]), _b = _a.next();\n                            _d.label = 3;\n                        case 3:\n                            if (!!_b.done) return [3 /*break*/, 6];\n                            radio = _b.value;\n                            return [4 /*yield*/, radio.getName()];\n                        case 4:\n                            radioName = _d.sent();\n                            if (radioName !== null) {\n                                groupNames.push(radioName);\n                            }\n                            _d.label = 5;\n                        case 5:\n                            _b = _a.next();\n                            return [3 /*break*/, 3];\n                        case 6: return [3 /*break*/, 9];\n                        case 7:\n                            e_2_1 = _d.sent();\n                            e_2 = { error: e_2_1 };\n                            return [3 /*break*/, 9];\n                        case 8:\n                            try {\n                                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                            }\n                            finally { if (e_2) throw e_2.error; }\n                            return [7 /*endfinally*/];\n                        case 9: return [2 /*return*/, groupNames];\n                    }\n                });\n            });\n        };\n        /** Checks if the specified radio names are all equal. */\n        MatRadioGroupHarness.prototype._checkRadioNamesInGroupEqual = function (radioNames) {\n            var e_3, _a;\n            var groupName = null;\n            try {\n                for (var radioNames_1 = __values(radioNames), radioNames_1_1 = radioNames_1.next(); !radioNames_1_1.done; radioNames_1_1 = radioNames_1.next()) {\n                    var radioName = radioNames_1_1.value;\n                    if (groupName === null) {\n                        groupName = radioName;\n                    }\n                    else if (groupName !== radioName) {\n                        return false;\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (radioNames_1_1 && !radioNames_1_1.done && (_a = radioNames_1.return)) _a.call(radioNames_1);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            return true;\n        };\n        /**\n         * Checks if a radio-group harness has the given name. Throws if a radio-group with\n         * matching name could be found but has mismatching radio-button names.\n         */\n        MatRadioGroupHarness._checkRadioGroupName = function (harness, name) {\n            return __awaiter(this, void 0, void 0, function () {\n                var radioNames;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, harness._getGroupNameFromHost()];\n                        case 1:\n                            // Check if there is a radio-group which has the \"name\" attribute set\n                            // to the expected group name. It's not possible to always determine\n                            // the \"name\" of a radio-group by reading the attribute. This is because\n                            // the radio-group does not set the \"name\" as an element attribute if the\n                            // \"name\" value is set through a binding.\n                            if ((_a.sent()) === name) {\n                                return [2 /*return*/, true];\n                            }\n                            return [4 /*yield*/, harness._getNamesFromRadioButtons()];\n                        case 2:\n                            radioNames = _a.sent();\n                            if (radioNames.indexOf(name) === -1) {\n                                return [2 /*return*/, false];\n                            }\n                            if (!harness._checkRadioNamesInGroupEqual(radioNames)) {\n                                throw Error(\"The locator found a radio-group with name \\\"\" + name + \"\\\", but some \" +\n                                    \"radio-button's within the group have mismatching names, which is invalid.\");\n                            }\n                            return [2 /*return*/, true];\n                    }\n                });\n            });\n        };\n        /** The selector for the host element of a `MatRadioGroup` instance. */\n        MatRadioGroupHarness.hostSelector = 'mat-radio-group';\n        return MatRadioGroupHarness;\n    }(testing.ComponentHarness));\n    /** Harness for interacting with a standard mat-radio-button in tests. */\n    var MatRadioButtonHarness = /** @class */ (function (_super) {\n        __extends(MatRadioButtonHarness, _super);\n        function MatRadioButtonHarness() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._textLabel = _this.locatorFor('.mat-radio-label-content');\n            _this._clickLabel = _this.locatorFor('.mat-radio-label');\n            _this._input = _this.locatorFor('input');\n            return _this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a `MatRadioButtonHarness` that meets\n         * certain criteria.\n         * @param options Options for filtering which radio button instances are considered a match.\n         * @return a `HarnessPredicate` configured with the given options.\n         */\n        MatRadioButtonHarness.with = function (options) {\n            var _this = this;\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatRadioButtonHarness, options)\n                .addOption('label', options.label, function (harness, label) { return testing.HarnessPredicate.stringMatches(harness.getLabelText(), label); })\n                .addOption('name', options.name, function (harness, name) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, harness.getName()];\n                    case 1: return [2 /*return*/, (_a.sent()) === name];\n                }\n            }); }); });\n        };\n        /** Whether the radio-button is checked. */\n        MatRadioButtonHarness.prototype.isChecked = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var checked, _a;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0: return [4 /*yield*/, this._input()];\n                        case 1:\n                            checked = (_b.sent()).getProperty('checked');\n                            _a = coercion.coerceBooleanProperty;\n                            return [4 /*yield*/, checked];\n                        case 2: return [2 /*return*/, _a.apply(void 0, [_b.sent()])];\n                    }\n                });\n            });\n        };\n        /** Whether the radio-button is disabled. */\n        MatRadioButtonHarness.prototype.isDisabled = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var disabled, _a;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0: return [4 /*yield*/, this._input()];\n                        case 1:\n                            disabled = (_b.sent()).getAttribute('disabled');\n                            _a = coercion.coerceBooleanProperty;\n                            return [4 /*yield*/, disabled];\n                        case 2: return [2 /*return*/, _a.apply(void 0, [_b.sent()])];\n                    }\n                });\n            });\n        };\n        /** Whether the radio-button is required. */\n        MatRadioButtonHarness.prototype.isRequired = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var required, _a;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0: return [4 /*yield*/, this._input()];\n                        case 1:\n                            required = (_b.sent()).getAttribute('required');\n                            _a = coercion.coerceBooleanProperty;\n                            return [4 /*yield*/, required];\n                        case 2: return [2 /*return*/, _a.apply(void 0, [_b.sent()])];\n                    }\n                });\n            });\n        };\n        /** Gets the radio-button's name. */\n        MatRadioButtonHarness.prototype.getName = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._input()];\n                        case 1: return [2 /*return*/, (_a.sent()).getAttribute('name')];\n                    }\n                });\n            });\n        };\n        /** Gets the radio-button's id. */\n        MatRadioButtonHarness.prototype.getId = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [2 /*return*/, (_a.sent()).getProperty('id')];\n                    }\n                });\n            });\n        };\n        /**\n         * Gets the value of the radio-button. The radio-button value will be converted to a string.\n         *\n         * Note: This means that for radio-button's with an object as a value `[object Object]` is\n         * intentionally returned.\n         */\n        MatRadioButtonHarness.prototype.getValue = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._input()];\n                        case 1: return [2 /*return*/, (_a.sent()).getProperty('value')];\n                    }\n                });\n            });\n        };\n        /** Gets the radio-button's label text. */\n        MatRadioButtonHarness.prototype.getLabelText = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._textLabel()];\n                        case 1: return [2 /*return*/, (_a.sent()).text()];\n                    }\n                });\n            });\n        };\n        /** Focuses the radio-button. */\n        MatRadioButtonHarness.prototype.focus = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._input()];\n                        case 1: return [2 /*return*/, (_a.sent()).focus()];\n                    }\n                });\n            });\n        };\n        /** Blurs the radio-button. */\n        MatRadioButtonHarness.prototype.blur = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._input()];\n                        case 1: return [2 /*return*/, (_a.sent()).blur()];\n                    }\n                });\n            });\n        };\n        /**\n         * Puts the radio-button in a checked state by clicking it if it is currently unchecked,\n         * or doing nothing if it is already checked.\n         */\n        MatRadioButtonHarness.prototype.check = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.isChecked()];\n                        case 1:\n                            if (!!(_a.sent())) return [3 /*break*/, 3];\n                            return [4 /*yield*/, this._clickLabel()];\n                        case 2: return [2 /*return*/, (_a.sent()).click()];\n                        case 3: return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        /** The selector for the host element of a `MatRadioButton` instance. */\n        MatRadioButtonHarness.hostSelector = 'mat-radio-button';\n        return MatRadioButtonHarness;\n    }(testing.ComponentHarness));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.MatRadioButtonHarness = MatRadioButtonHarness;\n    exports.MatRadioGroupHarness = MatRadioGroupHarness;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-radio-testing.umd.js.map\n"]}