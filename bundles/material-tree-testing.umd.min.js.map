{"version":3,"sources":["src/material/material-tree-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","material","tree","testing","cdk","coercion","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","__","constructor","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","adopt","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","pop","length","push","__read","o","m","r","i","ar","error","__spread","arguments","concat","MatTreeNodeHarness","_super","_this","_toggle","locatorForOptional","with","options","getNodePredicate","type","HarnessPredicate","addOption","text","harness","stringMatches","getText","disabled","_a","isDisabled","expanded","isExpanded","level","getLevel","_b","coerceBooleanProperty","host","getAttribute","getProperty","coerceNumberProperty","exclude","toggle","click","expand","collapse","ContentContainerComponentHarness","hostSelector","MatTreeHarness","getNodes","filter","_d","locatorForAll","getTreeStructure","nodes","nodeInformation","parallel","map","node","all","_getTreeStructure","parentExpanded","_c","nodeLevel","nextNodeLevel","_addChildToNode","children","slice","child","ComponentHarness","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk/testing'), require('@angular/cdk/coercion')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/tree/testing', ['exports', '@angular/cdk/testing', '@angular/cdk/coercion'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.tree = global.ng.material.tree || {}, global.ng.material.tree.testing = {}), global.ng.cdk.testing, global.ng.cdk.coercion));\n}(this, (function (exports, testing, coercion) { 'use strict';\n\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation.\n\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    ***************************************************************************** */\n    /* global Reflect, Promise */\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b)\n                if (Object.prototype.hasOwnProperty.call(b, p))\n                    d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    function __extends(d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    }\n    var __assign = function () {\n        __assign = Object.assign || function __assign(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s)\n                    if (Object.prototype.hasOwnProperty.call(s, p))\n                        t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n    function __rest(s, e) {\n        var t = {};\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n                t[p] = s[p];\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                    t[p[i]] = s[p[i]];\n            }\n        return t;\n    }\n    function __decorate(decorators, target, key, desc) {\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n            r = Reflect.decorate(decorators, target, key, desc);\n        else\n            for (var i = decorators.length - 1; i >= 0; i--)\n                if (d = decorators[i])\n                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\n    }\n    function __param(paramIndex, decorator) {\n        return function (target, key) { decorator(target, key, paramIndex); };\n    }\n    function __metadata(metadataKey, metadataValue) {\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\")\n            return Reflect.metadata(metadataKey, metadataValue);\n    }\n    function __awaiter(thisArg, _arguments, P, generator) {\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) { try {\n                step(generator.next(value));\n            }\n            catch (e) {\n                reject(e);\n            } }\n            function rejected(value) { try {\n                step(generator[\"throw\"](value));\n            }\n            catch (e) {\n                reject(e);\n            } }\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    }\n    function __generator(thisArg, body) {\n        var _ = { label: 0, sent: function () { if (t[0] & 1)\n                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () { return this; }), g;\n        function verb(n) { return function (v) { return step([n, v]); }; }\n        function step(op) {\n            if (f)\n                throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                        return t;\n                    if (y = 0, t)\n                        op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2])\n                                _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                }\n                catch (e) {\n                    op = [6, e];\n                    y = 0;\n                }\n                finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5)\n                throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    }\n    var __createBinding = Object.create ? (function (o, m, k, k2) {\n        if (k2 === undefined)\n            k2 = k;\n        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });\n    }) : (function (o, m, k, k2) {\n        if (k2 === undefined)\n            k2 = k;\n        o[k2] = m[k];\n    });\n    function __exportStar(m, o) {\n        for (var p in m)\n            if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p))\n                __createBinding(o, m, p);\n    }\n    function __values(o) {\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n        if (m)\n            return m.call(o);\n        if (o && typeof o.length === \"number\")\n            return {\n                next: function () {\n                    if (o && i >= o.length)\n                        o = void 0;\n                    return { value: o && o[i++], done: !o };\n                }\n            };\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    }\n    function __read(o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m)\n            return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)\n                ar.push(r.value);\n        }\n        catch (error) {\n            e = { error: error };\n        }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"]))\n                    m.call(i);\n            }\n            finally {\n                if (e)\n                    throw e.error;\n            }\n        }\n        return ar;\n    }\n    function __spread() {\n        for (var ar = [], i = 0; i < arguments.length; i++)\n            ar = ar.concat(__read(arguments[i]));\n        return ar;\n    }\n    function __spreadArrays() {\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++)\n            s += arguments[i].length;\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n                r[k] = a[j];\n        return r;\n    }\n    ;\n    function __await(v) {\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\n    }\n    function __asyncGenerator(thisArg, _arguments, generator) {\n        if (!Symbol.asyncIterator)\n            throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n        function verb(n) { if (g[n])\n            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n        function resume(n, v) { try {\n            step(g[n](v));\n        }\n        catch (e) {\n            settle(q[0][3], e);\n        } }\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n        function fulfill(value) { resume(\"next\", value); }\n        function reject(value) { resume(\"throw\", value); }\n        function settle(f, v) { if (f(v), q.shift(), q.length)\n            resume(q[0][0], q[0][1]); }\n    }\n    function __asyncDelegator(o) {\n        var i, p;\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\n    }\n    function __asyncValues(o) {\n        if (!Symbol.asyncIterator)\n            throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var m = o[Symbol.asyncIterator], i;\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }\n    }\n    function __makeTemplateObject(cooked, raw) {\n        if (Object.defineProperty) {\n            Object.defineProperty(cooked, \"raw\", { value: raw });\n        }\n        else {\n            cooked.raw = raw;\n        }\n        return cooked;\n    }\n    ;\n    var __setModuleDefault = Object.create ? (function (o, v) {\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n    }) : function (o, v) {\n        o[\"default\"] = v;\n    };\n    function __importStar(mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k))\n                    __createBinding(result, mod, k);\n        __setModuleDefault(result, mod);\n        return result;\n    }\n    function __importDefault(mod) {\n        return (mod && mod.__esModule) ? mod : { default: mod };\n    }\n    function __classPrivateFieldGet(receiver, privateMap) {\n        if (!privateMap.has(receiver)) {\n            throw new TypeError(\"attempted to get private field on non-instance\");\n        }\n        return privateMap.get(receiver);\n    }\n    function __classPrivateFieldSet(receiver, privateMap, value) {\n        if (!privateMap.has(receiver)) {\n            throw new TypeError(\"attempted to set private field on non-instance\");\n        }\n        privateMap.set(receiver, value);\n        return value;\n    }\n\n    /** Harness for interacting with a standard Angular Material tree node. */\n    var MatTreeNodeHarness = /** @class */ (function (_super) {\n        __extends(MatTreeNodeHarness, _super);\n        function MatTreeNodeHarness() {\n            var _this = _super.apply(this, __spread(arguments)) || this;\n            _this._toggle = _this.locatorForOptional('[matTreeNodeToggle]');\n            return _this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a tree node with specific attributes.\n         * @param options Options for narrowing the search\n         * @return a `HarnessPredicate` configured with the given options.\n         */\n        MatTreeNodeHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return getNodePredicate(MatTreeNodeHarness, options);\n        };\n        /** Whether the tree node is expanded. */\n        MatTreeNodeHarness.prototype.isExpanded = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var _a;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            _a = coercion.coerceBooleanProperty;\n                            return [4 /*yield*/, this.host()];\n                        case 1: return [4 /*yield*/, (_b.sent()).getAttribute('aria-expanded')];\n                        case 2: return [2 /*return*/, _a.apply(void 0, [_b.sent()])];\n                    }\n                });\n            });\n        };\n        /** Whether the tree node is disabled. */\n        MatTreeNodeHarness.prototype.isDisabled = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var _a;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            _a = coercion.coerceBooleanProperty;\n                            return [4 /*yield*/, this.host()];\n                        case 1: return [4 /*yield*/, (_b.sent()).getProperty('aria-disabled')];\n                        case 2: return [2 /*return*/, _a.apply(void 0, [_b.sent()])];\n                    }\n                });\n            });\n        };\n        /** Gets the level of the tree node. Note that this gets the aria-level and is 1 indexed. */\n        MatTreeNodeHarness.prototype.getLevel = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var _a;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            _a = coercion.coerceNumberProperty;\n                            return [4 /*yield*/, this.host()];\n                        case 1: return [4 /*yield*/, (_b.sent()).getAttribute('aria-level')];\n                        case 2: return [2 /*return*/, _a.apply(void 0, [_b.sent()])];\n                    }\n                });\n            });\n        };\n        /** Gets the tree node's text. */\n        MatTreeNodeHarness.prototype.getText = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [2 /*return*/, (_a.sent()).text({ exclude: '.mat-tree-node, .mat-nested-tree-node, button' })];\n                    }\n                });\n            });\n        };\n        /** Toggles node between expanded/collapsed. Only works when node is not disabled. */\n        MatTreeNodeHarness.prototype.toggle = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var toggle;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._toggle()];\n                        case 1:\n                            toggle = _a.sent();\n                            if (toggle) {\n                                return [2 /*return*/, toggle.click()];\n                            }\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        /** Expands the node if it is collapsed. Only works when node is not disabled. */\n        MatTreeNodeHarness.prototype.expand = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.isExpanded()];\n                        case 1:\n                            if (!!(_a.sent())) return [3 /*break*/, 3];\n                            return [4 /*yield*/, this.toggle()];\n                        case 2:\n                            _a.sent();\n                            _a.label = 3;\n                        case 3: return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        /** Collapses the node if it is expanded. Only works when node is not disabled. */\n        MatTreeNodeHarness.prototype.collapse = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.isExpanded()];\n                        case 1:\n                            if (!_a.sent()) return [3 /*break*/, 3];\n                            return [4 /*yield*/, this.toggle()];\n                        case 2:\n                            _a.sent();\n                            _a.label = 3;\n                        case 3: return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        return MatTreeNodeHarness;\n    }(testing.ContentContainerComponentHarness));\n    /** The selector of the host element of a `MatTreeNode` instance. */\n    MatTreeNodeHarness.hostSelector = '.mat-tree-node, .mat-nested-tree-node';\n    function getNodePredicate(type, options) {\n        var _this = this;\n        return new testing.HarnessPredicate(type, options)\n            .addOption('text', options.text, function (harness, text) { return testing.HarnessPredicate.stringMatches(harness.getText(), text); })\n            .addOption('disabled', options.disabled, function (harness, disabled) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, harness.isDisabled()];\n                case 1: return [2 /*return*/, (_a.sent()) === disabled];\n            }\n        }); }); })\n            .addOption('expanded', options.expanded, function (harness, expanded) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, harness.isExpanded()];\n                case 1: return [2 /*return*/, (_a.sent()) === expanded];\n            }\n        }); }); })\n            .addOption('level', options.level, function (harness, level) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, harness.getLevel()];\n                case 1: return [2 /*return*/, (_a.sent()) === level];\n            }\n        }); }); });\n    }\n\n    /** Harness for interacting with a standard mat-tree in tests. */\n    var MatTreeHarness = /** @class */ (function (_super) {\n        __extends(MatTreeHarness, _super);\n        function MatTreeHarness() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a tree with specific attributes.\n         * @param options Options for narrowing the search\n         * @return a `HarnessPredicate` configured with the given options.\n         */\n        MatTreeHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatTreeHarness, options);\n        };\n        /** Gets all of the nodes in the tree. */\n        MatTreeHarness.prototype.getNodes = function (filter) {\n            if (filter === void 0) { filter = {}; }\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_d) {\n                    return [2 /*return*/, this.locatorForAll(MatTreeNodeHarness.with(filter))()];\n                });\n            });\n        };\n        /**\n         * Gets an object representation for the visible tree structure\n         * If a node is under an unexpanded node it will not be included.\n         * Eg.\n         * Tree (all nodes expanded):\n         * `\n         * <mat-tree>\n         *   <mat-tree-node>Node 1<mat-tree-node>\n         *   <mat-nested-tree-node>\n         *     Node 2\n         *     <mat-nested-tree-node>\n         *       Node 2.1\n         *       <mat-tree-node>\n         *         Node 2.1.1\n         *       <mat-tree-node>\n         *     <mat-nested-tree-node>\n         *     <mat-tree-node>\n         *       Node 2.2\n         *     <mat-tree-node>\n         *   <mat-nested-tree-node>\n         * </mat-tree>`\n         *\n         * Tree structure:\n         * {\n         *  children: [\n         *    {\n         *      text: 'Node 1',\n         *      children: [\n         *        {\n         *          text: 'Node 2',\n         *          children: [\n         *            {\n         *              text: 'Node 2.1',\n         *              children: [{text: 'Node 2.1.1'}]\n         *            },\n         *            {text: 'Node 2.2'}\n         *          ]\n         *        }\n         *      ]\n         *    }\n         *  ]\n         * };\n         */\n        MatTreeHarness.prototype.getTreeStructure = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var nodes, nodeInformation;\n                return __generator(this, function (_d) {\n                    switch (_d.label) {\n                        case 0: return [4 /*yield*/, this.getNodes()];\n                        case 1:\n                            nodes = _d.sent();\n                            return [4 /*yield*/, testing.parallel(function () { return nodes.map(function (node) {\n                                    return Promise.all([node.getLevel(), node.getText(), node.isExpanded()]);\n                                }); })];\n                        case 2:\n                            nodeInformation = _d.sent();\n                            return [2 /*return*/, this._getTreeStructure(nodeInformation, 1, true)];\n                    }\n                });\n            });\n        };\n        /**\n         * Recursively collect the structured text of the tree nodes.\n         * @param nodes A list of tree nodes\n         * @param level The level of nodes that are being accounted for during this iteration\n         * @param parentExpanded Whether the parent of the first node in param nodes is expanded\n         */\n        MatTreeHarness.prototype._getTreeStructure = function (nodes, level, parentExpanded) {\n            var _a, _b, _c;\n            var result = {};\n            for (var i = 0; i < nodes.length; i++) {\n                var _d = __read(nodes[i], 3), nodeLevel = _d[0], text = _d[1], expanded = _d[2];\n                var nextNodeLevel = (_b = (_a = nodes[i + 1]) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : -1;\n                // Return the accumulated value for the current level once we reach a shallower level node\n                if (nodeLevel < level) {\n                    return result;\n                }\n                // Skip deeper level nodes during this iteration, they will be picked up in a later iteration\n                if (nodeLevel > level) {\n                    continue;\n                }\n                // Only add to representation if it is visible (parent is expanded)\n                if (parentExpanded) {\n                    // Collect the data under this node according to the following rules:\n                    // 1. If the next node in the list is a sibling of the current node add it to the child list\n                    // 2. If the next node is a child of the current node, get the sub-tree structure for the\n                    //    child and add it under this node\n                    // 3. If the next node has a shallower level, we've reached the end of the child nodes for\n                    //    the current parent.\n                    if (nextNodeLevel === level) {\n                        this._addChildToNode(result, { text: text });\n                    }\n                    else if (nextNodeLevel > level) {\n                        var children = (_c = this._getTreeStructure(nodes.slice(i + 1), nextNodeLevel, expanded)) === null || _c === void 0 ? void 0 : _c.children;\n                        var child = children ? { text: text, children: children } : { text: text };\n                        this._addChildToNode(result, child);\n                    }\n                    else {\n                        this._addChildToNode(result, { text: text });\n                        return result;\n                    }\n                }\n            }\n            return result;\n        };\n        MatTreeHarness.prototype._addChildToNode = function (result, child) {\n            result.children ? result.children.push(child) : result.children = [child];\n        };\n        return MatTreeHarness;\n    }(testing.ComponentHarness));\n    /** The selector for the host element of a `MatTableHarness` instance. */\n    MatTreeHarness.hostSelector = '.mat-tree';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.MatTreeHarness = MatTreeHarness;\n    exports.MatTreeNodeHarness = MatTreeNodeHarness;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-tree-testing.umd.js.map\n"]}