{"version":3,"sources":["src/material/material-menu.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","material","menu","cdk","a11y","coercion","keycodes","core","rxjs","operators","animations","portal","common","bidi","overlay","platform","scrolling","this","core$1","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","matMenuAnimations","transformMenu","trigger","state","style","opacity","transform","transition","group","query","animate","fadeInItems","MatMenuContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_changeDetectorRef","_attached","Subject","attach","context","_portal","TemplatePortal","detach","_outlet","DomPortalOutlet","createElement","element","elementRef","nativeElement","parentNode","insertBefore","outletElement","markForCheck","isAttached","ngOnDestroy","dispose","decorators","type","Directive","args","selector","ctorParameters","TemplateRef","ComponentFactoryResolver","ApplicationRef","Injector","ViewContainerRef","undefined","Inject","DOCUMENT","ChangeDetectorRef","MAT_MENU_PANEL","InjectionToken","MatMenuItem","_super","_elementRef","document","_focusMonitor","_parentMenu","_this","role","_hovered","_focused","_highlighted","_triggersSubmenu","monitor","addItem","focus","origin","options","focusVia","_getHostElement","stopMonitoring","removeItem","complete","_getTabIndex","disabled","_checkDisabled","event","preventDefault","stopPropagation","_handleMouseEnter","getLabel","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","textContent","trim","Component","exportAs","inputs","host","[attr.role]","[class.mat-menu-item]","[class.mat-menu-item-highlighted]","[class.mat-menu-item-submenu-trigger]","[attr.tabindex]","[attr.aria-disabled]","[attr.disabled]","class","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","template","ElementRef","FocusMonitor","Optional","propDecorators","Input","HostListener","mixinDisableRipple","mixinDisabled","MatMenuItemBase","MAT_MENU_DEFAULT_OPTIONS","providedIn","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","backdropClass","menuPanelUid","_MatMenuBase","_ngZone","_defaultOptions","_xPosition","_yPosition","_directDescendantItems","QueryList","_tabSubscription","Subscription","EMPTY","_classList","_panelAnimationState","_animationDone","_overlapTrigger","_hasBackdrop","hasBackdrop","closed","EventEmitter","close","panelId","defineProperty","get","set","throwMatMenuInvalidPositionX","Error","setPositionClasses","enumerable","configurable","throwMatMenuInvalidPositionY","coerceBooleanProperty","classes","previousPanelClass","_previousPanelClass","split","forEach","className","panelClass","ngOnInit","ngAfterContentInit","_updateDirectDescendants","_keyManager","FocusKeyManager","withWrap","withTypeAhead","tabOut","subscribe","emit","changes","pipe","startWith","switchMap","items","merge","apply","map","item","focusedItem","updateActiveItem","destroy","unsubscribe","_item","_handleKeydown","keyCode","manager","ESCAPE","hasModifierKey","LEFT_ARROW","parentMenu","direction","RIGHT_ARROW","HOME","END","setFirstItemActive","setLastItemActive","UP_ARROW","DOWN_ARROW","setFocusOrigin","onKeydown","focusFirstItem","lazyContent","onStable","asObservable","take","_focusFirstItem","activeItem","first","parentElement","getAttribute","resetActiveItem","setActiveItem","setElevation","depth","newElevation","Math","min","customElevation","keys","find","c","startsWith","_previousElevation","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","_onAnimationStart","toState","activeItemIndex","scrollTop","_allItems","reset","filter","notifyOnChanges","NgZone","ContentChildren","descendants","ariaLabel","ariaLabelledby","ariaDescribedby","templateRef","ViewChild","ContentChild","classList","Output","MatMenu","_MatMenu","ngZone","defaultOptions","providers","provide","useExisting","styles","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","scrollStrategies","reposition","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","Overlay","useFactory","passiveEventListenerOptions","normalizePassiveListenerOptions","passive","MatMenuTrigger","_overlay","_element","scrollStrategy","_menuItemInstance","_dir","_overlayRef","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","restoreFocus","menuOpened","onMenuOpen","menuClosed","onMenuClose","addEventListener","triggersSubmenu","_scrollStrategy","v","_menu","reason","_destroyMenu","_checkMenu","_handleHover","removeEventListener","toggleMenu","closeMenu","openMenu","overlayRef","_createOverlay","overlayConfig","getConfig","_setPosition","positionStrategy","_getPortal","menuData","_menuClosingActions","_initMenu","menuOpen","_restoreFocus","takeUntil","_setIsMenuOpen","dir","_setMenuElevation","isOpen","throwMatMenuMissingError","config","_getOverlayConfig","_subscribeToPositions","keydownEvents","OverlayConfig","position","flexibleConnectedTo","withLockedPosition","withTransformOriginOn","positionChanges","change","connectionPair","overlayX","overlayY","_a","originX","originFallbackX","_b","overlayFallbackY","_c","originY","originFallbackY","_d","overlayFallbackX","offsetY","withPositions","backdrop","backdropClick","detachments","parentClose","of","hover","active","_handleMousedown","isFakeMousedownFromScreenReader","button","_handleClick","delay","asapScheduler","aria-haspopup","[attr.aria-expanded]","[attr.aria-controls]","(mousedown)","(keydown)","(click)","Self","Directionality","_deprecatedMatMenuTriggerFor","_MatMenuDirectivesModule","NgModule","MatCommonModule","declarations","MatMenuModule","imports","CommonModule","MatRippleModule","OverlayModule","CdkScrollableModule","ɵangular_material_src_material_menu_menu_a","ɵangular_material_src_material_menu_menu_b","ɵangular_material_src_material_menu_menu_c"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk/a11y'), require('@angular/cdk/coercion'), require('@angular/cdk/keycodes'), require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/animations'), require('@angular/cdk/portal'), require('@angular/common'), require('@angular/material/core'), require('@angular/cdk/bidi'), require('@angular/cdk/overlay'), require('@angular/cdk/platform'), require('@angular/cdk/scrolling')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/menu', ['exports', '@angular/cdk/a11y', '@angular/cdk/coercion', '@angular/cdk/keycodes', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/animations', '@angular/cdk/portal', '@angular/common', '@angular/material/core', '@angular/cdk/bidi', '@angular/cdk/overlay', '@angular/cdk/platform', '@angular/cdk/scrolling'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.menu = {}), global.ng.cdk.a11y, global.ng.cdk.coercion, global.ng.cdk.keycodes, global.ng.core, global.rxjs, global.rxjs.operators, global.ng.animations, global.ng.cdk.portal, global.ng.common, global.ng.material.core, global.ng.cdk.bidi, global.ng.cdk.overlay, global.ng.cdk.platform, global.ng.cdk.scrolling));\n}(this, (function (exports, a11y, coercion, keycodes, core, rxjs, operators, animations, portal, common, core$1, bidi, overlay, platform, scrolling) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Animations used by the mat-menu component.\n     * Animation duration and timing values are based on:\n     * https://material.io/guidelines/components/menus.html#menus-usage\n     * @docs-private\n     */\n    var matMenuAnimations = {\n        /**\n         * This animation controls the menu panel's entry and exit from the page.\n         *\n         * When the menu panel is added to the DOM, it scales in and fades in its border.\n         *\n         * When the menu panel is removed from the DOM, it simply fades out after a brief\n         * delay to display the ripple.\n         */\n        transformMenu: animations.trigger('transformMenu', [\n            animations.state('void', animations.style({\n                opacity: 0,\n                transform: 'scale(0.8)'\n            })),\n            animations.transition('void => enter', animations.group([\n                animations.query('.mat-menu-content, .mat-mdc-menu-content', animations.animate('100ms linear', animations.style({\n                    opacity: 1\n                }))),\n                animations.animate('120ms cubic-bezier(0, 0, 0.2, 1)', animations.style({ transform: 'scale(1)' })),\n            ])),\n            animations.transition('* => void', animations.animate('100ms 25ms linear', animations.style({ opacity: 0 })))\n        ]),\n        /**\n         * This animation fades in the background color and content of the menu panel\n         * after its containing element is scaled in.\n         */\n        fadeInItems: animations.trigger('fadeInItems', [\n            // TODO(crisbeto): this is inside the `transformMenu`\n            // now. Remove next time we do breaking changes.\n            animations.state('showing', animations.style({ opacity: 1 })),\n            animations.transition('void => *', [\n                animations.style({ opacity: 0 }),\n                animations.animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n            ])\n        ])\n    };\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     * @docs-private\n     */\n    var fadeInItems = matMenuAnimations.fadeInItems;\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     * @docs-private\n     */\n    var transformMenu = matMenuAnimations.transformMenu;\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Menu content that will be rendered lazily once the menu is opened.\n     */\n    var MatMenuContent = /** @class */ (function () {\n        function MatMenuContent(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n            this._template = _template;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._appRef = _appRef;\n            this._injector = _injector;\n            this._viewContainerRef = _viewContainerRef;\n            this._document = _document;\n            this._changeDetectorRef = _changeDetectorRef;\n            /** Emits when the menu content has been attached. */\n            this._attached = new rxjs.Subject();\n        }\n        /**\n         * Attaches the content with a particular context.\n         * @docs-private\n         */\n        MatMenuContent.prototype.attach = function (context) {\n            if (context === void 0) { context = {}; }\n            if (!this._portal) {\n                this._portal = new portal.TemplatePortal(this._template, this._viewContainerRef);\n            }\n            this.detach();\n            if (!this._outlet) {\n                this._outlet = new portal.DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n            }\n            var element = this._template.elementRef.nativeElement;\n            // Because we support opening the same menu from different triggers (which in turn have their\n            // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n            // risk it staying attached to a pane that's no longer in the DOM.\n            element.parentNode.insertBefore(this._outlet.outletElement, element);\n            // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n            // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n            // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n            // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n            // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n            // @breaking-change 9.0.0 Make change detector ref required\n            if (this._changeDetectorRef) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._portal.attach(this._outlet, context);\n            this._attached.next();\n        };\n        /**\n         * Detaches the content.\n         * @docs-private\n         */\n        MatMenuContent.prototype.detach = function () {\n            if (this._portal.isAttached) {\n                this._portal.detach();\n            }\n        };\n        MatMenuContent.prototype.ngOnDestroy = function () {\n            if (this._outlet) {\n                this._outlet.dispose();\n            }\n        };\n        MatMenuContent.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'ng-template[matMenuContent]'\n                    },] }\n        ];\n        /** @nocollapse */\n        MatMenuContent.ctorParameters = function () { return [\n            { type: core.TemplateRef },\n            { type: core.ComponentFactoryResolver },\n            { type: core.ApplicationRef },\n            { type: core.Injector },\n            { type: core.ViewContainerRef },\n            { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] },\n            { type: core.ChangeDetectorRef }\n        ]; };\n        return MatMenuContent;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n     * @docs-private\n     */\n    function throwMatMenuMissingError() {\n        throw Error(\"matMenuTriggerFor: must pass in an mat-menu instance.\\n\\n    Example:\\n      <mat-menu #menu=\\\"matMenu\\\"></mat-menu>\\n      <button [matMenuTriggerFor]=\\\"menu\\\"></button>\");\n    }\n    /**\n     * Throws an exception for the case when menu's x-position value isn't valid.\n     * In other words, it doesn't match 'before' or 'after'.\n     * @docs-private\n     */\n    function throwMatMenuInvalidPositionX() {\n        throw Error(\"xPosition value must be either 'before' or after'.\\n      Example: <mat-menu xPosition=\\\"before\\\" #menu=\\\"matMenu\\\"></mat-menu>\");\n    }\n    /**\n     * Throws an exception for the case when menu's y-position value isn't valid.\n     * In other words, it doesn't match 'above' or 'below'.\n     * @docs-private\n     */\n    function throwMatMenuInvalidPositionY() {\n        throw Error(\"yPosition value must be either 'above' or below'.\\n      Example: <mat-menu yPosition=\\\"above\\\" #menu=\\\"matMenu\\\"></mat-menu>\");\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injection token used to provide the parent menu to menu-specific components.\n     * @docs-private\n     */\n    var MAT_MENU_PANEL = new core.InjectionToken('MAT_MENU_PANEL');\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Boilerplate for applying mixins to MatMenuItem.\n    /** @docs-private */\n    var MatMenuItemBase = /** @class */ (function () {\n        function MatMenuItemBase() {\n        }\n        return MatMenuItemBase;\n    }());\n    var _MatMenuItemMixinBase = core$1.mixinDisableRipple(core$1.mixinDisabled(MatMenuItemBase));\n    /**\n     * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n     */\n    var MatMenuItem = /** @class */ (function (_super) {\n        __extends(MatMenuItem, _super);\n        function MatMenuItem(_elementRef, document, _focusMonitor, _parentMenu) {\n            var _this = \n            // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n            _super.call(this) || this;\n            _this._elementRef = _elementRef;\n            _this._focusMonitor = _focusMonitor;\n            _this._parentMenu = _parentMenu;\n            /** ARIA role for the menu item. */\n            _this.role = 'menuitem';\n            /** Stream that emits when the menu item is hovered. */\n            _this._hovered = new rxjs.Subject();\n            /** Stream that emits when the menu item is focused. */\n            _this._focused = new rxjs.Subject();\n            /** Whether the menu item is highlighted. */\n            _this._highlighted = false;\n            /** Whether the menu item acts as a trigger for a sub-menu. */\n            _this._triggersSubmenu = false;\n            if (_focusMonitor) {\n                // Start monitoring the element so it gets the appropriate focused classes. We want\n                // to show the focus style for menu items only when the focus was not caused by a\n                // mouse or touch interaction.\n                _focusMonitor.monitor(_this._elementRef, false);\n            }\n            if (_parentMenu && _parentMenu.addItem) {\n                _parentMenu.addItem(_this);\n            }\n            _this._document = document;\n            return _this;\n        }\n        /** Focuses the menu item. */\n        MatMenuItem.prototype.focus = function (origin, options) {\n            if (origin === void 0) { origin = 'program'; }\n            if (this._focusMonitor) {\n                this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n            }\n            else {\n                this._getHostElement().focus(options);\n            }\n            this._focused.next(this);\n        };\n        MatMenuItem.prototype.ngOnDestroy = function () {\n            if (this._focusMonitor) {\n                this._focusMonitor.stopMonitoring(this._elementRef);\n            }\n            if (this._parentMenu && this._parentMenu.removeItem) {\n                this._parentMenu.removeItem(this);\n            }\n            this._hovered.complete();\n            this._focused.complete();\n        };\n        /** Used to set the `tabindex`. */\n        MatMenuItem.prototype._getTabIndex = function () {\n            return this.disabled ? '-1' : '0';\n        };\n        /** Returns the host DOM element. */\n        MatMenuItem.prototype._getHostElement = function () {\n            return this._elementRef.nativeElement;\n        };\n        /** Prevents the default element actions if it is disabled. */\n        // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n        // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n        // ViewEngine they're overwritten.\n        // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n        // tslint:disable-next-line:no-host-decorator-in-concrete\n        MatMenuItem.prototype._checkDisabled = function (event) {\n            if (this.disabled) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        };\n        /** Emits to the hover stream. */\n        // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n        // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n        // ViewEngine they're overwritten.\n        // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n        // tslint:disable-next-line:no-host-decorator-in-concrete\n        MatMenuItem.prototype._handleMouseEnter = function () {\n            this._hovered.next(this);\n        };\n        /** Gets the label to be used when determining whether the option should be focused. */\n        MatMenuItem.prototype.getLabel = function () {\n            var element = this._elementRef.nativeElement;\n            var textNodeType = this._document ? this._document.TEXT_NODE : 3;\n            var output = '';\n            if (element.childNodes) {\n                var length_1 = element.childNodes.length;\n                // Go through all the top-level text nodes and extract their text.\n                // We skip anything that's not a text node to prevent the text from\n                // being thrown off by something like an icon.\n                for (var i = 0; i < length_1; i++) {\n                    if (element.childNodes[i].nodeType === textNodeType) {\n                        output += element.childNodes[i].textContent;\n                    }\n                }\n            }\n            return output.trim();\n        };\n        MatMenuItem.decorators = [\n            { type: core.Component, args: [{\n                        selector: '[mat-menu-item]',\n                        exportAs: 'matMenuItem',\n                        inputs: ['disabled', 'disableRipple'],\n                        host: {\n                            '[attr.role]': 'role',\n                            '[class.mat-menu-item]': 'true',\n                            '[class.mat-menu-item-highlighted]': '_highlighted',\n                            '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                            '[attr.tabindex]': '_getTabIndex()',\n                            '[attr.aria-disabled]': 'disabled.toString()',\n                            '[attr.disabled]': 'disabled || null',\n                            'class': 'mat-focus-indicator',\n                        },\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        encapsulation: core.ViewEncapsulation.None,\n                        template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\"\n                    }] }\n        ];\n        /** @nocollapse */\n        MatMenuItem.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] },\n            { type: a11y.FocusMonitor },\n            { type: undefined, decorators: [{ type: core.Inject, args: [MAT_MENU_PANEL,] }, { type: core.Optional }] }\n        ]; };\n        MatMenuItem.propDecorators = {\n            role: [{ type: core.Input }],\n            _checkDisabled: [{ type: core.HostListener, args: ['click', ['$event'],] }],\n            _handleMouseEnter: [{ type: core.HostListener, args: ['mouseenter',] }]\n        };\n        return MatMenuItem;\n    }(_MatMenuItemMixinBase));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Injection token to be used to override the default options for `mat-menu`. */\n    var MAT_MENU_DEFAULT_OPTIONS = new core.InjectionToken('mat-menu-default-options', {\n        providedIn: 'root',\n        factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n    });\n    /** @docs-private */\n    function MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n        return {\n            overlapTrigger: false,\n            xPosition: 'after',\n            yPosition: 'below',\n            backdropClass: 'cdk-overlay-transparent-backdrop',\n        };\n    }\n    /**\n     * Start elevation for the menu panel.\n     * @docs-private\n     */\n    var MAT_MENU_BASE_ELEVATION = 4;\n    var menuPanelUid = 0;\n    /** Base class with all of the `MatMenu` functionality. */\n    var _MatMenuBase = /** @class */ (function () {\n        function _MatMenuBase(_elementRef, _ngZone, _defaultOptions) {\n            this._elementRef = _elementRef;\n            this._ngZone = _ngZone;\n            this._defaultOptions = _defaultOptions;\n            this._xPosition = this._defaultOptions.xPosition;\n            this._yPosition = this._defaultOptions.yPosition;\n            /** Only the direct descendant menu items. */\n            this._directDescendantItems = new core.QueryList();\n            /** Subscription to tab events on the menu panel */\n            this._tabSubscription = rxjs.Subscription.EMPTY;\n            /** Config object to be passed into the menu's ngClass */\n            this._classList = {};\n            /** Current state of the panel animation. */\n            this._panelAnimationState = 'void';\n            /** Emits whenever an animation on the menu completes. */\n            this._animationDone = new rxjs.Subject();\n            /** Class to be added to the backdrop element. */\n            this.backdropClass = this._defaultOptions.backdropClass;\n            this._overlapTrigger = this._defaultOptions.overlapTrigger;\n            this._hasBackdrop = this._defaultOptions.hasBackdrop;\n            /** Event emitted when the menu is closed. */\n            this.closed = new core.EventEmitter();\n            /**\n             * Event emitted when the menu is closed.\n             * @deprecated Switch to `closed` instead\n             * @breaking-change 8.0.0\n             */\n            this.close = this.closed;\n            this.panelId = \"mat-menu-panel-\" + menuPanelUid++;\n        }\n        Object.defineProperty(_MatMenuBase.prototype, \"xPosition\", {\n            /** Position of the menu in the X axis. */\n            get: function () { return this._xPosition; },\n            set: function (value) {\n                if (value !== 'before' && value !== 'after') {\n                    throwMatMenuInvalidPositionX();\n                }\n                this._xPosition = value;\n                this.setPositionClasses();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(_MatMenuBase.prototype, \"yPosition\", {\n            /** Position of the menu in the Y axis. */\n            get: function () { return this._yPosition; },\n            set: function (value) {\n                if (value !== 'above' && value !== 'below') {\n                    throwMatMenuInvalidPositionY();\n                }\n                this._yPosition = value;\n                this.setPositionClasses();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(_MatMenuBase.prototype, \"overlapTrigger\", {\n            /** Whether the menu should overlap its trigger. */\n            get: function () { return this._overlapTrigger; },\n            set: function (value) {\n                this._overlapTrigger = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(_MatMenuBase.prototype, \"hasBackdrop\", {\n            /** Whether the menu has a backdrop. */\n            get: function () { return this._hasBackdrop; },\n            set: function (value) {\n                this._hasBackdrop = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(_MatMenuBase.prototype, \"panelClass\", {\n            /**\n             * This method takes classes set on the host mat-menu element and applies them on the\n             * menu template that displays in the overlay container.  Otherwise, it's difficult\n             * to style the containing menu from outside the component.\n             * @param classes list of class names\n             */\n            set: function (classes) {\n                var _this = this;\n                var previousPanelClass = this._previousPanelClass;\n                if (previousPanelClass && previousPanelClass.length) {\n                    previousPanelClass.split(' ').forEach(function (className) {\n                        _this._classList[className] = false;\n                    });\n                }\n                this._previousPanelClass = classes;\n                if (classes && classes.length) {\n                    classes.split(' ').forEach(function (className) {\n                        _this._classList[className] = true;\n                    });\n                    this._elementRef.nativeElement.className = '';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(_MatMenuBase.prototype, \"classList\", {\n            /**\n             * This method takes classes set on the host mat-menu element and applies them on the\n             * menu template that displays in the overlay container.  Otherwise, it's difficult\n             * to style the containing menu from outside the component.\n             * @deprecated Use `panelClass` instead.\n             * @breaking-change 8.0.0\n             */\n            get: function () { return this.panelClass; },\n            set: function (classes) { this.panelClass = classes; },\n            enumerable: true,\n            configurable: true\n        });\n        _MatMenuBase.prototype.ngOnInit = function () {\n            this.setPositionClasses();\n        };\n        _MatMenuBase.prototype.ngAfterContentInit = function () {\n            var _this = this;\n            this._updateDirectDescendants();\n            this._keyManager = new a11y.FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead();\n            this._tabSubscription = this._keyManager.tabOut.subscribe(function () { return _this.closed.emit('tab'); });\n            // If a user manually (programatically) focuses a menu item, we need to reflect that focus\n            // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n            // is internal and we know that it gets completed on destroy.\n            this._directDescendantItems.changes.pipe(operators.startWith(this._directDescendantItems), operators.switchMap(function (items) { return rxjs.merge.apply(void 0, __spread(items.map(function (item) { return item._focused; }))); })).subscribe(function (focusedItem) { return _this._keyManager.updateActiveItem(focusedItem); });\n        };\n        _MatMenuBase.prototype.ngOnDestroy = function () {\n            this._directDescendantItems.destroy();\n            this._tabSubscription.unsubscribe();\n            this.closed.complete();\n        };\n        /** Stream that emits whenever the hovered menu item changes. */\n        _MatMenuBase.prototype._hovered = function () {\n            // Coerce the `changes` property because Angular types it as `Observable<any>`\n            var itemChanges = this._directDescendantItems.changes;\n            return itemChanges.pipe(operators.startWith(this._directDescendantItems), operators.switchMap(function (items) { return rxjs.merge.apply(void 0, __spread(items.map(function (item) { return item._hovered; }))); }));\n        };\n        /*\n         * Registers a menu item with the menu.\n         * @docs-private\n         * @deprecated No longer being used. To be removed.\n         * @breaking-change 9.0.0\n         */\n        _MatMenuBase.prototype.addItem = function (_item) { };\n        /**\n         * Removes an item from the menu.\n         * @docs-private\n         * @deprecated No longer being used. To be removed.\n         * @breaking-change 9.0.0\n         */\n        _MatMenuBase.prototype.removeItem = function (_item) { };\n        /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n        _MatMenuBase.prototype._handleKeydown = function (event) {\n            var keyCode = event.keyCode;\n            var manager = this._keyManager;\n            switch (keyCode) {\n                case keycodes.ESCAPE:\n                    if (!keycodes.hasModifierKey(event)) {\n                        event.preventDefault();\n                        this.closed.emit('keydown');\n                    }\n                    break;\n                case keycodes.LEFT_ARROW:\n                    if (this.parentMenu && this.direction === 'ltr') {\n                        this.closed.emit('keydown');\n                    }\n                    break;\n                case keycodes.RIGHT_ARROW:\n                    if (this.parentMenu && this.direction === 'rtl') {\n                        this.closed.emit('keydown');\n                    }\n                    break;\n                case keycodes.HOME:\n                case keycodes.END:\n                    if (!keycodes.hasModifierKey(event)) {\n                        keyCode === keycodes.HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                        event.preventDefault();\n                    }\n                    break;\n                default:\n                    if (keyCode === keycodes.UP_ARROW || keyCode === keycodes.DOWN_ARROW) {\n                        manager.setFocusOrigin('keyboard');\n                    }\n                    manager.onKeydown(event);\n            }\n        };\n        /**\n         * Focus the first item in the menu.\n         * @param origin Action from which the focus originated. Used to set the correct styling.\n         */\n        _MatMenuBase.prototype.focusFirstItem = function (origin) {\n            var _this = this;\n            if (origin === void 0) { origin = 'program'; }\n            // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n            if (this.lazyContent) {\n                this._ngZone.onStable.asObservable()\n                    .pipe(operators.take(1))\n                    .subscribe(function () { return _this._focusFirstItem(origin); });\n            }\n            else {\n                this._focusFirstItem(origin);\n            }\n        };\n        /**\n         * Actual implementation that focuses the first item. Needs to be separated\n         * out so we don't repeat the same logic in the public `focusFirstItem` method.\n         */\n        _MatMenuBase.prototype._focusFirstItem = function (origin) {\n            var manager = this._keyManager;\n            manager.setFocusOrigin(origin).setFirstItemActive();\n            // If there's no active item at this point, it means that all the items are disabled.\n            // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n            // give _some_ feedback to screen readers.\n            if (!manager.activeItem && this._directDescendantItems.length) {\n                var element = this._directDescendantItems.first._getHostElement().parentElement;\n                // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n                // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n                // because the panel is inside an `ng-template`. We work around it by starting from one of\n                // the items and walking up the DOM.\n                while (element) {\n                    if (element.getAttribute('role') === 'menu') {\n                        element.focus();\n                        break;\n                    }\n                    else {\n                        element = element.parentElement;\n                    }\n                }\n            }\n        };\n        /**\n         * Resets the active item in the menu. This is used when the menu is opened, allowing\n         * the user to start from the first option when pressing the down arrow.\n         */\n        _MatMenuBase.prototype.resetActiveItem = function () {\n            this._keyManager.setActiveItem(-1);\n        };\n        /**\n         * Sets the menu panel elevation.\n         * @param depth Number of parent menus that come before the menu.\n         */\n        _MatMenuBase.prototype.setElevation = function (depth) {\n            // The elevation starts at the base and increases by one for each level.\n            // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n            var elevation = Math.min(MAT_MENU_BASE_ELEVATION + depth, 24);\n            var newElevation = \"mat-elevation-z\" + elevation;\n            var customElevation = Object.keys(this._classList).find(function (c) { return c.startsWith('mat-elevation-z'); });\n            if (!customElevation || customElevation === this._previousElevation) {\n                if (this._previousElevation) {\n                    this._classList[this._previousElevation] = false;\n                }\n                this._classList[newElevation] = true;\n                this._previousElevation = newElevation;\n            }\n        };\n        /**\n         * Adds classes to the menu panel based on its position. Can be used by\n         * consumers to add specific styling based on the position.\n         * @param posX Position of the menu along the x axis.\n         * @param posY Position of the menu along the y axis.\n         * @docs-private\n         */\n        _MatMenuBase.prototype.setPositionClasses = function (posX, posY) {\n            if (posX === void 0) { posX = this.xPosition; }\n            if (posY === void 0) { posY = this.yPosition; }\n            var classes = this._classList;\n            classes['mat-menu-before'] = posX === 'before';\n            classes['mat-menu-after'] = posX === 'after';\n            classes['mat-menu-above'] = posY === 'above';\n            classes['mat-menu-below'] = posY === 'below';\n        };\n        /** Starts the enter animation. */\n        _MatMenuBase.prototype._startAnimation = function () {\n            // @breaking-change 8.0.0 Combine with _resetAnimation.\n            this._panelAnimationState = 'enter';\n        };\n        /** Resets the panel animation to its initial state. */\n        _MatMenuBase.prototype._resetAnimation = function () {\n            // @breaking-change 8.0.0 Combine with _startAnimation.\n            this._panelAnimationState = 'void';\n        };\n        /** Callback that is invoked when the panel animation completes. */\n        _MatMenuBase.prototype._onAnimationDone = function (event) {\n            this._animationDone.next(event);\n            this._isAnimating = false;\n        };\n        _MatMenuBase.prototype._onAnimationStart = function (event) {\n            this._isAnimating = true;\n            // Scroll the content element to the top as soon as the animation starts. This is necessary,\n            // because we move focus to the first item while it's still being animated, which can throw\n            // the browser off when it determines the scroll position. Alternatively we can move focus\n            // when the animation is done, however moving focus asynchronously will interrupt screen\n            // readers which are in the process of reading out the menu already. We take the `element`\n            // from the `event` since we can't use a `ViewChild` to access the pane.\n            if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n                event.element.scrollTop = 0;\n            }\n        };\n        /**\n         * Sets up a stream that will keep track of any newly-added menu items and will update the list\n         * of direct descendants. We collect the descendants this way, because `_allItems` can include\n         * items that are part of child menus, and using a custom way of registering items is unreliable\n         * when it comes to maintaining the item order.\n         */\n        _MatMenuBase.prototype._updateDirectDescendants = function () {\n            var _this = this;\n            this._allItems.changes\n                .pipe(operators.startWith(this._allItems))\n                .subscribe(function (items) {\n                _this._directDescendantItems.reset(items.filter(function (item) { return item._parentMenu === _this; }));\n                _this._directDescendantItems.notifyOnChanges();\n            });\n        };\n        _MatMenuBase.decorators = [\n            { type: core.Directive }\n        ];\n        /** @nocollapse */\n        _MatMenuBase.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: core.NgZone },\n            { type: undefined, decorators: [{ type: core.Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n        ]; };\n        _MatMenuBase.propDecorators = {\n            _allItems: [{ type: core.ContentChildren, args: [MatMenuItem, { descendants: true },] }],\n            backdropClass: [{ type: core.Input }],\n            ariaLabel: [{ type: core.Input, args: ['aria-label',] }],\n            ariaLabelledby: [{ type: core.Input, args: ['aria-labelledby',] }],\n            ariaDescribedby: [{ type: core.Input, args: ['aria-describedby',] }],\n            xPosition: [{ type: core.Input }],\n            yPosition: [{ type: core.Input }],\n            templateRef: [{ type: core.ViewChild, args: [core.TemplateRef,] }],\n            items: [{ type: core.ContentChildren, args: [MatMenuItem, { descendants: false },] }],\n            lazyContent: [{ type: core.ContentChild, args: [MatMenuContent,] }],\n            overlapTrigger: [{ type: core.Input }],\n            hasBackdrop: [{ type: core.Input }],\n            panelClass: [{ type: core.Input, args: ['class',] }],\n            classList: [{ type: core.Input }],\n            closed: [{ type: core.Output }],\n            close: [{ type: core.Output }]\n        };\n        return _MatMenuBase;\n    }());\n    /** @docs-private We show the \"_MatMenu\" class as \"MatMenu\" in the docs. */\n    var MatMenu = /** @class */ (function (_super) {\n        __extends(MatMenu, _super);\n        function MatMenu() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MatMenu.decorators = [\n            { type: core.Directive }\n        ];\n        return MatMenu;\n    }(_MatMenuBase));\n    // Note on the weird inheritance setup: we need three classes, because the MDC-based menu has to\n    // extend `MatMenu`, however keeping a reference to it will cause the inlined template and styles\n    // to be retained as well. The MDC menu also has to provide itself as a `MatMenu` in order for\n    // queries and DI to work correctly, while still not referencing the actual menu class.\n    // Class responsibility is split up as follows:\n    // * _MatMenuBase - provides all the functionality without any of the Angular metadata.\n    // * MatMenu - keeps the same name symbol name as the current menu and\n    // is used as a provider for DI and query purposes.\n    // * _MatMenu - the actual menu component implementation with the Angular metadata that should\n    // be tree shaken away for MDC.\n    /** @docs-public MatMenu */\n    var _MatMenu = /** @class */ (function (_super) {\n        __extends(_MatMenu, _super);\n        function _MatMenu(elementRef, ngZone, defaultOptions) {\n            return _super.call(this, elementRef, ngZone, defaultOptions) || this;\n        }\n        _MatMenu.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'mat-menu',\n                        template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        encapsulation: core.ViewEncapsulation.None,\n                        exportAs: 'matMenu',\n                        animations: [\n                            matMenuAnimations.transformMenu,\n                            matMenuAnimations.fadeInItems\n                        ],\n                        providers: [\n                            { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n                            { provide: MatMenu, useExisting: _MatMenu }\n                        ],\n                        styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        _MatMenu.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: core.NgZone },\n            { type: undefined, decorators: [{ type: core.Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n        ]; };\n        return _MatMenu;\n    }(MatMenu));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Injection token that determines the scroll handling while the menu is open. */\n    var MAT_MENU_SCROLL_STRATEGY = new core.InjectionToken('mat-menu-scroll-strategy');\n    /** @docs-private */\n    function MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n        return function () { return overlay.scrollStrategies.reposition(); };\n    }\n    /** @docs-private */\n    var MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n        provide: MAT_MENU_SCROLL_STRATEGY,\n        deps: [overlay.Overlay],\n        useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n    };\n    /** Default top padding of the menu panel. */\n    var MENU_PANEL_TOP_PADDING = 8;\n    /** Options for binding a passive event listener. */\n    var passiveEventListenerOptions = platform.normalizePassiveListenerOptions({ passive: true });\n    // TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n    /** Directive applied to an element that should trigger a `mat-menu`. */\n    var MatMenuTrigger = /** @class */ (function () {\n        function MatMenuTrigger(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, \n        // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n        // @breaking-change 8.0.0\n        _focusMonitor) {\n            var _this = this;\n            this._overlay = _overlay;\n            this._element = _element;\n            this._viewContainerRef = _viewContainerRef;\n            this._parentMenu = _parentMenu;\n            this._menuItemInstance = _menuItemInstance;\n            this._dir = _dir;\n            this._focusMonitor = _focusMonitor;\n            this._overlayRef = null;\n            this._menuOpen = false;\n            this._closingActionsSubscription = rxjs.Subscription.EMPTY;\n            this._hoverSubscription = rxjs.Subscription.EMPTY;\n            this._menuCloseSubscription = rxjs.Subscription.EMPTY;\n            /**\n             * Handles touch start events on the trigger.\n             * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n             */\n            this._handleTouchStart = function () { return _this._openedBy = 'touch'; };\n            // Tracking input type is necessary so it's possible to only auto-focus\n            // the first item of the list when the menu is opened via the keyboard\n            this._openedBy = null;\n            /**\n             * Whether focus should be restored when the menu is closed.\n             * Note that disabling this option can have accessibility implications\n             * and it's up to you to manage focus, if you decide to turn it off.\n             */\n            this.restoreFocus = true;\n            /** Event emitted when the associated menu is opened. */\n            this.menuOpened = new core.EventEmitter();\n            /**\n             * Event emitted when the associated menu is opened.\n             * @deprecated Switch to `menuOpened` instead\n             * @breaking-change 8.0.0\n             */\n            // tslint:disable-next-line:no-output-on-prefix\n            this.onMenuOpen = this.menuOpened;\n            /** Event emitted when the associated menu is closed. */\n            this.menuClosed = new core.EventEmitter();\n            /**\n             * Event emitted when the associated menu is closed.\n             * @deprecated Switch to `menuClosed` instead\n             * @breaking-change 8.0.0\n             */\n            // tslint:disable-next-line:no-output-on-prefix\n            this.onMenuClose = this.menuClosed;\n            _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n            if (_menuItemInstance) {\n                _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n            }\n            this._scrollStrategy = scrollStrategy;\n        }\n        Object.defineProperty(MatMenuTrigger.prototype, \"_deprecatedMatMenuTriggerFor\", {\n            /**\n             * @deprecated\n             * @breaking-change 8.0.0\n             */\n            get: function () { return this.menu; },\n            set: function (v) {\n                this.menu = v;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatMenuTrigger.prototype, \"menu\", {\n            /** References the menu instance that the trigger is associated with. */\n            get: function () { return this._menu; },\n            set: function (menu) {\n                var _this = this;\n                if (menu === this._menu) {\n                    return;\n                }\n                this._menu = menu;\n                this._menuCloseSubscription.unsubscribe();\n                if (menu) {\n                    this._menuCloseSubscription = menu.close.asObservable().subscribe(function (reason) {\n                        _this._destroyMenu();\n                        // If a click closed the menu, we should close the entire chain of nested menus.\n                        if ((reason === 'click' || reason === 'tab') && _this._parentMenu) {\n                            _this._parentMenu.closed.emit(reason);\n                        }\n                    });\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MatMenuTrigger.prototype.ngAfterContentInit = function () {\n            this._checkMenu();\n            this._handleHover();\n        };\n        MatMenuTrigger.prototype.ngOnDestroy = function () {\n            if (this._overlayRef) {\n                this._overlayRef.dispose();\n                this._overlayRef = null;\n            }\n            this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n            this._menuCloseSubscription.unsubscribe();\n            this._closingActionsSubscription.unsubscribe();\n            this._hoverSubscription.unsubscribe();\n        };\n        Object.defineProperty(MatMenuTrigger.prototype, \"menuOpen\", {\n            /** Whether the menu is open. */\n            get: function () {\n                return this._menuOpen;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatMenuTrigger.prototype, \"dir\", {\n            /** The text direction of the containing app. */\n            get: function () {\n                return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** Whether the menu triggers a sub-menu or a top-level one. */\n        MatMenuTrigger.prototype.triggersSubmenu = function () {\n            return !!(this._menuItemInstance && this._parentMenu);\n        };\n        /** Toggles the menu between the open and closed states. */\n        MatMenuTrigger.prototype.toggleMenu = function () {\n            return this._menuOpen ? this.closeMenu() : this.openMenu();\n        };\n        /** Opens the menu. */\n        MatMenuTrigger.prototype.openMenu = function () {\n            var _this = this;\n            if (this._menuOpen) {\n                return;\n            }\n            this._checkMenu();\n            var overlayRef = this._createOverlay();\n            var overlayConfig = overlayRef.getConfig();\n            this._setPosition(overlayConfig.positionStrategy);\n            overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n                this.menu.hasBackdrop;\n            overlayRef.attach(this._getPortal());\n            if (this.menu.lazyContent) {\n                this.menu.lazyContent.attach(this.menuData);\n            }\n            this._closingActionsSubscription = this._menuClosingActions().subscribe(function () { return _this.closeMenu(); });\n            this._initMenu();\n            if (this.menu instanceof MatMenu) {\n                this.menu._startAnimation();\n            }\n        };\n        /** Closes the menu. */\n        MatMenuTrigger.prototype.closeMenu = function () {\n            this.menu.close.emit();\n        };\n        /**\n         * Focuses the menu trigger.\n         * @param origin Source of the menu trigger's focus.\n         */\n        MatMenuTrigger.prototype.focus = function (origin, options) {\n            if (origin === void 0) { origin = 'program'; }\n            if (this._focusMonitor) {\n                this._focusMonitor.focusVia(this._element, origin, options);\n            }\n            else {\n                this._element.nativeElement.focus(options);\n            }\n        };\n        /** Closes the menu and does the necessary cleanup. */\n        MatMenuTrigger.prototype._destroyMenu = function () {\n            var _this = this;\n            if (!this._overlayRef || !this.menuOpen) {\n                return;\n            }\n            var menu = this.menu;\n            this._closingActionsSubscription.unsubscribe();\n            this._overlayRef.detach();\n            this._restoreFocus();\n            if (menu instanceof MatMenu) {\n                menu._resetAnimation();\n                if (menu.lazyContent) {\n                    // Wait for the exit animation to finish before detaching the content.\n                    menu._animationDone\n                        .pipe(operators.filter(function (event) { return event.toState === 'void'; }), operators.take(1), \n                    // Interrupt if the content got re-attached.\n                    operators.takeUntil(menu.lazyContent._attached))\n                        .subscribe({\n                        next: function () { return menu.lazyContent.detach(); },\n                        // No matter whether the content got re-attached, reset the menu.\n                        complete: function () { return _this._setIsMenuOpen(false); }\n                    });\n                }\n                else {\n                    this._setIsMenuOpen(false);\n                }\n            }\n            else {\n                this._setIsMenuOpen(false);\n                if (menu.lazyContent) {\n                    menu.lazyContent.detach();\n                }\n            }\n        };\n        /**\n         * This method sets the menu state to open and focuses the first item if\n         * the menu was opened via the keyboard.\n         */\n        MatMenuTrigger.prototype._initMenu = function () {\n            this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n            this.menu.direction = this.dir;\n            this._setMenuElevation();\n            this._setIsMenuOpen(true);\n            this.menu.focusFirstItem(this._openedBy || 'program');\n        };\n        /** Updates the menu elevation based on the amount of parent menus that it has. */\n        MatMenuTrigger.prototype._setMenuElevation = function () {\n            if (this.menu.setElevation) {\n                var depth = 0;\n                var parentMenu = this.menu.parentMenu;\n                while (parentMenu) {\n                    depth++;\n                    parentMenu = parentMenu.parentMenu;\n                }\n                this.menu.setElevation(depth);\n            }\n        };\n        /** Restores focus to the element that was focused before the menu was open. */\n        MatMenuTrigger.prototype._restoreFocus = function () {\n            // We should reset focus if the user is navigating using a keyboard or\n            // if we have a top-level trigger which might cause focus to be lost\n            // when clicking on the backdrop.\n            if (this.restoreFocus) {\n                if (!this._openedBy) {\n                    // Note that the focus style will show up both for `program` and\n                    // `keyboard` so we don't have to specify which one it is.\n                    this.focus();\n                }\n                else if (!this.triggersSubmenu()) {\n                    this.focus(this._openedBy);\n                }\n            }\n            this._openedBy = null;\n        };\n        // set state rather than toggle to support triggers sharing a menu\n        MatMenuTrigger.prototype._setIsMenuOpen = function (isOpen) {\n            this._menuOpen = isOpen;\n            this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n            if (this.triggersSubmenu()) {\n                this._menuItemInstance._highlighted = isOpen;\n            }\n        };\n        /**\n         * This method checks that a valid instance of MatMenu has been passed into\n         * matMenuTriggerFor. If not, an exception is thrown.\n         */\n        MatMenuTrigger.prototype._checkMenu = function () {\n            if (!this.menu) {\n                throwMatMenuMissingError();\n            }\n        };\n        /**\n         * This method creates the overlay from the provided menu's template and saves its\n         * OverlayRef so that it can be attached to the DOM when openMenu is called.\n         */\n        MatMenuTrigger.prototype._createOverlay = function () {\n            if (!this._overlayRef) {\n                var config = this._getOverlayConfig();\n                this._subscribeToPositions(config.positionStrategy);\n                this._overlayRef = this._overlay.create(config);\n                // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n                // Ideally we'd also have our keyboard event logic in here, however doing so will\n                // break anybody that may have implemented the `MatMenuPanel` themselves.\n                this._overlayRef.keydownEvents().subscribe();\n            }\n            return this._overlayRef;\n        };\n        /**\n         * This method builds the configuration object needed to create the overlay, the OverlayState.\n         * @returns OverlayConfig\n         */\n        MatMenuTrigger.prototype._getOverlayConfig = function () {\n            return new overlay.OverlayConfig({\n                positionStrategy: this._overlay.position()\n                    .flexibleConnectedTo(this._element)\n                    .withLockedPosition()\n                    .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n                backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n                scrollStrategy: this._scrollStrategy(),\n                direction: this._dir\n            });\n        };\n        /**\n         * Listens to changes in the position of the overlay and sets the correct classes\n         * on the menu based on the new position. This ensures the animation origin is always\n         * correct, even if a fallback position is used for the overlay.\n         */\n        MatMenuTrigger.prototype._subscribeToPositions = function (position) {\n            var _this = this;\n            if (this.menu.setPositionClasses) {\n                position.positionChanges.subscribe(function (change) {\n                    var posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                    var posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                    _this.menu.setPositionClasses(posX, posY);\n                });\n            }\n        };\n        /**\n         * Sets the appropriate positions on a position strategy\n         * so the overlay connects with the trigger correctly.\n         * @param positionStrategy Strategy whose position to update.\n         */\n        MatMenuTrigger.prototype._setPosition = function (positionStrategy) {\n            var _a = __read(this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'], 2), originX = _a[0], originFallbackX = _a[1];\n            var _b = __read(this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'], 2), overlayY = _b[0], overlayFallbackY = _b[1];\n            var _c = __read([overlayY, overlayFallbackY], 2), originY = _c[0], originFallbackY = _c[1];\n            var _d = __read([originX, originFallbackX], 2), overlayX = _d[0], overlayFallbackX = _d[1];\n            var offsetY = 0;\n            if (this.triggersSubmenu()) {\n                // When the menu is a sub-menu, it should always align itself\n                // to the edges of the trigger, instead of overlapping it.\n                overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n                originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n                offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n            }\n            else if (!this.menu.overlapTrigger) {\n                originY = overlayY === 'top' ? 'bottom' : 'top';\n                originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n            }\n            positionStrategy.withPositions([\n                { originX: originX, originY: originY, overlayX: overlayX, overlayY: overlayY, offsetY: offsetY },\n                { originX: originFallbackX, originY: originY, overlayX: overlayFallbackX, overlayY: overlayY, offsetY: offsetY },\n                {\n                    originX: originX,\n                    originY: originFallbackY,\n                    overlayX: overlayX,\n                    overlayY: overlayFallbackY,\n                    offsetY: -offsetY\n                },\n                {\n                    originX: originFallbackX,\n                    originY: originFallbackY,\n                    overlayX: overlayFallbackX,\n                    overlayY: overlayFallbackY,\n                    offsetY: -offsetY\n                }\n            ]);\n        };\n        /** Returns a stream that emits whenever an action that should close the menu occurs. */\n        MatMenuTrigger.prototype._menuClosingActions = function () {\n            var _this = this;\n            var backdrop = this._overlayRef.backdropClick();\n            var detachments = this._overlayRef.detachments();\n            var parentClose = this._parentMenu ? this._parentMenu.closed : rxjs.of();\n            var hover = this._parentMenu ? this._parentMenu._hovered().pipe(operators.filter(function (active) { return active !== _this._menuItemInstance; }), operators.filter(function () { return _this._menuOpen; })) : rxjs.of();\n            return rxjs.merge(backdrop, parentClose, hover, detachments);\n        };\n        /** Handles mouse presses on the trigger. */\n        MatMenuTrigger.prototype._handleMousedown = function (event) {\n            if (!a11y.isFakeMousedownFromScreenReader(event)) {\n                // Since right or middle button clicks won't trigger the `click` event,\n                // we shouldn't consider the menu as opened by mouse in those cases.\n                this._openedBy = event.button === 0 ? 'mouse' : null;\n                // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n                // we should prevent focus from moving onto it via click to avoid the\n                // highlight from lingering on the menu item.\n                if (this.triggersSubmenu()) {\n                    event.preventDefault();\n                }\n            }\n        };\n        /** Handles key presses on the trigger. */\n        MatMenuTrigger.prototype._handleKeydown = function (event) {\n            var keyCode = event.keyCode;\n            if (this.triggersSubmenu() && ((keyCode === keycodes.RIGHT_ARROW && this.dir === 'ltr') ||\n                (keyCode === keycodes.LEFT_ARROW && this.dir === 'rtl'))) {\n                this.openMenu();\n            }\n        };\n        /** Handles click events on the trigger. */\n        MatMenuTrigger.prototype._handleClick = function (event) {\n            if (this.triggersSubmenu()) {\n                // Stop event propagation to avoid closing the parent menu.\n                event.stopPropagation();\n                this.openMenu();\n            }\n            else {\n                this.toggleMenu();\n            }\n        };\n        /** Handles the cases where the user hovers over the trigger. */\n        MatMenuTrigger.prototype._handleHover = function () {\n            var _this = this;\n            // Subscribe to changes in the hovered item in order to toggle the panel.\n            if (!this.triggersSubmenu()) {\n                return;\n            }\n            this._hoverSubscription = this._parentMenu._hovered()\n                // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n                // with different data and triggers), we have to delay it by a tick to ensure that\n                // it won't be closed immediately after it is opened.\n                .pipe(operators.filter(function (active) { return active === _this._menuItemInstance && !active.disabled; }), operators.delay(0, rxjs.asapScheduler))\n                .subscribe(function () {\n                _this._openedBy = 'mouse';\n                // If the same menu is used between multiple triggers, it might still be animating\n                // while the new trigger tries to re-open it. Wait for the animation to finish\n                // before doing so. Also interrupt if the user moves to another item.\n                if (_this.menu instanceof MatMenu && _this.menu._isAnimating) {\n                    // We need the `delay(0)` here in order to avoid\n                    // 'changed after checked' errors in some cases. See #12194.\n                    _this.menu._animationDone\n                        .pipe(operators.take(1), operators.delay(0, rxjs.asapScheduler), operators.takeUntil(_this._parentMenu._hovered()))\n                        .subscribe(function () { return _this.openMenu(); });\n                }\n                else {\n                    _this.openMenu();\n                }\n            });\n        };\n        /** Gets the portal that should be attached to the overlay. */\n        MatMenuTrigger.prototype._getPortal = function () {\n            // Note that we can avoid this check by keeping the portal on the menu panel.\n            // While it would be cleaner, we'd have to introduce another required method on\n            // `MatMenuPanel`, making it harder to consume.\n            if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n                this._portal = new portal.TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n            }\n            return this._portal;\n        };\n        MatMenuTrigger.decorators = [\n            { type: core.Directive, args: [{\n                        selector: \"[mat-menu-trigger-for], [matMenuTriggerFor]\",\n                        host: {\n                            'class': 'mat-menu-trigger',\n                            'aria-haspopup': 'true',\n                            '[attr.aria-expanded]': 'menuOpen || null',\n                            '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                            '(mousedown)': '_handleMousedown($event)',\n                            '(keydown)': '_handleKeydown($event)',\n                            '(click)': '_handleClick($event)',\n                        },\n                        exportAs: 'matMenuTrigger'\n                    },] }\n        ];\n        /** @nocollapse */\n        MatMenuTrigger.ctorParameters = function () { return [\n            { type: overlay.Overlay },\n            { type: core.ElementRef },\n            { type: core.ViewContainerRef },\n            { type: undefined, decorators: [{ type: core.Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n            { type: MatMenu, decorators: [{ type: core.Optional }] },\n            { type: MatMenuItem, decorators: [{ type: core.Optional }, { type: core.Self }] },\n            { type: bidi.Directionality, decorators: [{ type: core.Optional }] },\n            { type: a11y.FocusMonitor }\n        ]; };\n        MatMenuTrigger.propDecorators = {\n            _deprecatedMatMenuTriggerFor: [{ type: core.Input, args: ['mat-menu-trigger-for',] }],\n            menu: [{ type: core.Input, args: ['matMenuTriggerFor',] }],\n            menuData: [{ type: core.Input, args: ['matMenuTriggerData',] }],\n            restoreFocus: [{ type: core.Input, args: ['matMenuTriggerRestoreFocus',] }],\n            menuOpened: [{ type: core.Output }],\n            onMenuOpen: [{ type: core.Output }],\n            menuClosed: [{ type: core.Output }],\n            onMenuClose: [{ type: core.Output }]\n        };\n        return MatMenuTrigger;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n     * to declare the menu-related directives.\n     */\n    var _MatMenuDirectivesModule = /** @class */ (function () {\n        function _MatMenuDirectivesModule() {\n        }\n        _MatMenuDirectivesModule.decorators = [\n            { type: core.NgModule, args: [{\n                        exports: [MatMenuTrigger, MatMenuContent, core$1.MatCommonModule],\n                        declarations: [\n                            MatMenuTrigger,\n                            MatMenuContent,\n                        ],\n                        providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n                    },] }\n        ];\n        return _MatMenuDirectivesModule;\n    }());\n    var MatMenuModule = /** @class */ (function () {\n        function MatMenuModule() {\n        }\n        MatMenuModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            common.CommonModule,\n                            core$1.MatCommonModule,\n                            core$1.MatRippleModule,\n                            overlay.OverlayModule,\n                            _MatMenuDirectivesModule,\n                        ],\n                        exports: [scrolling.CdkScrollableModule, core$1.MatCommonModule, _MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n                        declarations: [_MatMenu, MatMenuItem],\n                        providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n                    },] }\n        ];\n        return MatMenuModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.MAT_MENU_DEFAULT_OPTIONS = MAT_MENU_DEFAULT_OPTIONS;\n    exports.MAT_MENU_PANEL = MAT_MENU_PANEL;\n    exports.MAT_MENU_SCROLL_STRATEGY = MAT_MENU_SCROLL_STRATEGY;\n    exports.MatMenu = MatMenu;\n    exports.MatMenuContent = MatMenuContent;\n    exports.MatMenuItem = MatMenuItem;\n    exports.MatMenuModule = MatMenuModule;\n    exports.MatMenuTrigger = MatMenuTrigger;\n    exports._MatMenu = _MatMenu;\n    exports._MatMenuBase = _MatMenuBase;\n    exports._MatMenuDirectivesModule = _MatMenuDirectivesModule;\n    exports.fadeInItems = fadeInItems;\n    exports.matMenuAnimations = matMenuAnimations;\n    exports.transformMenu = transformMenu;\n    exports.ɵangular_material_src_material_menu_menu_a = MAT_MENU_DEFAULT_OPTIONS_FACTORY;\n    exports.ɵangular_material_src_material_menu_menu_b = MAT_MENU_SCROLL_STRATEGY_FACTORY;\n    exports.ɵangular_material_src_material_menu_menu_c = MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-menu.umd.js.map\n"]}