@use 'sass:map';

@use '@material/slider/slider' as mdc-slider;
@use '@material/slider/slider-theme';
@use '@material/theme/variables' as theme-variables;
@use '../core/mdc-helpers/mdc-helpers';
@use '../core/theming/theming';
@use '../core/typography/typography';
@use '../core/ripple/ripple-theme';


@mixin color($config-or-theme) {
  $config: theming.get-color-config($config-or-theme);
  @include mdc-helpers.using-mdc-theme($config) {
    @include mdc-slider.without-ripple($query: mdc-helpers.$mdc-theme-styles-query);

    .mat-mdc-slider {
      &.mat-primary, &.mat-accent, &.mat-warn {
        $is-dark: map.get($config, is-dark);
        $indicator-color: if($is-dark, white, black);
        $indicator-text-color: if($is-dark, black, white);
        $indicator-opacity: if($is-dark, 0.9, 0.6);

        @include slider-theme.value-indicator-color(
          $color: $indicator-color,
          $opacity: $indicator-opacity,
          $query: mdc-helpers.$mdc-theme-styles-query
        );
        @include slider-theme.value-indicator-text-color(
          $color: $indicator-text-color,
          $query: mdc-helpers.$mdc-theme-styles-query
        );
      }

      &.mat-primary {
        @include _custom-slider-color(primary, on-primary);
      }

      &.mat-accent {
        @include _custom-slider-color(secondary, on-secondary);
      }

      &.mat-warn {
        @include _custom-slider-color(error, on-error);
      }
    }
  }
}

@mixin typography($config-or-theme) {
  $config: typography.private-typography-to-2018-config(
      theming.get-typography-config($config-or-theme));
  @include mdc-helpers.using-mdc-typography($config) {
    @include mdc-slider.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);
  }
}

@mixin density($config-or-theme) {}

@mixin theme($theme-or-color-config) {
  $theme: theming.private-legacy-get-theme($theme-or-color-config);
  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slider') {
    $color: theming.get-color-config($theme);
    $density: theming.get-density-config($theme);
    $typography: theming.get-typography-config($theme);

    @if $color != null {
      @include color($color);
    }
    @if $density != null {
      @include density($density);
    }
    @if $typography != null {
      @include typography($typography);
    }
  }
}

@mixin _custom-slider-color($color, $on-color) {
  @include slider-theme.thumb-color(
    $color-or-map: (
      default: $color,
      disabled: on-surface,
    ),
    $query: mdc-helpers.$mdc-theme-styles-query
  );
  @include slider-theme.track-active-color(
    $color-or-map: (
      default: $color,
      disabled: on-surface,
    ),
    $query: mdc-helpers.$mdc-theme-styles-query
  );
  @include slider-theme.track-inactive-color(
    $color-or-map: (
      default: $color,
      disabled: on-surface,
    ),
    $query: mdc-helpers.$mdc-theme-styles-query
  );
  @include slider-theme.tick-mark-active-color(
    $color-or-map: (
      default: $on-color,
      disabled: surface,
    ),
    $query: mdc-helpers.$mdc-theme-styles-query
  );
  @include slider-theme.tick-mark-inactive-color(
    $color-or-map: (
      default: $color,
      disabled: on-surface,
    ),
    $query: mdc-helpers.$mdc-theme-styles-query
  );
  $ripple-color: map.get(theme-variables.$property-values, $color);
  @include ripple-theme.color((
    foreground: (
      base: $ripple-color
    ),
  ));
  .mat-mdc-slider-hover-ripple {
    background-color: rgba($ripple-color, 0.05);
  }
  .mat-mdc-slider-focus-ripple, .mat-mdc-slider-active-ripple {
    background-color: rgba($ripple-color, 0.2);
  }
}
