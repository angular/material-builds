@use 'sass:map';

@use '@material/slider/slider-theme' as mdc-slider-theme;
@use '../core/theming/theming';
@use '../core/typography/typography';
@use '../core/style/sass-utils';
@use '../core/tokens/token-utils';
@use '../core/tokens/m2/mat/slider' as m2-mat-slider;
@use '../core/tokens/m2/mdc/slider' as m2-mdc-slider;

@mixin base($config-or-theme) {
  // Add default values for tokens not related to color, typography, or density.
  @include sass-utils.current-selector-or-root() {
    @include mdc-slider-theme.theme(m2-mdc-slider.get-unthemable-tokens());
  }
}

@mixin color($config-or-theme) {
  $config: theming.get-color-config($config-or-theme);
  $is-dark: map.get($config, is-dark);

  $mdc-color-tokens: token-utils.resolve-elevation(
    m2-mdc-slider.get-color-tokens($config),
    handle-elevation,
    handle-shadow-color
  );

  $mat-slider-color-tokens: m2-mat-slider.get-color-tokens($config);

  // Add values for MDC slider tokens.
  .mat-mdc-slider {
    @include mdc-slider-theme.theme($mdc-color-tokens);
    @include _slider-ripple-color(map.get($config, primary));
    @include token-utils.create-token-values(
      m2-mat-slider.$prefix,
      $mat-slider-color-tokens
    );

    &.mat-accent {
      $accent: map.get($config, accent);
      @include mdc-slider-theme.theme(
        m2-mdc-slider.private-get-color-palette-color-tokens($accent)
      );
      @include _slider-ripple-color($accent);
    }

    &.mat-warn {
      $warn: map.get($config, warn);
      @include mdc-slider-theme.theme(
        m2-mdc-slider.private-get-color-palette-color-tokens($warn)
      );
      @include _slider-ripple-color($warn);
    }
  }
}

@mixin typography($config-or-theme) {
  $config: typography.private-typography-to-2018-config(
      theming.get-typography-config($config-or-theme));
  $mdc-typography-tokens: m2-mdc-slider.get-typography-tokens($config);

  // Add values for MDC slider tokens.
  .mat-mdc-slider {
    @include mdc-slider-theme.theme($mdc-typography-tokens);
  }
}

@mixin density($config-or-theme) {
  $density-scale: theming.get-density-config($config-or-theme);
  $mdc-density-tokens: m2-mdc-slider.get-density-tokens($density-scale);

  // Add values for MDC slider tokens.
  .mat-mdc-slider {
    @include mdc-slider-theme.theme($mdc-density-tokens);
  }
}

@mixin theme($theme-or-color-config) {
  $theme: theming.private-legacy-get-theme($theme-or-color-config);
  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slider') {
    $color: theming.get-color-config($theme);
    $density: theming.get-density-config($theme);
    $typography: theming.get-typography-config($theme);

    @include base($theme);
    @if $color != null {
      @include color($color);
    }
    @if $density != null {
      @include density($density);
    }
    @if $typography != null {
      @include typography($typography);
    }
  }
}

// Generated MDC ripple color tokens are not being calculated so needs to be set
@mixin _slider-ripple-color($color-palette) {
  $color: theming.get-color-from-palette($color-palette);
  --mat-mdc-slider-ripple-color: #{$color};
  --mat-mdc-slider-hover-ripple-color: #{rgba($color, 0.05)};
  --mat-mdc-slider-focus-ripple-color: #{rgba($color, 0.2)};
}
