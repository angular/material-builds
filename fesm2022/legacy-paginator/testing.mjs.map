{"version":3,"file":"testing.mjs","sources":["../../../../../../../src/material/legacy-paginator/testing/paginator-harness.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HarnessPredicate} from '@angular/cdk/testing';\nimport {MatLegacySelectHarness} from '@angular/material/legacy-select/testing';\nimport {\n  _MatPaginatorHarnessBase,\n  PaginatorHarnessFilters,\n} from '@angular/material/paginator/testing';\n\n/**\n * Harness for interacting with a standard mat-paginator in tests.\n * @deprecated Use `MatPaginatorHarness` from `@angular/material/paginator/testing` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nexport class MatLegacyPaginatorHarness extends _MatPaginatorHarnessBase {\n  /** Selector used to find paginator instances. */\n  static hostSelector = '.mat-paginator';\n  protected _nextButton = this.locatorFor('.mat-paginator-navigation-next');\n  protected _previousButton = this.locatorFor('.mat-paginator-navigation-previous');\n  protected _firstPageButton = this.locatorForOptional('.mat-paginator-navigation-first');\n  protected _lastPageButton = this.locatorForOptional('.mat-paginator-navigation-last');\n  protected _select = this.locatorForOptional(\n    MatLegacySelectHarness.with({\n      ancestor: '.mat-paginator-page-size',\n    }),\n  );\n  protected _pageSizeFallback = this.locatorFor('.mat-paginator-page-size-value');\n  protected _rangeLabel = this.locatorFor('.mat-paginator-range-label');\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a `MatPaginatorHarness` that meets\n   * certain criteria.\n   * @param options Options for filtering which paginator instances are considered a match.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: PaginatorHarnessFilters = {}): HarnessPredicate<MatLegacyPaginatorHarness> {\n    return new HarnessPredicate(MatLegacyPaginatorHarness, options);\n  }\n}\n"],"names":[],"mappings":";;;;;AAeA;;;;AAIG;AACH,MAAa,yBAA0B,SAAQ,wBAAwB,CAAA;AAAvE,IAAA,WAAA,GAAA;;AAGY,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,gCAAgC,CAAC,CAAC;AAChE,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,oCAAoC,CAAC,CAAC;AACxE,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,iCAAiC,CAAC,CAAC;AAC9E,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,gCAAgC,CAAC,CAAC;QAC5E,IAAO,CAAA,OAAA,GAAG,IAAI,CAAC,kBAAkB,CACzC,sBAAsB,CAAC,IAAI,CAAC;AAC1B,YAAA,QAAQ,EAAE,0BAA0B;AACrC,SAAA,CAAC,CACH,CAAC;AACQ,QAAA,IAAA,CAAA,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,gCAAgC,CAAC,CAAC;AACtE,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,4BAA4B,CAAC,CAAC;KAWvE;;aAtBQ,IAAY,CAAA,YAAA,GAAG,gBAAH,CAAoB,EAAA;AAavC;;;;;AAKG;AACH,IAAA,OAAO,IAAI,CAAC,OAAA,GAAmC,EAAE,EAAA;AAC/C,QAAA,OAAO,IAAI,gBAAgB,CAAC,yBAAyB,EAAE,OAAO,CAAC,CAAC;KACjE;;;;;"}