{"version":3,"file":"testing.mjs","sources":["../../../../../../../src/material/legacy-dialog/testing/dialog-harness.ts","../../../../../../../src/material/legacy-dialog/testing/dialog-opener.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HarnessPredicate} from '@angular/cdk/testing';\nimport {_MatDialogHarnessBase, DialogHarnessFilters} from '@angular/material/dialog/testing';\n\n/**\n * Selectors for different sections of the mat-dialog that can contain user content.\n * @deprecated Use `enum` from `@angular/material/dialog/testing` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nexport const enum MatLegacyDialogSection {\n  TITLE = '.mat-dialog-title',\n  CONTENT = '.mat-dialog-content',\n  ACTIONS = '.mat-dialog-actions',\n}\n\n/**\n * Harness for interacting with a standard `MatDialog` in tests.\n * @deprecated Use `MatDialogHarness` from `@angular/material/dialog/testing` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nexport class MatLegacyDialogHarness extends _MatDialogHarnessBase {\n  // Developers can provide a custom component or template for the\n  // dialog. The canonical dialog parent is the \"MatDialogContainer\".\n  /** The selector for the host element of a `MatDialog` instance. */\n  static hostSelector = '.mat-dialog-container';\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a `MatDialogHarness` that meets\n   * certain criteria.\n   * @param options Options for filtering which dialog instances are considered a match.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: DialogHarnessFilters = {}): HarnessPredicate<MatLegacyDialogHarness> {\n    return new HarnessPredicate(MatLegacyDialogHarness, options);\n  }\n\n  protected override _title = this.locatorForOptional(MatLegacyDialogSection.TITLE);\n  protected override _content = this.locatorForOptional(MatLegacyDialogSection.CONTENT);\n  protected override _actions = this.locatorForOptional(MatLegacyDialogSection.ACTIONS);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentType} from '@angular/cdk/overlay';\nimport {ChangeDetectionStrategy, Component, NgModule, ViewEncapsulation} from '@angular/core';\nimport {\n  MatLegacyDialog,\n  MatLegacyDialogConfig,\n  MatLegacyDialogContainer,\n  MatLegacyDialogModule,\n} from '@angular/material/legacy-dialog';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {_MatTestDialogOpenerBase} from '@angular/material/dialog/testing';\n\n/**\n * Test component that immediately opens a dialog when created.\n * @deprecated Use `MatTestDialogOpener` from `@angular/material/dialog/testing` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\n@Component({\n  selector: 'mat-test-dialog-opener',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatTestLegacyDialogOpener<T = unknown, R = unknown> extends _MatTestDialogOpenerBase<\n  MatLegacyDialogContainer,\n  T,\n  R\n> {\n  constructor(dialog: MatLegacyDialog) {\n    super(dialog);\n  }\n\n  /** Static method that prepares this class to open the provided component. */\n  static withComponent<T = unknown, R = unknown>(\n    component: ComponentType<T>,\n    config?: MatLegacyDialogConfig,\n  ) {\n    _MatTestDialogOpenerBase.component = component;\n    _MatTestDialogOpenerBase.config = config;\n    return MatTestLegacyDialogOpener as ComponentType<MatTestLegacyDialogOpener<T, R>>;\n  }\n}\n\n/**\n * @deprecated Use `MatTestDialogOpenerModule` from `@angular/material/dialog/testing` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\n@NgModule({\n  declarations: [MatTestLegacyDialogOpener],\n  imports: [MatLegacyDialogModule, NoopAnimationsModule],\n})\nexport class MatTestLegacyDialogOpenerModule {}\n"],"names":[],"mappings":";;;;;;;AAsBA;;;;AAIG;AACG,MAAO,sBAAuB,SAAQ,qBAAqB,CAAA;AAAjE,IAAA,WAAA,GAAA;;AAgBqB,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,CAAC,kBAAkB,wDAA8B,CAAC;AAC/D,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,CAAC,kBAAkB,4DAAgC,CAAC;AACnE,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,CAAC,kBAAkB,4DAAgC,CAAC;KACvF;;;;aAfQ,IAAY,CAAA,YAAA,GAAG,uBAAH,CAA2B,EAAA;AAE9C;;;;;AAKG;AACH,IAAA,OAAO,IAAI,CAAC,OAAA,GAAgC,EAAE,EAAA;AAC5C,QAAA,OAAO,IAAI,gBAAgB,CAAC,sBAAsB,EAAE,OAAO,CAAC,CAAC;KAC9D;;;;ACtBH;;;;AAIG;AAOI,IAAM,yBAAyB,GAAA,2BAAA,GAA/B,MAAM,yBAAoD,SAAQ,wBAIxE,CAAA;AACC,IAAA,WAAA,CAAY,MAAuB,EAAA;QACjC,KAAK,CAAC,MAAM,CAAC,CAAC;KACf;;AAGD,IAAA,OAAO,aAAa,CAClB,SAA2B,EAC3B,MAA8B,EAAA;AAE9B,QAAA,wBAAwB,CAAC,SAAS,GAAG,SAAS,CAAC;AAC/C,QAAA,wBAAwB,CAAC,MAAM,GAAG,MAAM,CAAC;AACzC,QAAA,OAAO,2BAA2E,CAAC;KACpF;EACF;AAlBY,yBAAyB,GAAA,2BAAA,GAAA,UAAA,CAAA;AANrC,IAAA,SAAS,CAAC;AACT,QAAA,QAAQ,EAAE,wBAAwB;AAClC,QAAA,QAAQ,EAAE,EAAE;QACZ,eAAe,EAAE,uBAAuB,CAAC,MAAM;QAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;KACtC,CAAC;qCAMoB,eAAe,CAAA,CAAA;AALxB,CAAA,EAAA,yBAAyB,CAkBrC,CAAA;AAED;;;AAGG;AAKU,IAAA,+BAA+B,GAArC,MAAM,+BAA+B,CAAA;EAAG;AAAlC,+BAA+B,GAAA,UAAA,CAAA;AAJ3C,IAAA,QAAQ,CAAC;QACR,YAAY,EAAE,CAAC,yBAAyB,CAAC;AACzC,QAAA,OAAO,EAAE,CAAC,qBAAqB,EAAE,oBAAoB,CAAC;KACvD,CAAC;AACW,CAAA,EAAA,+BAA+B,CAAG;;;;"}