{"version":3,"file":"testing.mjs","sources":["../../../../../../../src/material/sort/testing/sort-header-harness.ts","../../../../../../../src/material/sort/testing/sort-harness.ts","../../../../../../../src/material/sort/testing/public-api.ts","../../../../../../../src/material/sort/testing/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentHarness, HarnessPredicate} from '@angular/cdk/testing';\nimport {SortDirection} from '@angular/material/sort';\nimport {SortHeaderHarnessFilters} from './sort-harness-filters';\n\n/** Harness for interacting with a standard Angular Material sort header in tests. */\nexport class MatSortHeaderHarness extends ComponentHarness {\n  static hostSelector = '.mat-sort-header';\n  private _container = this.locatorFor('.mat-sort-header-container');\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to\n   * search for a sort header with specific attributes.\n   */\n  static with(options: SortHeaderHarnessFilters = {}): HarnessPredicate<MatSortHeaderHarness> {\n    return new HarnessPredicate(MatSortHeaderHarness, options)\n      .addOption('label', options.label, (harness, label) =>\n        HarnessPredicate.stringMatches(harness.getLabel(), label),\n      )\n      .addOption('sortDirection', options.sortDirection, (harness, sortDirection) => {\n        return HarnessPredicate.stringMatches(harness.getSortDirection(), sortDirection);\n      });\n  }\n\n  /** Gets the label of the sort header. */\n  async getLabel(): Promise<string> {\n    return (await this._container()).text();\n  }\n\n  /** Gets the sorting direction of the header. */\n  async getSortDirection(): Promise<SortDirection> {\n    const host = await this.host();\n    const ariaSort = await host.getAttribute('aria-sort');\n\n    if (ariaSort === 'ascending') {\n      return 'asc';\n    } else if (ariaSort === 'descending') {\n      return 'desc';\n    }\n\n    return '';\n  }\n\n  /** Gets whether the sort header is currently being sorted by. */\n  async isActive(): Promise<boolean> {\n    return !!(await this.getSortDirection());\n  }\n\n  /** Whether the sort header is disabled. */\n  async isDisabled(): Promise<boolean> {\n    return (await this.host()).hasClass('mat-sort-header-disabled');\n  }\n\n  /** Clicks the header to change its sorting direction. Only works if the header is enabled. */\n  async click(): Promise<void> {\n    return (await this.host()).click();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentHarness, HarnessPredicate} from '@angular/cdk/testing';\nimport {SortHarnessFilters, SortHeaderHarnessFilters} from './sort-harness-filters';\nimport {MatSortHeaderHarness} from './sort-header-harness';\n\n/** Harness for interacting with a standard `mat-sort` in tests. */\nexport class MatSortHarness extends ComponentHarness {\n  static hostSelector = '.mat-sort';\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a `mat-sort` with specific attributes.\n   * @param options Options for narrowing the search.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: SortHarnessFilters = {}): HarnessPredicate<MatSortHarness> {\n    return new HarnessPredicate(MatSortHarness, options);\n  }\n\n  /** Gets all of the sort headers in the `mat-sort`. */\n  async getSortHeaders(filter: SortHeaderHarnessFilters = {}): Promise<MatSortHeaderHarness[]> {\n    return this.locatorForAll(MatSortHeaderHarness.with(filter))();\n  }\n\n  /** Gets the selected header in the `mat-sort`. */\n  async getActiveHeader(): Promise<MatSortHeaderHarness | null> {\n    const headers = await this.getSortHeaders();\n    for (let i = 0; i < headers.length; i++) {\n      if (await headers[i].isActive()) {\n        return headers[i];\n      }\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './sort-harness';\nexport * from './sort-header-harness';\nexport * from './sort-harness-filters';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}