{"version":3,"file":"divider.mjs","sources":["../../../../../../src/material/divider/divider.ts","../../../../../../src/material/divider/divider-module.ts","../../../../../../src/material/divider/public-api.ts","../../../../../../src/material/divider/index.ts","../../../../../../src/material/divider/divider_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'mat-divider',\n  host: {\n    'role': 'separator',\n    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n    '[class.mat-divider-vertical]': 'vertical',\n    '[class.mat-divider-horizontal]': '!vertical',\n    '[class.mat-divider-inset]': 'inset',\n    'class': 'mat-divider',\n  },\n  template: '',\n  styleUrls: ['divider.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatDivider {\n  /** Whether the divider is vertically aligned. */\n  @Input()\n  get vertical(): boolean {\n    return this._vertical;\n  }\n  set vertical(value: BooleanInput) {\n    this._vertical = coerceBooleanProperty(value);\n  }\n  private _vertical: boolean = false;\n\n  /** Whether the divider is an inset divider. */\n  @Input()\n  get inset(): boolean {\n    return this._inset;\n  }\n  set inset(value: BooleanInput) {\n    this._inset = coerceBooleanProperty(value);\n  }\n  private _inset: boolean = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatDivider} from './divider';\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [MatDivider, MatCommonModule],\n  declarations: [MatDivider],\n})\nexport class MatDividerModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './divider';\nexport * from './divider-module';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;MA0Ba,UAAU;IAfvB;QAwBU,cAAS,GAAY,KAAK,CAAC;QAU3B,WAAM,GAAY,KAAK,CAAC;KACjC;;IAlBC,IACI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IACD,IAAI,QAAQ,CAAC,KAAmB;QAC9B,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;KAC/C;;IAID,IACI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IACD,IAAI,KAAK,CAAC,KAAmB;QAC3B,IAAI,CAAC,MAAM,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;KAC5C;;uGAlBU,UAAU;2FAAV,UAAU,mYALX,EAAE;2FAKD,UAAU;kBAftB,SAAS;+BACE,aAAa,QACjB;wBACJ,MAAM,EAAE,WAAW;wBACnB,yBAAyB,EAAE,sCAAsC;wBACjE,8BAA8B,EAAE,UAAU;wBAC1C,gCAAgC,EAAE,WAAW;wBAC7C,2BAA2B,EAAE,OAAO;wBACpC,OAAO,EAAE,aAAa;qBACvB,YACS,EAAE,iBAEG,iBAAiB,CAAC,IAAI,mBACpB,uBAAuB,CAAC,MAAM;8BAK3C,QAAQ;sBADX,KAAK;gBAWF,KAAK;sBADR,KAAK;;;ACtCR;;;;;;;MAiBa,gBAAgB;;6GAAhB,gBAAgB;8GAAhB,gBAAgB,iBAFZ,UAAU,aAFf,eAAe,aACf,UAAU,EAAE,eAAe;8GAG1B,gBAAgB,YAJlB,CAAC,eAAe,CAAC,EACJ,eAAe;2FAG1B,gBAAgB;kBAL5B,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,eAAe,CAAC;oBAC1B,OAAO,EAAE,CAAC,UAAU,EAAE,eAAe,CAAC;oBACtC,YAAY,EAAE,CAAC,UAAU,CAAC;iBAC3B;;;AChBD;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;"}