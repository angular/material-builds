@use 'sass:map';
@use '../core/density/private/compatibility';
@use '../core/theming/palette';
@use '../core/theming/theming';
@use '../core/style/private';
@use '../core/typography/typography';
@use '../core/typography/typography-utils';
@use './expansion-variables';
@use './expansion-mixins';

@mixin panel-color($config-or-theme) {
  $config: theming.get-color-config($config-or-theme);
  $background: map.get($config, background);
  $foreground: map.get($config, foreground);

  .mat-expansion-panel {
    @include private.theme-overridable-elevation(2, $config);
    background: theming.color($background, card);
    color: theming.color($foreground, text);
  }

  .mat-action-row {
    border-top-color: theming.color($foreground, divider);
  }

  @include expansion-mixins.expansion-focus {
    background: theming.color($background, hover);
  }

  // Disable the hover on touch devices since it can appear like it is stuck. We can't use
  // `@media (hover)` above, because the desktop support browser support isn't great.
  @media (hover: none) {
    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])
      .mat-expansion-panel-header:hover {
      background: theming.color($background, card);
    }
  }

  .mat-expansion-panel-header-title {
    color: theming.color($foreground, text);
  }

  .mat-expansion-panel-header-description,
  .mat-expansion-indicator::after {
    color: theming.color($foreground, secondary-text);
  }

  .mat-expansion-panel-header[aria-disabled='true'] {
    color: theming.color($foreground, disabled-button);

    .mat-expansion-panel-header-title,
    .mat-expansion-panel-header-description {
      color: inherit;
    }
  }
}

@mixin panel-typography($config-or-theme) {
  $config: typography.typography-to-2014-config(theming.get-typography-config($config-or-theme));
  .mat-expansion-panel-header {
    font: {
      family: typography-utils.font-family($config, subheading-1);
      size: typography-utils.font-size($config, subheading-1);
      weight: typography-utils.font-weight($config, subheading-1);
    }
  }

  .mat-expansion-panel-content {
    @include typography-utils.level-to-styles($config, body-1);
  }
}

@mixin panel-density($config-or-theme) {
  $density-scale: theming.get-density-config($config-or-theme);
  $expanded-height: compatibility.density-prop-value(
        expansion-variables.$panel-header-density-config, $density-scale, expanded-height);
  $collapsed-height: compatibility.density-prop-value(
      expansion-variables.$panel-header-density-config, $density-scale, collapsed-height);

  @include compatibility.density-legacy-compatibility() {
    .mat-expansion-panel-header {
      height: $collapsed-height;

      &.mat-expanded {
        height: $expanded-height;
      }
    }
  }
}

@mixin panel-theme($theme-or-color-config) {
  $theme: theming.legacy-get-theme($theme-or-color-config);
  @include theming.check-duplicate-theme-styles($theme, 'mat-expansion-panel') {
    $color: theming.get-color-config($theme);
    $density: theming.get-density-config($theme);
    $typography: theming.get-typography-config($theme);

    @if $color != null {
      @include panel-color($color);
    }
    @if $density != null {
      @include panel-density($density);
    }
    @if $typography != null {
      @include panel-typography($typography);
    }
  }
}
