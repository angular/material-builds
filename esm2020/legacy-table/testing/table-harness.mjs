/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { HarnessPredicate } from '@angular/cdk/testing';
import { MatLegacyFooterRowHarness, MatLegacyHeaderRowHarness, MatLegacyRowHarness, } from './row-harness';
import { _MatTableHarnessBase } from '@angular/material/table/testing';
/**
 * Harness for interacting with a standard mat-table in tests.
 * @deprecated Use `MatTableHarness` from `@angular/material/table/testing` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.
 * @breaking-change 17.0.0
 */
class MatLegacyTableHarness extends _MatTableHarnessBase {
    constructor() {
        super(...arguments);
        this._headerRowHarness = MatLegacyHeaderRowHarness;
        this._rowHarness = MatLegacyRowHarness;
        this._footerRowHarness = MatLegacyFooterRowHarness;
    }
    /**
     * Gets a `HarnessPredicate` that can be used to search for a table with specific attributes.
     * @param options Options for narrowing the search
     * @return a `HarnessPredicate` configured with the given options.
     */
    static with(options = {}) {
        return new HarnessPredicate(MatLegacyTableHarness, options);
    }
}
/** The selector for the host element of a `MatTableHarness` instance. */
MatLegacyTableHarness.hostSelector = '.mat-table';
export { MatLegacyTableHarness };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtaGFybmVzcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9tYXRlcmlhbC9sZWdhY3ktdGFibGUvdGVzdGluZy90YWJsZS1oYXJuZXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQ3RELE9BQU8sRUFDTCx5QkFBeUIsRUFDekIseUJBQXlCLEVBQ3pCLG1CQUFtQixHQUNwQixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMsb0JBQW9CLEVBQXNCLE1BQU0saUNBQWlDLENBQUM7QUFFMUY7Ozs7R0FJRztBQUNILE1BQWEscUJBQXNCLFNBQVEsb0JBTzFDO0lBUEQ7O1FBVVksc0JBQWlCLEdBQUcseUJBQXlCLENBQUM7UUFDOUMsZ0JBQVcsR0FBRyxtQkFBbUIsQ0FBQztRQUNsQyxzQkFBaUIsR0FBRyx5QkFBeUIsQ0FBQztJQVUxRCxDQUFDO0lBUkM7Ozs7T0FJRztJQUNILE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBK0IsRUFBRTtRQUMzQyxPQUFPLElBQUksZ0JBQWdCLENBQUMscUJBQXFCLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDOUQsQ0FBQzs7QUFiRCx5RUFBeUU7QUFDbEUsa0NBQVksR0FBRyxZQUFZLEFBQWYsQ0FBZ0I7U0FUeEIscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5cbmltcG9ydCB7SGFybmVzc1ByZWRpY2F0ZX0gZnJvbSAnQGFuZ3VsYXIvY2RrL3Rlc3RpbmcnO1xuaW1wb3J0IHtcbiAgTWF0TGVnYWN5Rm9vdGVyUm93SGFybmVzcyxcbiAgTWF0TGVnYWN5SGVhZGVyUm93SGFybmVzcyxcbiAgTWF0TGVnYWN5Um93SGFybmVzcyxcbn0gZnJvbSAnLi9yb3ctaGFybmVzcyc7XG5pbXBvcnQge19NYXRUYWJsZUhhcm5lc3NCYXNlLCBUYWJsZUhhcm5lc3NGaWx0ZXJzfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC90YWJsZS90ZXN0aW5nJztcblxuLyoqXG4gKiBIYXJuZXNzIGZvciBpbnRlcmFjdGluZyB3aXRoIGEgc3RhbmRhcmQgbWF0LXRhYmxlIGluIHRlc3RzLlxuICogQGRlcHJlY2F0ZWQgVXNlIGBNYXRUYWJsZUhhcm5lc3NgIGZyb20gYEBhbmd1bGFyL21hdGVyaWFsL3RhYmxlL3Rlc3RpbmdgIGluc3RlYWQuIFNlZSBodHRwczovL21hdGVyaWFsLmFuZ3VsYXIuaW8vZ3VpZGUvbWRjLW1pZ3JhdGlvbiBmb3IgaW5mb3JtYXRpb24gYWJvdXQgbWlncmF0aW5nLlxuICogQGJyZWFraW5nLWNoYW5nZSAxNy4wLjBcbiAqL1xuZXhwb3J0IGNsYXNzIE1hdExlZ2FjeVRhYmxlSGFybmVzcyBleHRlbmRzIF9NYXRUYWJsZUhhcm5lc3NCYXNlPFxuICB0eXBlb2YgTWF0TGVnYWN5SGVhZGVyUm93SGFybmVzcyxcbiAgTWF0TGVnYWN5SGVhZGVyUm93SGFybmVzcyxcbiAgdHlwZW9mIE1hdExlZ2FjeVJvd0hhcm5lc3MsXG4gIE1hdExlZ2FjeVJvd0hhcm5lc3MsXG4gIHR5cGVvZiBNYXRMZWdhY3lGb290ZXJSb3dIYXJuZXNzLFxuICBNYXRMZWdhY3lGb290ZXJSb3dIYXJuZXNzXG4+IHtcbiAgLyoqIFRoZSBzZWxlY3RvciBmb3IgdGhlIGhvc3QgZWxlbWVudCBvZiBhIGBNYXRUYWJsZUhhcm5lc3NgIGluc3RhbmNlLiAqL1xuICBzdGF0aWMgaG9zdFNlbGVjdG9yID0gJy5tYXQtdGFibGUnO1xuICBwcm90ZWN0ZWQgX2hlYWRlclJvd0hhcm5lc3MgPSBNYXRMZWdhY3lIZWFkZXJSb3dIYXJuZXNzO1xuICBwcm90ZWN0ZWQgX3Jvd0hhcm5lc3MgPSBNYXRMZWdhY3lSb3dIYXJuZXNzO1xuICBwcm90ZWN0ZWQgX2Zvb3RlclJvd0hhcm5lc3MgPSBNYXRMZWdhY3lGb290ZXJSb3dIYXJuZXNzO1xuXG4gIC8qKlxuICAgKiBHZXRzIGEgYEhhcm5lc3NQcmVkaWNhdGVgIHRoYXQgY2FuIGJlIHVzZWQgdG8gc2VhcmNoIGZvciBhIHRhYmxlIHdpdGggc3BlY2lmaWMgYXR0cmlidXRlcy5cbiAgICogQHBhcmFtIG9wdGlvbnMgT3B0aW9ucyBmb3IgbmFycm93aW5nIHRoZSBzZWFyY2hcbiAgICogQHJldHVybiBhIGBIYXJuZXNzUHJlZGljYXRlYCBjb25maWd1cmVkIHdpdGggdGhlIGdpdmVuIG9wdGlvbnMuXG4gICAqL1xuICBzdGF0aWMgd2l0aChvcHRpb25zOiBUYWJsZUhhcm5lc3NGaWx0ZXJzID0ge30pOiBIYXJuZXNzUHJlZGljYXRlPE1hdExlZ2FjeVRhYmxlSGFybmVzcz4ge1xuICAgIHJldHVybiBuZXcgSGFybmVzc1ByZWRpY2F0ZShNYXRMZWdhY3lUYWJsZUhhcm5lc3MsIG9wdGlvbnMpO1xuICB9XG59XG4iXX0=