@use '@material/button/button' as mdc-button;
@use '@material/button/button-text-theme' as mdc-button-text-theme;
@use '@material/button/button-filled-theme' as mdc-button-filled-theme;
@use '@material/button/button-protected-theme' as mdc-button-protected-theme;
@use '@material/button/button-outlined-theme' as mdc-button-outlined-theme;
@use '@material/elevation/elevation-theme' as mdc-elevation-theme;

@use './button-base';
@use '../core/mdc-helpers/mdc-helpers';
@use '../core/theming/theming';
@use '../core/theming/inspection';
@use '../core/tokens/token-utils';
@use '../core/typography/typography';
@use '../core/tokens/m2/mdc/filled-button' as tokens-mdc-filled-button;
@use '../core/tokens/m2/mat/filled-button' as tokens-mat-filled-button;
@use '../core/tokens/m2/mdc/outlined-button' as tokens-mdc-outlined-button;
@use '../core/tokens/m2/mat/outlined-button' as tokens-mat-outlined-button;
@use '../core/tokens/m2/mdc/protected-button' as tokens-mdc-protected-button;
@use '../core/tokens/m2/mat/protected-button' as tokens-mat-protected-button;
@use '../core/tokens/m2/mdc/text-button' as tokens-mdc-text-button;
@use '../core/tokens/m2/mat/text-button' as tokens-mat-text-button;


@mixin _text-button-variant($theme, $palette) {
  $mdc-tokens: if($palette,
    tokens-mdc-text-button.private-get-color-palette-color-tokens($theme, $palette),
    tokens-mdc-text-button.get-color-tokens($theme)
  );

  $mat-tokens: if($palette,
    tokens-mat-text-button.private-get-color-palette-color-tokens($theme, $palette),
    tokens-mat-text-button.get-color-tokens($theme)
  );

  @include mdc-button-text-theme.theme($mdc-tokens);
  @include token-utils.create-token-values(tokens-mat-text-button.$prefix, $mat-tokens);
}

@mixin _filled-button-variant($theme, $palette) {
  $mdc-tokens: if($palette,
    tokens-mdc-filled-button.private-get-color-palette-color-tokens($theme, $palette),
    tokens-mdc-filled-button.get-color-tokens($theme)
  );

  $mat-tokens: if($palette,
    tokens-mat-filled-button.private-get-color-palette-color-tokens($theme, $palette),
    tokens-mat-filled-button.get-color-tokens($theme)
  );

  @include mdc-button-filled-theme.theme($mdc-tokens);
  @include token-utils.create-token-values(tokens-mat-filled-button.$prefix, $mat-tokens);
}

@mixin _protected-button-variant($theme, $palette) {
  $mdc-tokens: if($palette,
    tokens-mdc-protected-button.private-get-color-palette-color-tokens($theme, $palette),
    tokens-mdc-protected-button.get-color-tokens($theme)
  );

  $mat-tokens: if($palette,
    tokens-mat-protected-button.private-get-color-palette-color-tokens($theme, $palette),
    tokens-mat-protected-button.get-color-tokens($theme)
  );

  @include mdc-button-protected-theme.theme($mdc-tokens);
  @include token-utils.create-token-values(tokens-mat-protected-button.$prefix, $mat-tokens);
}

@mixin _outlined-button-variant($theme, $palette) {
  $mdc-tokens: if($palette,
    tokens-mdc-outlined-button.private-get-color-palette-color-tokens($theme, $palette),
    tokens-mdc-outlined-button.get-color-tokens($theme)
  );

  $mat-tokens: if($palette,
    tokens-mat-outlined-button.private-get-color-palette-color-tokens($theme, $palette),
    tokens-mat-outlined-button.get-color-tokens($theme)
  );

  @include mdc-button-outlined-theme.theme($mdc-tokens);
  @include token-utils.create-token-values(tokens-mat-outlined-button.$prefix, $mat-tokens);
}

@mixin base($theme) {
  // TODO(mmalerba): Move button base tokens here
}

@mixin color($theme) {
  .mat-mdc-button {
    @include _text-button-variant($theme, null);

    &.mat-primary {
      @include _text-button-variant($theme, primary);
    }

    &.mat-accent {
      @include _text-button-variant($theme, accent);
    }

    &.mat-warn {
      @include _text-button-variant($theme, warn);
    }
  }

  .mat-mdc-unelevated-button {
    @include _filled-button-variant($theme, null);

    &.mat-primary {
      @include _filled-button-variant($theme, primary);
    }

    &.mat-accent {
      @include _filled-button-variant($theme, accent);
    }

    &.mat-warn {
      @include _filled-button-variant($theme, warn);
    }
  }

  .mat-mdc-raised-button {
    @include _protected-button-variant($theme, null);

    &.mat-primary {
      @include _protected-button-variant($theme, primary);
    }

    &.mat-accent {
      @include _protected-button-variant($theme, accent);
    }

    &.mat-warn {
      @include _protected-button-variant($theme, warn);
    }

    // TODO(wagnermaciel): Remove this workaround when b/301126527 is resolved
    @include mdc-helpers.disable-mdc-fallback-declarations {
      @include mdc-elevation-theme.elevation(2);

      &:hover, &:focus {
        @include mdc-elevation-theme.elevation(4);
      }

      &:active, &:focus:active {
        @include mdc-elevation-theme.elevation(8);
      }
    }
  }

  .mat-mdc-outlined-button {
    @include _outlined-button-variant($theme, null);

    &.mat-primary {
      @include _outlined-button-variant($theme, primary);
    }

    &.mat-accent {
      @include _outlined-button-variant($theme, accent);
    }

    &.mat-warn {
      @include _outlined-button-variant($theme, warn);
    }
  }
}

@mixin typography($theme) {
  @include mdc-helpers.using-mdc-typography($theme) {
    @include mdc-button.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);
  }
}

@mixin density($theme) {
  $density-scale: theming.clamp-density(inspection.get-theme-density($theme), -3);

  .mat-mdc-button {
    $density-tokens: tokens-mdc-text-button.get-density-tokens($theme);
    @include mdc-button-text-theme.theme($density-tokens);
    @include button-base.mat-private-button-touch-target-density($density-scale);
  }

  .mat-mdc-raised-button {
    $density-tokens: tokens-mdc-protected-button.get-density-tokens($theme);
    @include mdc-button-protected-theme.theme($density-tokens);
    @include button-base.mat-private-button-touch-target-density($density-scale);
  }

  .mat-mdc-unelevated-button {
    $density-tokens: tokens-mdc-filled-button.get-density-tokens($theme);
    @include mdc-button-filled-theme.theme($density-tokens);
    @include button-base.mat-private-button-touch-target-density($density-scale);
  }

  .mat-mdc-outlined-button {
    $density-tokens: tokens-mdc-outlined-button.get-density-tokens($theme);
    @include mdc-button-outlined-theme.theme($density-tokens);
    @include button-base.mat-private-button-touch-target-density($density-scale);
  }
}

@mixin theme($theme) {
  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button') {
    @include base($theme);
    @if inspection.theme-has($theme, color) {
      @include color($theme);
    }
    @if inspection.theme-has($theme, density) {
      @include density($theme);
    }
    @if inspection.theme-has($theme, typography) {
      @include typography($theme);
    }
  }
}
