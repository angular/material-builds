@use '@material/textfield/filled-text-field-theme' as mdc-filled-text-field-theme;
@use '@material/textfield/outlined-text-field-theme' as mdc-outlined-text-field-theme;

@use '../core/tokens/m2/mdc/filled-text-field' as tokens-mdc-filled-text-field;
@use '../core/tokens/m2/mdc/outlined-text-field' as tokens-mdc-outlined-text-field;
@use '../core/tokens/m2/mat/form-field' as tokens-mat-form-field;
@use '../core/theming/theming';
@use '../core/typography/typography';
@use '../core/mdc-helpers/mdc-helpers';
@use '../core/style/sass-utils';
@use '../core/tokens/token-utils';
@use './form-field-density';
@use './form-field-subscript';
@use './form-field-focus-overlay';
@use './form-field-native-select';
@use './mdc-text-field-theme-variable-refresh';

@mixin color($config-or-theme) {
  $config: theming.get-color-config($config-or-theme);

  @include sass-utils.current-selector-or-root() {
    @include mdc-filled-text-field-theme.theme(
      tokens-mdc-filled-text-field.get-color-tokens($config));
    @include mdc-outlined-text-field-theme.theme(
      tokens-mdc-outlined-text-field.get-color-tokens($config));
    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,
      tokens-mat-form-field.get-color-tokens($config));
  }

  @include mdc-helpers.using-mdc-theme($config) {
    @include mdc-text-field-theme-variable-refresh.private-text-field-refresh-theme-variables() {
      @include form-field-subscript.private-form-field-subscript-color();
      @include form-field-focus-overlay.private-form-field-focus-overlay-color();
      @include form-field-native-select.private-form-field-native-select-color($config);

      .mat-mdc-form-field.mat-accent {
        @include mdc-filled-text-field-theme.theme(
          tokens-mdc-filled-text-field.private-get-color-palette-color-tokens($config, accent));
        @include mdc-outlined-text-field-theme.theme(
          tokens-mdc-outlined-text-field.private-get-color-palette-color-tokens($config, accent));
      }

      .mat-mdc-form-field.mat-warn {
        @include mdc-filled-text-field-theme.theme(
          tokens-mdc-filled-text-field.private-get-color-palette-color-tokens($config, warn));
        @include mdc-outlined-text-field-theme.theme(
          tokens-mdc-outlined-text-field.private-get-color-palette-color-tokens($config, warn));
      }

      // This fixes an issue where the notch appears to be thicker than the rest of the outline when
      // zoomed in on Chrome. The border inconsistency seems to be some kind of rendering artifact
      // that arises from a combination of the fact that the notch contains text, while the leading
      // and trailing outline do not, combined with the fact that the border is semi-transparent.
      // Experimentally, I discovered that adding a transparent left border fixes the inconsistency.
      // Note: class name is repeated to achieve sufficient specificity over the various MDC states.
      // (hover, focus, etc.)
      // TODO(mmalerba): port this fix into MDC
      // TODO(crisbeto): move this into the structural styles
      .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field {
        &.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch {
          border-left: 1px solid transparent;
        }
      }

      [dir='rtl'] {
        .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field {
          &.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch {
            border-left: none;
            border-right: 1px solid transparent;
          }
        }
      }
    }
  }
}

@mixin typography($config-or-theme) {
  $config: typography.private-typography-to-2018-config(
      theming.get-typography-config($config-or-theme));

  @include sass-utils.current-selector-or-root() {
    @include mdc-filled-text-field-theme.theme(
      tokens-mdc-filled-text-field.get-typography-tokens($config));
    @include mdc-outlined-text-field-theme.theme(
      tokens-mdc-outlined-text-field.get-typography-tokens($config));
    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,
      tokens-mat-form-field.get-typography-tokens($config));
  }
}

@mixin density($config-or-theme) {
  $density-scale: theming.get-density-config($config-or-theme);
  @include form-field-density.private-form-field-density($density-scale);
}

@mixin theme($theme-or-color-config) {
  $theme: theming.private-legacy-get-theme($theme-or-color-config);
  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field') {
    $color: theming.get-color-config($theme);
    $density: theming.get-density-config($theme);
    $typography: theming.get-typography-config($theme);

    @if $color != null {
      @include color($color);
    }
    @if $density != null {
      @include density($density);
    }
    @if $typography != null {
      @include typography($typography);
    }
  }
}
