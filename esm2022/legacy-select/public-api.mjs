/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
export { MatLegacySelectModule } from './select-module';
export { matLegacySelectAnimations } from './select-animations';
export { MatLegacySelectChange, MatLegacySelect, MatLegacySelectTrigger, } from './select';
export { 
/**
 * @deprecated Use `MAT_SELECT_CONFIG` from `@angular/material/select` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.
 * @breaking-change 17.0.0
 */
MAT_SELECT_CONFIG as MAT_LEGACY_SELECT_CONFIG, 
/**
 * @deprecated Use `MAT_SELECT_SCROLL_STRATEGY` from `@angular/material/select` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.
 * @breaking-change 17.0.0
 */
MAT_SELECT_SCROLL_STRATEGY as MAT_LEGACY_SELECT_SCROLL_STRATEGY, 
/**
 * @deprecated Use `MAT_SELECT_SCROLL_STRATEGY_PROVIDER` from `@angular/material/select` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.
 * @breaking-change 17.0.0
 */
MAT_SELECT_SCROLL_STRATEGY_PROVIDER as MAT_LEGACY_SELECT_SCROLL_STRATEGY_PROVIDER, 
/**
 * @deprecated Use `MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY` from `@angular/material/select` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.
 * @breaking-change 17.0.0
 */
MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY as MAT_LEGACY_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, 
/**
 * @deprecated Use `MAT_SELECT_TRIGGER` from `@angular/material/select` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.
 * @breaking-change 17.0.0
 */
MAT_SELECT_TRIGGER as MAT_LEGACY_SELECT_TRIGGER, } from '@angular/material/select';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9tYXRlcmlhbC9sZWdhY3ktc2VsZWN0L3B1YmxpYy1hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUgsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDdEQsT0FBTyxFQUFDLHlCQUF5QixFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDOUQsT0FBTyxFQUNMLHFCQUFxQixFQUNyQixlQUFlLEVBQ2Ysc0JBQXNCLEdBRXZCLE1BQU0sVUFBVSxDQUFDO0FBRWxCLE9BQU87QUFDTDs7O0dBR0c7QUFDSCxpQkFBaUIsSUFBSSx3QkFBd0I7QUFFN0M7OztHQUdHO0FBQ0gsMEJBQTBCLElBQUksaUNBQWlDO0FBRS9EOzs7R0FHRztBQUNILG1DQUFtQyxJQUFJLDBDQUEwQztBQUVqRjs7O0dBR0c7QUFDSCwyQ0FBMkMsSUFBSSxrREFBa0Q7QUFFakc7OztHQUdHO0FBQ0gsa0JBQWtCLElBQUkseUJBQXlCLEdBQ2hELE1BQU0sMEJBQTBCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cblxuZXhwb3J0IHtNYXRMZWdhY3lTZWxlY3RNb2R1bGV9IGZyb20gJy4vc2VsZWN0LW1vZHVsZSc7XG5leHBvcnQge21hdExlZ2FjeVNlbGVjdEFuaW1hdGlvbnN9IGZyb20gJy4vc2VsZWN0LWFuaW1hdGlvbnMnO1xuZXhwb3J0IHtcbiAgTWF0TGVnYWN5U2VsZWN0Q2hhbmdlLFxuICBNYXRMZWdhY3lTZWxlY3QsXG4gIE1hdExlZ2FjeVNlbGVjdFRyaWdnZXIsXG4gIE1hdExlZ2FjeVNlbGVjdENvbmZpZyxcbn0gZnJvbSAnLi9zZWxlY3QnO1xuXG5leHBvcnQge1xuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBNQVRfU0VMRUNUX0NPTkZJR2AgZnJvbSBgQGFuZ3VsYXIvbWF0ZXJpYWwvc2VsZWN0YCBpbnN0ZWFkLiBTZWUgaHR0cHM6Ly9tYXRlcmlhbC5hbmd1bGFyLmlvL2d1aWRlL21kYy1taWdyYXRpb24gZm9yIGluZm9ybWF0aW9uIGFib3V0IG1pZ3JhdGluZy5cbiAgICogQGJyZWFraW5nLWNoYW5nZSAxNy4wLjBcbiAgICovXG4gIE1BVF9TRUxFQ1RfQ09ORklHIGFzIE1BVF9MRUdBQ1lfU0VMRUNUX0NPTkZJRyxcblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBNQVRfU0VMRUNUX1NDUk9MTF9TVFJBVEVHWWAgZnJvbSBgQGFuZ3VsYXIvbWF0ZXJpYWwvc2VsZWN0YCBpbnN0ZWFkLiBTZWUgaHR0cHM6Ly9tYXRlcmlhbC5hbmd1bGFyLmlvL2d1aWRlL21kYy1taWdyYXRpb24gZm9yIGluZm9ybWF0aW9uIGFib3V0IG1pZ3JhdGluZy5cbiAgICogQGJyZWFraW5nLWNoYW5nZSAxNy4wLjBcbiAgICovXG4gIE1BVF9TRUxFQ1RfU0NST0xMX1NUUkFURUdZIGFzIE1BVF9MRUdBQ1lfU0VMRUNUX1NDUk9MTF9TVFJBVEVHWSxcblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBNQVRfU0VMRUNUX1NDUk9MTF9TVFJBVEVHWV9QUk9WSURFUmAgZnJvbSBgQGFuZ3VsYXIvbWF0ZXJpYWwvc2VsZWN0YCBpbnN0ZWFkLiBTZWUgaHR0cHM6Ly9tYXRlcmlhbC5hbmd1bGFyLmlvL2d1aWRlL21kYy1taWdyYXRpb24gZm9yIGluZm9ybWF0aW9uIGFib3V0IG1pZ3JhdGluZy5cbiAgICogQGJyZWFraW5nLWNoYW5nZSAxNy4wLjBcbiAgICovXG4gIE1BVF9TRUxFQ1RfU0NST0xMX1NUUkFURUdZX1BST1ZJREVSIGFzIE1BVF9MRUdBQ1lfU0VMRUNUX1NDUk9MTF9TVFJBVEVHWV9QUk9WSURFUixcblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBNQVRfU0VMRUNUX1NDUk9MTF9TVFJBVEVHWV9QUk9WSURFUl9GQUNUT1JZYCBmcm9tIGBAYW5ndWxhci9tYXRlcmlhbC9zZWxlY3RgIGluc3RlYWQuIFNlZSBodHRwczovL21hdGVyaWFsLmFuZ3VsYXIuaW8vZ3VpZGUvbWRjLW1pZ3JhdGlvbiBmb3IgaW5mb3JtYXRpb24gYWJvdXQgbWlncmF0aW5nLlxuICAgKiBAYnJlYWtpbmctY2hhbmdlIDE3LjAuMFxuICAgKi9cbiAgTUFUX1NFTEVDVF9TQ1JPTExfU1RSQVRFR1lfUFJPVklERVJfRkFDVE9SWSBhcyBNQVRfTEVHQUNZX1NFTEVDVF9TQ1JPTExfU1RSQVRFR1lfUFJPVklERVJfRkFDVE9SWSxcblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGBNQVRfU0VMRUNUX1RSSUdHRVJgIGZyb20gYEBhbmd1bGFyL21hdGVyaWFsL3NlbGVjdGAgaW5zdGVhZC4gU2VlIGh0dHBzOi8vbWF0ZXJpYWwuYW5ndWxhci5pby9ndWlkZS9tZGMtbWlncmF0aW9uIGZvciBpbmZvcm1hdGlvbiBhYm91dCBtaWdyYXRpbmcuXG4gICAqIEBicmVha2luZy1jaGFuZ2UgMTcuMC4wXG4gICAqL1xuICBNQVRfU0VMRUNUX1RSSUdHRVIgYXMgTUFUX0xFR0FDWV9TRUxFQ1RfVFJJR0dFUixcbn0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvc2VsZWN0JztcbiJdfQ==