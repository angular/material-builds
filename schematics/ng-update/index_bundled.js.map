{
  "version": 3,
  "sources": ["../../../../../../../node_modules/tslib/tslib.js", "../../../../../../../src/material/schematics/ng-update/migrations/hammer-gestures-v9/find-hammer-script-tags.ts", "../../../../../../../src/material/schematics/ng-update/migrations/hammer-gestures-v9/find-main-module.ts", "../../../../../../../src/material/schematics/ng-update/migrations/hammer-gestures-v9/gesture-config-template.ts", "../../../../../../../src/material/schematics/ng-update/migrations/hammer-gestures-v9/hammer-template-check.ts", "../../../../../../../src/material/schematics/ng-update/migrations/hammer-gestures-v9/import-manager.ts", "../../../../../../../src/material/schematics/ng-update/migrations/hammer-gestures-v9/remove-array-element.ts", "../../../../../../../src/material/schematics/ng-update/migrations/hammer-gestures-v9/remove-element-from-html.ts", "../../../../../../../src/material/schematics/ng-update/migrations/hammer-gestures-v9/hammer-gestures-migration.ts", "../../../../../../../src/material/schematics/ng-update/migrations/misc-checks/misc-class-inheritance.ts", "../../../../../../../src/material/schematics/ng-update/migrations/misc-checks/misc-class-names.ts", "../../../../../../../src/material/schematics/ng-update/migrations/misc-checks/misc-imports.ts", "../../../../../../../src/material/schematics/ng-update/migrations/misc-checks/misc-property-names.ts", "../../../../../../../src/material/schematics/ng-update/migrations/misc-checks/misc-template.ts", "../../../../../../../src/material/schematics/ng-update/migrations/misc-ripples-v7/ripple-speed-factor.ts", "../../../../../../../src/material/schematics/ng-update/migrations/misc-ripples-v7/ripple-speed-factor-migration.ts", "../../../../../../../src/material/schematics/ng-update/typescript/module-specifiers.ts", "../../../../../../../src/material/schematics/ng-update/migrations/package-imports-v8/material-symbols.ts", "../../../../../../../src/material/schematics/ng-update/migrations/package-imports-v8/secondary-entry-points-migration.ts", "../../../../../../../src/material/schematics/ng-update/migrations/theming-api-v12/config.ts", "../../../../../../../src/material/schematics/ng-update/migrations/theming-api-v12/migration.ts", "../../../../../../../src/material/schematics/ng-update/migrations/theming-api-v12/theming-api-migration.ts", "../../../../../../../src/material/schematics/ng-update/migrations/legacy-components-v15/index.ts", "../../../../../../../src/material/schematics/ng-update/data/attribute-selectors.ts", "../../../../../../../src/material/schematics/ng-update/data/class-names.ts", "../../../../../../../src/material/schematics/ng-update/data/constructor-checks.ts", "../../../../../../../src/material/schematics/ng-update/data/css-selectors.ts", "../../../../../../../src/material/schematics/ng-update/data/element-selectors.ts", "../../../../../../../src/material/schematics/ng-update/data/input-names.ts", "../../../../../../../src/material/schematics/ng-update/data/method-call-checks.ts", "../../../../../../../src/material/schematics/ng-update/data/output-names.ts", "../../../../../../../src/material/schematics/ng-update/data/property-names.ts", "../../../../../../../src/material/schematics/ng-update/data/symbol-removal.ts", "../../../../../../../src/material/schematics/ng-update/data/index.ts", "../../../../../../../src/material/schematics/ng-update/upgrade-data.ts", "../../../../../../../src/material/schematics/ng-update/index.ts"],
  "sourcesContent": ["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __spreadArray;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function(m, o) {\r\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n    };\r\n\r\n    __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __spreadArray = function (to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || Array.prototype.slice.call(from));\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    var __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, state, kind, f) {\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n        return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, state, value, kind, f) {\r\n        if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n        return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__spreadArray\", __spreadArray);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {parse5} from '@angular/cdk/schematics';\n\n/**\n * Parses the specified HTML content and looks for \"script\" elements which\n * potentially import HammerJS. These elements will be returned.\n */\nexport function findHammerScriptImportElements(htmlContent: string): parse5.Element[] {\n  const document = parse5.parse(htmlContent, {sourceCodeLocationInfo: true});\n  const nodeQueue = [...(document as parse5.Document).childNodes];\n  const result: parse5.Element[] = [];\n\n  while (nodeQueue.length) {\n    const node = nodeQueue.shift() as parse5.Element;\n\n    if (node.childNodes) {\n      nodeQueue.push(...node.childNodes);\n    }\n\n    if (node.nodeName.toLowerCase() === 'script' && node.attrs.length !== 0) {\n      const srcAttribute = node.attrs.find(a => a.name === 'src');\n      if (srcAttribute && isPotentialHammerScriptReference(srcAttribute.value)) {\n        result.push(node);\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Checks whether the specified source path is potentially referring to the\n * HammerJS script output.\n */\nfunction isPotentialHammerScriptReference(srcPath: string): boolean {\n  return /\\/hammer(\\.min)?\\.js($|\\?)/.test(srcPath);\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ts from 'typescript';\n\n/**\n * Finds the main Angular module within the specified source file. The first module\n * that is part of the \"bootstrapModule\" expression is returned.\n */\nexport function findMainModuleExpression(mainSourceFile: ts.SourceFile): ts.Expression | null {\n  let foundModule: ts.Expression | null = null;\n  const visitNode = (node: ts.Node) => {\n    if (\n      ts.isCallExpression(node) &&\n      node.arguments.length &&\n      ts.isPropertyAccessExpression(node.expression) &&\n      ts.isIdentifier(node.expression.name) &&\n      node.expression.name.text === 'bootstrapModule'\n    ) {\n      foundModule = node.arguments[0]!;\n    } else {\n      ts.forEachChild(node, visitNode);\n    }\n  };\n\n  ts.forEachChild(mainSourceFile, visitNode);\n\n  return foundModule;\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const gestureConfigTemplate = `\n/**\n * Custom HammerJS configuration forked from Angular Material. With Angular v9,\n * Angular Material dropped HammerJS as a dependency. This configuration was added\n * automatically to this application because ng-update detected that this application\n * directly used custom HammerJS gestures defined by Angular Material.\n *\n * Read more in the dedicated guide: https://github.com/angular/components/blob/3a204da37fd1366cae411b5c234517ecad199737/guides/v9-hammerjs-migration.md?\n */\n\nimport {Injectable, Inject, Optional, Type} from '@angular/core';\nimport {HammerGestureConfig} from '@angular/platform-browser';\nimport {MAT_HAMMER_OPTIONS} from '@angular/material/core';\n\n/**\n * Noop hammer instance that is used when an instance is requested, but\n * Hammer has not been loaded on the page yet.\n */\nconst noopHammerInstance = {\n  on: () => {},\n  off: () => {},\n};\n\n/**\n * Gesture config that provides custom Hammer gestures on top of the default Hammer\n * gestures. These gestures will be available as events in component templates.\n */\n@Injectable()\nexport class GestureConfig extends HammerGestureConfig {\n  /** List of event names to add to the Hammer gesture plugin list */\n  events = [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n  ];\n\n  constructor(@Optional() @Inject(MAT_HAMMER_OPTIONS) private hammerOptions?: any) {\n    super();\n  }\n\n  /**\n   * Builds Hammer instance manually to add custom recognizers that match the\n   * Material Design specification. Gesture names originate from the Material Design\n   * gestures: https://material.io/design/#gestures-touch-mechanics\n   *\n   * More information on default recognizers can be found in the Hammer docs:\n   *   http://hammerjs.github.io/recognizer-pan/\n   *   http://hammerjs.github.io/recognizer-press/\n   * @param element Element to which to assign the new HammerJS gestures.\n   * @returns Newly-created HammerJS instance.\n   */\n  buildHammer(element: HTMLElement): any {\n    const hammer: any = typeof window !== 'undefined' ? (window as any).Hammer : null;\n\n    if (!hammer) {\n      return noopHammerInstance;\n    }\n\n    const mc = new hammer(element, this.hammerOptions || undefined);\n\n    // Default Hammer Recognizers.\n    const pan = new hammer.Pan();\n    const swipe = new hammer.Swipe();\n    const press = new hammer.Press();\n\n    // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n    // Otherwise the previous \\`recognizeWith\\` will be dropped.\n    const slide = this._createRecognizer(pan, {event: 'slide', threshold: 0}, swipe);\n    const longpress = this._createRecognizer(press, {event: 'longpress', time: 500});\n\n    // Overwrite the default \\`pan\\` event to use the swipe event.\n    pan.recognizeWith(swipe);\n\n    // Since the slide event threshold is set to zero, the slide recognizer can fire and\n    // accidentally reset the longpress recognizer. In order to make sure that the two\n    // recognizers can run simultaneously but don't affect each other, we allow the slide\n    // recognizer to recognize while a longpress is being processed.\n    // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n    longpress.recognizeWith(slide);\n\n    // Add customized gestures to Hammer manager\n    mc.add([swipe, press, pan, slide, longpress]);\n\n    return mc;\n  }\n\n  /** Creates a new recognizer, without affecting the default recognizers of HammerJS */\n  private _createRecognizer(base: object, options: any, ...inheritances: object[]) {\n    const recognizer = new (base.constructor as Type<any>)(options);\n    inheritances.push(base);\n    inheritances.forEach(item => recognizer.recognizeWith(item));\n    return recognizer;\n  }\n}\n`;\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {parse5} from '@angular/cdk/schematics';\n\n/** List of known events which are supported by the \"HammerGesturesPlugin\". */\nconst STANDARD_HAMMERJS_EVENTS = [\n  // Events supported by the \"HammerGesturesPlugin\". See:\n  // angular/angular/blob/0119f46d/packages/platform-browser/src/dom/events/hammer_gestures.ts#L19\n  'pan',\n  'panstart',\n  'panmove',\n  'panend',\n  'pancancel',\n  'panleft',\n  'panright',\n  'panup',\n  'pandown',\n  'pinch',\n  'pinchstart',\n  'pinchmove',\n  'pinchend',\n  'pinchcancel',\n  'pinchin',\n  'pinchout',\n  'press',\n  'pressup',\n  'rotate',\n  'rotatestart',\n  'rotatemove',\n  'rotateend',\n  'rotatecancel',\n  'swipe',\n  'swipeleft',\n  'swiperight',\n  'swipeup',\n  'swipedown',\n  'tap',\n];\n\n/** List of events which are provided by the deprecated Angular Material \"GestureConfig\". */\nconst CUSTOM_MATERIAL_HAMMERJS_EVENS = [\n  'longpress',\n  'slide',\n  'slidestart',\n  'slideend',\n  'slideright',\n  'slideleft',\n];\n\n/**\n * Parses the specified HTML and searches for elements with Angular outputs listening to\n * one of the known HammerJS events. This check naively assumes that the bindings never\n * match on a component output, but only on the Hammer plugin.\n */\nexport function isHammerJsUsedInTemplate(html: string): {\n  standardEvents: boolean;\n  customEvents: boolean;\n} {\n  const document = parse5.parseFragment(html, {sourceCodeLocationInfo: true});\n  let customEvents = false;\n  let standardEvents = false;\n  const visitNodes = (nodes: parse5.ChildNode[]) => {\n    nodes.forEach(node => {\n      if (!isElement(node)) {\n        return;\n      }\n\n      for (let attr of node.attrs) {\n        if (!customEvents && CUSTOM_MATERIAL_HAMMERJS_EVENS.some(e => `(${e})` === attr.name)) {\n          customEvents = true;\n        }\n        if (!standardEvents && STANDARD_HAMMERJS_EVENTS.some(e => `(${e})` === attr.name)) {\n          standardEvents = true;\n        }\n      }\n\n      // Do not continue traversing the AST if both type of HammerJS\n      // usages have been detected already.\n      if (!customEvents || !standardEvents) {\n        visitNodes(node.childNodes);\n      }\n    });\n  };\n  visitNodes((document as unknown as parse5.Document).childNodes);\n  return {customEvents, standardEvents};\n}\n\nfunction isElement(node: any): node is parse5.Element {\n  return !!node.attrs;\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FileSystem} from '@angular/cdk/schematics';\nimport {dirname, resolve} from 'path';\nimport * as ts from 'typescript';\n\n// tslint:disable:no-bitwise\n\n/** Enum describing the possible states of an analyzed import. */\nconst enum ImportState {\n  UNMODIFIED = 0b0,\n  MODIFIED = 0b10,\n  ADDED = 0b100,\n  DELETED = 0b1000,\n}\n\n/** Interface describing an import specifier. */\ninterface ImportSpecifier {\n  name: ts.Identifier;\n  propertyName?: ts.Identifier;\n}\n\n/** Interface describing an analyzed import. */\ninterface AnalyzedImport {\n  node: ts.ImportDeclaration;\n  moduleName: string;\n  name?: ts.Identifier;\n  specifiers?: ImportSpecifier[];\n  namespace?: boolean;\n  state: ImportState;\n}\n\n/** Checks whether an analyzed import has the given import flag set. */\nconst hasFlag = (data: AnalyzedImport, flag: ImportState) => (data.state & flag) !== 0;\n\n/**\n * Import manager that can be used to add or remove TypeScript imports within source\n * files. The manager ensures that multiple transformations are applied properly\n * without shifted offsets and that existing imports are re-used.\n */\nexport class ImportManager {\n  /** Map of source-files and their previously used identifier names. */\n  private _usedIdentifierNames = new Map<ts.SourceFile, string[]>();\n\n  /** Map of source files and their analyzed imports. */\n  private _importCache = new Map<ts.SourceFile, AnalyzedImport[]>();\n\n  constructor(private _fileSystem: FileSystem, private _printer: ts.Printer) {}\n\n  /**\n   * Analyzes the import of the specified source file if needed. In order to perform\n   * modifications to imports of a source file, we store all imports in memory and\n   * update the source file once all changes have been made. This is essential to\n   * ensure that we can re-use newly added imports and not break file offsets.\n   */\n  private _analyzeImportsIfNeeded(sourceFile: ts.SourceFile): AnalyzedImport[] {\n    if (this._importCache.has(sourceFile)) {\n      return this._importCache.get(sourceFile)!;\n    }\n\n    const result: AnalyzedImport[] = [];\n    for (let node of sourceFile.statements) {\n      if (!ts.isImportDeclaration(node) || !ts.isStringLiteral(node.moduleSpecifier)) {\n        continue;\n      }\n\n      const moduleName = node.moduleSpecifier.text;\n\n      // Handles side-effect imports which do neither have a name or\n      // specifiers. e.g. `import \"my-package\";`\n      if (!node.importClause) {\n        result.push({moduleName, node, state: ImportState.UNMODIFIED});\n        continue;\n      }\n\n      // Handles imports resolving to default exports of a module.\n      // e.g. `import moment from \"moment\";`\n      if (!node.importClause.namedBindings) {\n        result.push({\n          moduleName,\n          node,\n          name: node.importClause.name,\n          state: ImportState.UNMODIFIED,\n        });\n        continue;\n      }\n\n      // Handles imports with individual symbol specifiers.\n      // e.g. `import {A, B, C} from \"my-module\";`\n      if (ts.isNamedImports(node.importClause.namedBindings)) {\n        result.push({\n          moduleName,\n          node,\n          specifiers: node.importClause.namedBindings.elements.map(el => ({\n            name: el.name,\n            propertyName: el.propertyName,\n          })),\n          state: ImportState.UNMODIFIED,\n        });\n      } else {\n        // Handles namespaced imports. e.g. `import * as core from \"my-pkg\";`\n        result.push({\n          moduleName,\n          node,\n          name: node.importClause.namedBindings.name,\n          namespace: true,\n          state: ImportState.UNMODIFIED,\n        });\n      }\n    }\n    this._importCache.set(sourceFile, result);\n    return result;\n  }\n\n  /**\n   * Checks whether the given specifier, which can be relative to the base path,\n   * matches the passed module name.\n   */\n  private _isModuleSpecifierMatching(\n    basePath: string,\n    specifier: string,\n    moduleName: string,\n  ): boolean {\n    return specifier.startsWith('.')\n      ? resolve(basePath, specifier) === resolve(basePath, moduleName)\n      : specifier === moduleName;\n  }\n\n  /** Deletes a given named binding import from the specified source file. */\n  deleteNamedBindingImport(sourceFile: ts.SourceFile, symbolName: string, moduleName: string) {\n    const sourceDir = dirname(sourceFile.fileName);\n    const fileImports = this._analyzeImportsIfNeeded(sourceFile);\n\n    for (let importData of fileImports) {\n      if (\n        !this._isModuleSpecifierMatching(sourceDir, importData.moduleName, moduleName) ||\n        !importData.specifiers\n      ) {\n        continue;\n      }\n\n      const specifierIndex = importData.specifiers.findIndex(\n        d => (d.propertyName || d.name).text === symbolName,\n      );\n      if (specifierIndex !== -1) {\n        importData.specifiers.splice(specifierIndex, 1);\n        // if the import does no longer contain any specifiers after the removal of the\n        // given symbol, we can just mark the whole import for deletion. Otherwise, we mark\n        // it as modified so that it will be re-printed.\n        if (importData.specifiers.length === 0) {\n          importData.state |= ImportState.DELETED;\n        } else {\n          importData.state |= ImportState.MODIFIED;\n        }\n      }\n    }\n  }\n\n  /** Deletes the import that matches the given import declaration if found. */\n  deleteImportByDeclaration(declaration: ts.ImportDeclaration) {\n    const fileImports = this._analyzeImportsIfNeeded(declaration.getSourceFile());\n    for (let importData of fileImports) {\n      if (importData.node === declaration) {\n        importData.state |= ImportState.DELETED;\n      }\n    }\n  }\n\n  /**\n   * Adds an import to the given source file and returns the TypeScript expression that\n   * can be used to access the newly imported symbol.\n   *\n   * Whenever an import is added to a source file, it's recommended that the returned\n   * expression is used to reference th symbol. This is necessary because the symbol\n   * could be aliased if it would collide with existing imports in source file.\n   *\n   * @param sourceFile Source file to which the import should be added.\n   * @param symbolName Name of the symbol that should be imported. Can be null if\n   *    the default export is requested.\n   * @param moduleName Name of the module of which the symbol should be imported.\n   * @param typeImport Whether the symbol is a type.\n   * @param ignoreIdentifierCollisions List of identifiers which can be ignored when\n   *    the import manager checks for import collisions.\n   */\n  addImportToSourceFile(\n    sourceFile: ts.SourceFile,\n    symbolName: string | null,\n    moduleName: string,\n    typeImport = false,\n    ignoreIdentifierCollisions: ts.Identifier[] = [],\n  ): ts.Expression {\n    const sourceDir = dirname(sourceFile.fileName);\n    const fileImports = this._analyzeImportsIfNeeded(sourceFile);\n\n    let existingImport: AnalyzedImport | null = null;\n    for (let importData of fileImports) {\n      if (!this._isModuleSpecifierMatching(sourceDir, importData.moduleName, moduleName)) {\n        continue;\n      }\n\n      // If no symbol name has been specified, the default import is requested. In that\n      // case we search for non-namespace and non-specifier imports.\n      if (!symbolName && !importData.namespace && !importData.specifiers) {\n        return ts.factory.createIdentifier(importData.name!.text);\n      }\n\n      // In case a \"Type\" symbol is imported, we can't use namespace imports\n      // because these only export symbols available at runtime (no types)\n      if (importData.namespace && !typeImport) {\n        return ts.factory.createPropertyAccessExpression(\n          ts.factory.createIdentifier(importData.name!.text),\n          ts.factory.createIdentifier(symbolName || 'default'),\n        );\n      } else if (importData.specifiers && symbolName) {\n        const existingSpecifier = importData.specifiers.find(s =>\n          s.propertyName ? s.propertyName.text === symbolName : s.name.text === symbolName,\n        );\n\n        if (existingSpecifier) {\n          return ts.factory.createIdentifier(existingSpecifier.name.text);\n        }\n\n        // In case the symbol could not be found in an existing import, we\n        // keep track of the import declaration as it can be updated to include\n        // the specified symbol name without having to create a new import.\n        existingImport = importData;\n      }\n    }\n\n    // If there is an existing import that matches the specified module, we\n    // just update the import specifiers to also import the requested symbol.\n    if (existingImport) {\n      const propertyIdentifier = ts.factory.createIdentifier(symbolName!);\n      const generatedUniqueIdentifier = this._getUniqueIdentifier(\n        sourceFile,\n        symbolName!,\n        ignoreIdentifierCollisions,\n      );\n      const needsGeneratedUniqueName = generatedUniqueIdentifier.text !== symbolName;\n      const importName = needsGeneratedUniqueName ? generatedUniqueIdentifier : propertyIdentifier;\n\n      existingImport.specifiers!.push({\n        name: importName,\n        propertyName: needsGeneratedUniqueName ? propertyIdentifier : undefined,\n      });\n      existingImport.state |= ImportState.MODIFIED;\n\n      if (hasFlag(existingImport, ImportState.DELETED)) {\n        // unset the deleted flag if the import is pending deletion, but\n        // can now be used for the new imported symbol.\n        existingImport.state &= ~ImportState.DELETED;\n      }\n\n      return importName;\n    }\n\n    let identifier: ts.Identifier | null = null;\n    let newImport: AnalyzedImport | null = null;\n\n    if (symbolName) {\n      const propertyIdentifier = ts.factory.createIdentifier(symbolName);\n      const generatedUniqueIdentifier = this._getUniqueIdentifier(\n        sourceFile,\n        symbolName,\n        ignoreIdentifierCollisions,\n      );\n      const needsGeneratedUniqueName = generatedUniqueIdentifier.text !== symbolName;\n      identifier = needsGeneratedUniqueName ? generatedUniqueIdentifier : propertyIdentifier;\n\n      const newImportDecl = ts.factory.createImportDeclaration(\n        undefined,\n        undefined,\n        ts.factory.createImportClause(false, undefined, ts.factory.createNamedImports([])),\n        ts.factory.createStringLiteral(moduleName),\n      );\n\n      newImport = {\n        moduleName,\n        node: newImportDecl,\n        specifiers: [\n          {\n            propertyName: needsGeneratedUniqueName ? propertyIdentifier : undefined,\n            name: identifier,\n          },\n        ],\n        state: ImportState.ADDED,\n      };\n    } else {\n      identifier = this._getUniqueIdentifier(\n        sourceFile,\n        'defaultExport',\n        ignoreIdentifierCollisions,\n      );\n      const newImportDecl = ts.factory.createImportDeclaration(\n        undefined,\n        undefined,\n        ts.factory.createImportClause(false, identifier, undefined),\n        ts.factory.createStringLiteral(moduleName),\n      );\n      newImport = {\n        moduleName,\n        node: newImportDecl,\n        name: identifier,\n        state: ImportState.ADDED,\n      };\n    }\n    fileImports.push(newImport);\n    return identifier;\n  }\n\n  /**\n   * Applies the recorded changes in the update recorders of the corresponding source files.\n   * The changes are applied separately after all changes have been recorded because otherwise\n   * file offsets will change and the source files would need to be re-parsed after each change.\n   */\n  recordChanges() {\n    this._importCache.forEach((fileImports, sourceFile) => {\n      const recorder = this._fileSystem.edit(this._fileSystem.resolve(sourceFile.fileName));\n      const lastUnmodifiedImport = fileImports\n        .reverse()\n        .find(i => i.state === ImportState.UNMODIFIED);\n      const importStartIndex = lastUnmodifiedImport\n        ? this._getEndPositionOfNode(lastUnmodifiedImport.node)\n        : 0;\n\n      fileImports.forEach(importData => {\n        if (importData.state === ImportState.UNMODIFIED) {\n          return;\n        }\n\n        if (hasFlag(importData, ImportState.DELETED)) {\n          // Imports which do not exist in source file, can be just skipped as\n          // we do not need any replacement to delete the import.\n          if (!hasFlag(importData, ImportState.ADDED)) {\n            recorder.remove(importData.node.getFullStart(), importData.node.getFullWidth());\n          }\n          return;\n        }\n\n        if (importData.specifiers) {\n          const namedBindings = importData.node.importClause!.namedBindings as ts.NamedImports;\n          const importSpecifiers = importData.specifiers.map(s =>\n            ts.factory.createImportSpecifier(false, s.propertyName, s.name),\n          );\n          const updatedBindings = ts.factory.updateNamedImports(namedBindings, importSpecifiers);\n\n          // In case an import has been added newly, we need to print the whole import\n          // declaration and insert it at the import start index. Otherwise, we just\n          // update the named bindings to not re-print the whole import (which could\n          // cause unnecessary formatting changes)\n          if (hasFlag(importData, ImportState.ADDED)) {\n            const updatedImport = ts.factory.updateImportDeclaration(\n              importData.node,\n              undefined,\n              undefined,\n              ts.factory.createImportClause(false, undefined, updatedBindings),\n              ts.factory.createStringLiteral(importData.moduleName),\n              undefined,\n            );\n            const newImportText = this._printer.printNode(\n              ts.EmitHint.Unspecified,\n              updatedImport,\n              sourceFile,\n            );\n            recorder.insertLeft(\n              importStartIndex,\n              importStartIndex === 0 ? `${newImportText}\\n` : `\\n${newImportText}`,\n            );\n            return;\n          } else if (hasFlag(importData, ImportState.MODIFIED)) {\n            const newNamedBindingsText = this._printer.printNode(\n              ts.EmitHint.Unspecified,\n              updatedBindings,\n              sourceFile,\n            );\n            recorder.remove(namedBindings.getStart(), namedBindings.getWidth());\n            recorder.insertRight(namedBindings.getStart(), newNamedBindingsText);\n            return;\n          }\n        } else if (hasFlag(importData, ImportState.ADDED)) {\n          const newImportText = this._printer.printNode(\n            ts.EmitHint.Unspecified,\n            importData.node,\n            sourceFile,\n          );\n          recorder.insertLeft(\n            importStartIndex,\n            importStartIndex === 0 ? `${newImportText}\\n` : `\\n${newImportText}`,\n          );\n          return;\n        }\n\n        // we should never hit this, but we rather want to print a custom exception\n        // instead of just skipping imports silently.\n        throw Error('Unexpected import modification.');\n      });\n    });\n  }\n\n  /**\n   * Corrects the line and character position of a given node. Since nodes of\n   * source files are immutable and we sometimes make changes to the containing\n   * source file, the node position might shift (e.g. if we add a new import before).\n   *\n   * This method can be used to retrieve a corrected position of the given node. This\n   * is helpful when printing out error messages which should reflect the new state of\n   * source files.\n   */\n  correctNodePosition(node: ts.Node, offset: number, position: ts.LineAndCharacter) {\n    const sourceFile = node.getSourceFile();\n\n    if (!this._importCache.has(sourceFile)) {\n      return position;\n    }\n\n    const newPosition: ts.LineAndCharacter = {...position};\n    const fileImports = this._importCache.get(sourceFile)!;\n\n    for (let importData of fileImports) {\n      const fullEnd = importData.node.getFullStart() + importData.node.getFullWidth();\n      // Subtract or add lines based on whether an import has been deleted or removed\n      // before the actual node offset.\n      if (offset > fullEnd && hasFlag(importData, ImportState.DELETED)) {\n        newPosition.line--;\n      } else if (offset > fullEnd && hasFlag(importData, ImportState.ADDED)) {\n        newPosition.line++;\n      }\n    }\n    return newPosition;\n  }\n\n  /**\n   * Returns an unique identifier name for the specified symbol name.\n   * @param sourceFile Source file to check for identifier collisions.\n   * @param symbolName Name of the symbol for which we want to generate an unique name.\n   * @param ignoreIdentifierCollisions List of identifiers which should be ignored when\n   *    checking for identifier collisions in the given source file.\n   */\n  private _getUniqueIdentifier(\n    sourceFile: ts.SourceFile,\n    symbolName: string,\n    ignoreIdentifierCollisions: ts.Identifier[],\n  ): ts.Identifier {\n    if (this._isUniqueIdentifierName(sourceFile, symbolName, ignoreIdentifierCollisions)) {\n      this._recordUsedIdentifier(sourceFile, symbolName);\n      return ts.factory.createIdentifier(symbolName);\n    }\n\n    let name: string | null = null;\n    let counter = 1;\n    do {\n      name = `${symbolName}_${counter++}`;\n    } while (!this._isUniqueIdentifierName(sourceFile, name, ignoreIdentifierCollisions));\n\n    this._recordUsedIdentifier(sourceFile, name!);\n    return ts.factory.createIdentifier(name!);\n  }\n\n  /**\n   * Checks whether the specified identifier name is used within the given source file.\n   * @param sourceFile Source file to check for identifier collisions.\n   * @param name Name of the identifier which is checked for its uniqueness.\n   * @param ignoreIdentifierCollisions List of identifiers which should be ignored when\n   *    checking for identifier collisions in the given source file.\n   */\n  private _isUniqueIdentifierName(\n    sourceFile: ts.SourceFile,\n    name: string,\n    ignoreIdentifierCollisions: ts.Identifier[],\n  ) {\n    if (\n      this._usedIdentifierNames.has(sourceFile) &&\n      this._usedIdentifierNames.get(sourceFile)!.indexOf(name) !== -1\n    ) {\n      return false;\n    }\n\n    // Walk through the source file and search for an identifier matching\n    // the given name. In that case, it's not guaranteed that this name\n    // is unique in the given declaration scope and we just return false.\n    const nodeQueue: ts.Node[] = [sourceFile];\n    while (nodeQueue.length) {\n      const node = nodeQueue.shift()!;\n      if (\n        ts.isIdentifier(node) &&\n        node.text === name &&\n        !ignoreIdentifierCollisions.includes(node)\n      ) {\n        return false;\n      }\n      nodeQueue.push(...node.getChildren());\n    }\n    return true;\n  }\n\n  /**\n   * Records that the given identifier is used within the specified source file. This\n   * is necessary since we do not apply changes to source files per change, but still\n   * want to avoid conflicts with newly imported symbols.\n   */\n  private _recordUsedIdentifier(sourceFile: ts.SourceFile, identifierName: string) {\n    this._usedIdentifierNames.set(\n      sourceFile,\n      (this._usedIdentifierNames.get(sourceFile) || []).concat(identifierName),\n    );\n  }\n\n  /**\n   * Determines the full end of a given node. By default the end position of a node is\n   * before all trailing comments. This could mean that generated imports shift comments.\n   */\n  private _getEndPositionOfNode(node: ts.Node) {\n    const nodeEndPos = node.getEnd();\n    const commentRanges = ts.getTrailingCommentRanges(node.getSourceFile().text, nodeEndPos);\n    if (!commentRanges || !commentRanges.length) {\n      return nodeEndPos;\n    }\n    return commentRanges[commentRanges.length - 1]!.end;\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {UpdateRecorder} from '@angular-devkit/schematics';\nimport * as ts from 'typescript';\n\n/**\n * Retrieves the parent syntax list of the given node. A syntax list node is usually\n * hidden from the default AST node hierarchy because it only contains information that\n * is need when printing a node. e.g. it contains information about comma positions in\n * an array literal expression.\n */\nexport function getParentSyntaxList(node: ts.Node): ts.SyntaxList | null {\n  if (!node.parent) {\n    return null;\n  }\n  const parent = node.parent;\n  const {pos, end} = node;\n  for (const child of parent.getChildren()) {\n    if (child.pos > end || child === node) {\n      return null;\n    }\n\n    if (child.kind === ts.SyntaxKind.SyntaxList && child.pos <= pos && child.end >= end) {\n      return child as ts.SyntaxList;\n    }\n  }\n  return null;\n}\n\n/** Looks for the trailing comma of the given element within the syntax list. */\nfunction findTrailingCommaToken(list: ts.SyntaxList, element: ts.Node): ts.Node | null {\n  let foundElement = false;\n  for (let child of list.getChildren()) {\n    if (!foundElement && child === element) {\n      foundElement = true;\n    } else if (foundElement) {\n      if (child.kind === ts.SyntaxKind.CommaToken) {\n        return child;\n      }\n      break;\n    }\n  }\n  return null;\n}\n\n/** Removes a given element from its parent array literal expression. */\nexport function removeElementFromArrayExpression(element: ts.Node, recorder: UpdateRecorder) {\n  recorder.remove(element.getFullStart(), element.getFullWidth());\n\n  const syntaxList = getParentSyntaxList(element);\n  if (!syntaxList) {\n    return;\n  }\n\n  // if there is a trailing comma token for the element, we need to remove it\n  // because otherwise the array literal expression will have syntax failures.\n  const trailingComma = findTrailingCommaToken(syntaxList, element);\n  if (trailingComma !== null) {\n    recorder.remove(trailingComma.getFullStart(), trailingComma.getFullWidth());\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {UpdateRecorder} from '@angular-devkit/schematics';\nimport {parse5} from '@angular/cdk/schematics';\n\n/**\n * Removes the specified element. Additionally, preceding whitespace will be removed\n * to not leave empty lines in the resulting HTML.\n */\nexport function removeElementFromHtml(element: parse5.Element, recorder: UpdateRecorder) {\n  // sourceCodeLocation is always set since we parse with location info enabled.\n  const {startOffset, endOffset} = element.sourceCodeLocation!;\n  const parentIndex = element.parentNode.childNodes.indexOf(element);\n  const precedingTextSibling = element.parentNode.childNodes.find(\n    (f, i): f is parse5.TextNode => f.nodeName === '#text' && i === parentIndex - 1,\n  );\n\n  recorder.remove(startOffset, endOffset - startOffset);\n\n  // If we found a preceding text node which just consists of whitespace, remove it.\n  if (precedingTextSibling && /^\\s+$/.test(precedingTextSibling.value)) {\n    const textSiblingLocation = precedingTextSibling.sourceCodeLocation!;\n    recorder.remove(\n      textSiblingLocation.startOffset,\n      textSiblingLocation.endOffset - textSiblingLocation.startOffset,\n    );\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {dirname, join, Path, relative} from '@angular-devkit/core';\nimport {SchematicContext, Tree} from '@angular-devkit/schematics';\nimport {\n  addSymbolToNgModuleMetadata,\n  DevkitMigration,\n  getDecoratorMetadata,\n  getImportOfIdentifier,\n  getMetadataField,\n  getProjectIndexFiles,\n  getProjectMainFile,\n  Import,\n  MigrationFailure,\n  PostMigrationAction,\n  ResolvedResource,\n  TargetVersion,\n} from '@angular/cdk/schematics';\nimport {InsertChange} from '@schematics/angular/utility/change';\nimport * as ts from 'typescript';\n\nimport {findHammerScriptImportElements} from './find-hammer-script-tags';\nimport {findMainModuleExpression} from './find-main-module';\nimport {gestureConfigTemplate} from './gesture-config-template';\nimport {isHammerJsUsedInTemplate} from './hammer-template-check';\nimport {ImportManager} from './import-manager';\nimport {removeElementFromArrayExpression} from './remove-array-element';\nimport {removeElementFromHtml} from './remove-element-from-html';\n\nconst GESTURE_CONFIG_CLASS_NAME = 'GestureConfig';\nconst GESTURE_CONFIG_FILE_NAME = 'gesture-config';\n\nconst HAMMER_CONFIG_TOKEN_NAME = 'HAMMER_GESTURE_CONFIG';\nconst HAMMER_CONFIG_TOKEN_MODULE = '@angular/platform-browser';\n\nconst HAMMER_MODULE_NAME = 'HammerModule';\nconst HAMMER_MODULE_IMPORT = '@angular/platform-browser';\n\nconst HAMMER_MODULE_SPECIFIER = 'hammerjs';\n\nconst CANNOT_REMOVE_REFERENCE_ERROR = `Cannot remove reference to \"GestureConfig\". Please remove manually.`;\n\ninterface IdentifierReference {\n  node: ts.Identifier;\n  importData: Import;\n  isImport: boolean;\n}\n\ninterface PackageJson {\n  dependencies: Record<string, string>;\n}\n\nexport class HammerGesturesMigration extends DevkitMigration<null> {\n  // The migration is enabled when v9 or v10 are targeted, but actual targets are only\n  // migrated if they are not test targets. We cannot migrate test targets since they have\n  // a limited scope, in regards to their source files, and therefore the HammerJS usage\n  // detection could be incorrect.\n  enabled =\n    HammerGesturesMigration._isAllowedVersion(this.targetVersion) && !this.context.isTestTarget;\n\n  private _printer = ts.createPrinter();\n  private _importManager = new ImportManager(this.fileSystem, this._printer);\n  private _nodeFailures: {node: ts.Node; message: string}[] = [];\n\n  /**\n   * Whether custom HammerJS events provided by the Material gesture\n   * config are used in a template.\n   */\n  private _customEventsUsedInTemplate = false;\n\n  /** Whether standard HammerJS events are used in a template. */\n  private _standardEventsUsedInTemplate = false;\n\n  /** Whether HammerJS is accessed at runtime. */\n  private _usedInRuntime = false;\n\n  /**\n   * List of imports that make \"hammerjs\" available globally. We keep track of these\n   * since we might need to remove them if Hammer is not used.\n   */\n  private _installImports: ts.ImportDeclaration[] = [];\n\n  /**\n   * List of identifiers which resolve to the gesture config from Angular Material.\n   */\n  private _gestureConfigReferences: IdentifierReference[] = [];\n\n  /**\n   * List of identifiers which resolve to the \"HAMMER_GESTURE_CONFIG\" token from\n   * \"@angular/platform-browser\".\n   */\n  private _hammerConfigTokenReferences: IdentifierReference[] = [];\n\n  /**\n   * List of identifiers which resolve to the \"HammerModule\" from\n   * \"@angular/platform-browser\".\n   */\n  private _hammerModuleReferences: IdentifierReference[] = [];\n\n  /**\n   * List of identifiers that have been deleted from source files. This can be\n   * used to determine if certain imports are still used or not.\n   */\n  private _deletedIdentifiers: ts.Identifier[] = [];\n\n  override visitTemplate(template: ResolvedResource): void {\n    if (!this._customEventsUsedInTemplate || !this._standardEventsUsedInTemplate) {\n      const {standardEvents, customEvents} = isHammerJsUsedInTemplate(template.content);\n      this._customEventsUsedInTemplate = this._customEventsUsedInTemplate || customEvents;\n      this._standardEventsUsedInTemplate = this._standardEventsUsedInTemplate || standardEvents;\n    }\n  }\n\n  override visitNode(node: ts.Node): void {\n    this._checkHammerImports(node);\n    this._checkForRuntimeHammerUsage(node);\n    this._checkForMaterialGestureConfig(node);\n    this._checkForHammerGestureConfigToken(node);\n    this._checkForHammerModuleReference(node);\n  }\n\n  override postAnalysis(): void {\n    // Walk through all hammer config token references and check if there\n    // is a potential custom gesture config setup.\n    const hasCustomGestureConfigSetup = this._hammerConfigTokenReferences.some(r =>\n      this._checkForCustomGestureConfigSetup(r),\n    );\n    const usedInTemplate = this._standardEventsUsedInTemplate || this._customEventsUsedInTemplate;\n\n    /*\n      Possible scenarios and how the migration should change the project:\n        1. We detect that a custom HammerJS gesture config is set up:\n            - Remove references to the Material gesture config if no HammerJS event is used.\n            - Print a warning about ambiguous configuration that cannot be handled completely\n              if there are references to the Material gesture config.\n        2. We detect that HammerJS is only used programmatically:\n            - Remove references to GestureConfig of Material.\n            - Remove references to the \"HammerModule\" if present.\n        3. We detect that standard HammerJS events are used in a template:\n            - Set up the \"HammerModule\" from platform-browser.\n            - Remove all gesture config references.\n        4. We detect that custom HammerJS events provided by the Material gesture\n           config are used.\n            - Copy the Material gesture config into the app.\n            - Rewrite all gesture config references to the newly copied one.\n            - Set up the new gesture config in the root app module.\n            - Set up the \"HammerModule\" from platform-browser.\n        4. We detect no HammerJS usage at all:\n            - Remove Hammer imports\n            - Remove Material gesture config references\n            - Remove HammerModule setup if present.\n            - Remove Hammer script imports in \"index.html\" files.\n    */\n\n    if (hasCustomGestureConfigSetup) {\n      // If a custom gesture config is provided, we always assume that HammerJS is used.\n      HammerGesturesMigration.globalUsesHammer = true;\n      if (!usedInTemplate && this._gestureConfigReferences.length) {\n        // If the Angular Material gesture events are not used and we found a custom\n        // gesture config, we can safely remove references to the Material gesture config\n        // since events provided by the Material gesture config are guaranteed to be unused.\n        this._removeMaterialGestureConfigSetup();\n        this.printInfo(\n          'The HammerJS v9 migration for Angular Components detected that HammerJS is ' +\n            'manually set up in combination with references to the Angular Material gesture ' +\n            'config. This target cannot be migrated completely, but all references to the ' +\n            'deprecated Angular Material gesture have been removed. Read more here: ' +\n            'https://github.com/angular/components/blob/3a204da37fd1366cae411b5c234517ecad199737/guides/v9-hammerjs-migration.md#the-migration-reported-ambiguous-usage-what-should-i-do',\n        );\n      } else if (usedInTemplate && this._gestureConfigReferences.length) {\n        // Since there is a reference to the Angular Material gesture config, and we detected\n        // usage of a gesture event that could be provided by Angular Material, we *cannot*\n        // automatically remove references. This is because we do *not* know whether the\n        // event is actually provided by the custom config or by the Material config.\n        this.printInfo(\n          'The HammerJS v9 migration for Angular Components detected that HammerJS is ' +\n            'manually set up in combination with references to the Angular Material gesture ' +\n            'config. This target cannot be migrated completely. Please manually remove ' +\n            'references to the deprecated Angular Material gesture config. Read more here: ' +\n            'https://github.com/angular/components/blob/3a204da37fd1366cae411b5c234517ecad199737/guides/v9-hammerjs-migration.md#the-migration-reported-ambiguous-usage-what-should-i-do',\n        );\n      }\n    } else if (this._usedInRuntime || usedInTemplate) {\n      // We keep track of whether Hammer is used globally. This is necessary because we\n      // want to only remove Hammer from the \"package.json\" if it is not used in any project\n      // target. Just because it isn't used in one target doesn't mean that we can safely\n      // remove the dependency.\n      HammerGesturesMigration.globalUsesHammer = true;\n\n      // If hammer is only used at runtime, we don't need the gesture config or \"HammerModule\"\n      // and can remove it (along with the hammer config token import if no longer needed).\n      if (!usedInTemplate) {\n        this._removeMaterialGestureConfigSetup();\n        this._removeHammerModuleReferences();\n      } else if (this._standardEventsUsedInTemplate && !this._customEventsUsedInTemplate) {\n        this._setupHammerWithStandardEvents();\n      } else {\n        this._setupHammerWithCustomEvents();\n      }\n    } else {\n      this._removeHammerSetup();\n    }\n\n    // Record the changes collected in the import manager. Changes need to be applied\n    // once the import manager registered all import modifications. This avoids collisions.\n    this._importManager.recordChanges();\n\n    // Create migration failures that will be printed by the update-tool on migration\n    // completion. We need special logic for updating failure positions to reflect\n    // the new source file after modifications from the import manager.\n    this.failures.push(...this._createMigrationFailures());\n\n    // The template check for HammerJS events is not completely reliable as the event\n    // output could also be from a component having an output named similarly to a known\n    // hammerjs event (e.g. \"@Output() slide\"). The usage is therefore somewhat ambiguous\n    // and we want to print a message that developers might be able to remove Hammer manually.\n    if (!hasCustomGestureConfigSetup && !this._usedInRuntime && usedInTemplate) {\n      this.printInfo(\n        'The HammerJS v9 migration for Angular Components migrated the ' +\n          'project to keep HammerJS installed, but detected ambiguous usage of HammerJS. Please ' +\n          'manually check if you can remove HammerJS from your application. More details: ' +\n          'https://github.com/angular/components/blob/3a204da37fd1366cae411b5c234517ecad199737/guides/v9-hammerjs-migration.md#the-migration-reported-ambiguous-usage-what-should-i-do',\n      );\n    }\n  }\n\n  /**\n   * Sets up the hammer gesture config in the current project. To achieve this, the\n   * following steps are performed:\n   *   1) Create copy of Angular Material gesture config.\n   *   2) Rewrite all references to the Angular Material gesture config to the\n   *      new gesture config.\n   *   3) Setup the HAMMER_GESTURE_CONFIG in the root app module (if not done already).\n   *   4) Setup the \"HammerModule\" in the root app module (if not done already).\n   */\n  private _setupHammerWithCustomEvents() {\n    const project = this.context.project;\n    const sourceRoot = this.fileSystem.resolve(project.sourceRoot || project.root);\n    const newConfigPath = join(sourceRoot, this._getAvailableGestureConfigFileName(sourceRoot));\n\n    // Copy gesture config template into the CLI project.\n    this.fileSystem.create(newConfigPath, gestureConfigTemplate);\n\n    // Replace all Material gesture config references to resolve to the\n    // newly copied gesture config.\n    this._gestureConfigReferences.forEach(i => {\n      const filePath = this.fileSystem.resolve(i.node.getSourceFile().fileName);\n      return this._replaceGestureConfigReference(\n        i,\n        GESTURE_CONFIG_CLASS_NAME,\n        getModuleSpecifier(newConfigPath, filePath),\n      );\n    });\n\n    // Setup the gesture config provider and the \"HammerModule\" in the root module\n    // if not done already. The \"HammerModule\" is needed in v9 since it enables the\n    // Hammer event plugin that was previously enabled by default in v8.\n    this._setupNewGestureConfigInRootModule(newConfigPath);\n    this._setupHammerModuleInRootModule();\n  }\n\n  /**\n   * Sets up the standard hammer module in the project and removes all\n   * references to the deprecated Angular Material gesture config.\n   */\n  private _setupHammerWithStandardEvents() {\n    // Setup the HammerModule. The HammerModule enables support for\n    // the standard HammerJS events.\n    this._setupHammerModuleInRootModule();\n    this._removeMaterialGestureConfigSetup();\n  }\n\n  /**\n   * Removes Hammer from the current project. The following steps are performed:\n   *   1) Delete all TypeScript imports to \"hammerjs\".\n   *   2) Remove references to the Angular Material gesture config.\n   *   3) Remove \"hammerjs\" from all index HTML files of the current project.\n   */\n  private _removeHammerSetup() {\n    this._installImports.forEach(i => this._importManager.deleteImportByDeclaration(i));\n\n    this._removeMaterialGestureConfigSetup();\n    this._removeHammerModuleReferences();\n    this._removeHammerFromIndexFile();\n  }\n\n  /**\n   * Removes the gesture config setup by deleting all found references to the Angular\n   * Material gesture config. Additionally, unused imports to the hammer gesture config\n   * token from \"@angular/platform-browser\" will be removed as well.\n   */\n  private _removeMaterialGestureConfigSetup() {\n    this._gestureConfigReferences.forEach(r => this._removeGestureConfigReference(r));\n\n    this._hammerConfigTokenReferences.forEach(r => {\n      if (r.isImport) {\n        this._removeHammerConfigTokenImportIfUnused(r);\n      }\n    });\n  }\n\n  /** Removes all references to the \"HammerModule\" from \"@angular/platform-browser\". */\n  private _removeHammerModuleReferences() {\n    this._hammerModuleReferences.forEach(({node, isImport, importData}) => {\n      const sourceFile = node.getSourceFile();\n      const recorder = this.fileSystem.edit(this.fileSystem.resolve(sourceFile.fileName));\n\n      // Only remove the import for the HammerModule if the module has been accessed\n      // through a non-namespaced identifier access.\n      if (!isNamespacedIdentifierAccess(node)) {\n        this._importManager.deleteNamedBindingImport(\n          sourceFile,\n          HAMMER_MODULE_NAME,\n          importData.moduleName,\n        );\n      }\n\n      // For references from within an import, we do not need to do anything other than\n      // removing the import. For other references, we remove the import and the actual\n      // identifier in the module imports.\n      if (isImport) {\n        return;\n      }\n\n      // If the \"HammerModule\" is referenced within an array literal, we can\n      // remove the element easily. Otherwise if it's outside of an array literal,\n      // we need to replace the reference with an empty object literal w/ todo to\n      // not break the application.\n      if (ts.isArrayLiteralExpression(node.parent)) {\n        // Removes the \"HammerModule\" from the parent array expression. Removes\n        // the trailing comma token if present.\n        removeElementFromArrayExpression(node, recorder);\n      } else {\n        recorder.remove(node.getStart(), node.getWidth());\n        recorder.insertRight(node.getStart(), `/* TODO: remove */ {}`);\n        this._nodeFailures.push({\n          node: node,\n          message: 'Unable to delete reference to \"HammerModule\".',\n        });\n      }\n    });\n  }\n\n  /**\n   * Checks if the given node is a reference to the hammer gesture config\n   * token from platform-browser. If so, keeps track of the reference.\n   */\n  private _checkForHammerGestureConfigToken(node: ts.Node) {\n    if (ts.isIdentifier(node)) {\n      const importData = getImportOfIdentifier(node, this.typeChecker);\n      if (\n        importData &&\n        importData.symbolName === HAMMER_CONFIG_TOKEN_NAME &&\n        importData.moduleName === HAMMER_CONFIG_TOKEN_MODULE\n      ) {\n        this._hammerConfigTokenReferences.push({\n          node,\n          importData,\n          isImport: ts.isImportSpecifier(node.parent),\n        });\n      }\n    }\n  }\n\n  /**\n   * Checks if the given node is a reference to the HammerModule from\n   * \"@angular/platform-browser\". If so, keeps track of the reference.\n   */\n  private _checkForHammerModuleReference(node: ts.Node) {\n    if (ts.isIdentifier(node)) {\n      const importData = getImportOfIdentifier(node, this.typeChecker);\n      if (\n        importData &&\n        importData.symbolName === HAMMER_MODULE_NAME &&\n        importData.moduleName === HAMMER_MODULE_IMPORT\n      ) {\n        this._hammerModuleReferences.push({\n          node,\n          importData,\n          isImport: ts.isImportSpecifier(node.parent),\n        });\n      }\n    }\n  }\n\n  /**\n   * Checks if the given node is an import to the HammerJS package. Imports to\n   * HammerJS which load specific symbols from the package are considered as\n   * runtime usage of Hammer. e.g. `import {Symbol} from \"hammerjs\";`.\n   */\n  private _checkHammerImports(node: ts.Node) {\n    if (\n      ts.isImportDeclaration(node) &&\n      ts.isStringLiteral(node.moduleSpecifier) &&\n      node.moduleSpecifier.text === HAMMER_MODULE_SPECIFIER\n    ) {\n      // If there is an import to HammerJS that imports symbols, or is namespaced\n      // (e.g. \"import {A, B} from ...\" or \"import * as hammer from ...\"), then we\n      // assume that some exports are used at runtime.\n      if (\n        node.importClause &&\n        !(\n          node.importClause.namedBindings &&\n          ts.isNamedImports(node.importClause.namedBindings) &&\n          node.importClause.namedBindings.elements.length === 0\n        )\n      ) {\n        this._usedInRuntime = true;\n      } else {\n        this._installImports.push(node);\n      }\n    }\n  }\n\n  /**\n   * Checks if the given node accesses the global \"Hammer\" symbol at runtime. If so,\n   * the migration rule state will be updated to reflect that Hammer is used at runtime.\n   */\n  private _checkForRuntimeHammerUsage(node: ts.Node) {\n    if (this._usedInRuntime) {\n      return;\n    }\n\n    // Detects usages of \"window.Hammer\".\n    if (ts.isPropertyAccessExpression(node) && node.name.text === 'Hammer') {\n      const originExpr = unwrapExpression(node.expression);\n      if (ts.isIdentifier(originExpr) && originExpr.text === 'window') {\n        this._usedInRuntime = true;\n      }\n      return;\n    }\n\n    // Detects usages of \"window['Hammer']\".\n    if (\n      ts.isElementAccessExpression(node) &&\n      ts.isStringLiteral(node.argumentExpression) &&\n      node.argumentExpression.text === 'Hammer'\n    ) {\n      const originExpr = unwrapExpression(node.expression);\n      if (ts.isIdentifier(originExpr) && originExpr.text === 'window') {\n        this._usedInRuntime = true;\n      }\n      return;\n    }\n\n    // Handles usages of plain identifier with the name \"Hammer\". These usage\n    // are valid if they resolve to \"@types/hammerjs\". e.g. \"new Hammer(myElement)\".\n    if (\n      ts.isIdentifier(node) &&\n      node.text === 'Hammer' &&\n      !ts.isPropertyAccessExpression(node.parent) &&\n      !ts.isElementAccessExpression(node.parent)\n    ) {\n      const symbol = this._getDeclarationSymbolOfNode(node);\n      if (\n        symbol &&\n        symbol.valueDeclaration &&\n        symbol.valueDeclaration.getSourceFile().fileName.includes('@types/hammerjs')\n      ) {\n        this._usedInRuntime = true;\n      }\n    }\n  }\n\n  /**\n   * Checks if the given node references the gesture config from Angular Material.\n   * If so, we keep track of the found symbol reference.\n   */\n  private _checkForMaterialGestureConfig(node: ts.Node) {\n    if (ts.isIdentifier(node)) {\n      const importData = getImportOfIdentifier(node, this.typeChecker);\n      if (\n        importData &&\n        importData.symbolName === GESTURE_CONFIG_CLASS_NAME &&\n        importData.moduleName.startsWith('@angular/material/')\n      ) {\n        this._gestureConfigReferences.push({\n          node,\n          importData,\n          isImport: ts.isImportSpecifier(node.parent),\n        });\n      }\n    }\n  }\n\n  /**\n   * Checks if the given Hammer gesture config token reference is part of an\n   * Angular provider definition that sets up a custom gesture config.\n   */\n  private _checkForCustomGestureConfigSetup(tokenRef: IdentifierReference): boolean {\n    // Walk up the tree to look for a parent property assignment of the\n    // reference to the hammer gesture config token.\n    let propertyAssignment: ts.Node = tokenRef.node;\n    while (propertyAssignment && !ts.isPropertyAssignment(propertyAssignment)) {\n      propertyAssignment = propertyAssignment.parent;\n    }\n\n    if (\n      !propertyAssignment ||\n      !ts.isPropertyAssignment(propertyAssignment) ||\n      getPropertyNameText(propertyAssignment.name) !== 'provide'\n    ) {\n      return false;\n    }\n\n    const objectLiteralExpr = propertyAssignment.parent;\n    const matchingIdentifiers = findMatchingChildNodes(objectLiteralExpr, ts.isIdentifier);\n\n    // We naively assume that if there is a reference to the \"GestureConfig\" export\n    // from Angular Material in the provider literal, that the provider sets up the\n    // Angular Material gesture config.\n    return !this._gestureConfigReferences.some(r => matchingIdentifiers.includes(r.node));\n  }\n\n  /**\n   * Determines an available file name for the gesture config which should\n   * be stored in the specified file path.\n   */\n  private _getAvailableGestureConfigFileName(sourceRoot: Path) {\n    if (!this.fileSystem.fileExists(join(sourceRoot, `${GESTURE_CONFIG_FILE_NAME}.ts`))) {\n      return `${GESTURE_CONFIG_FILE_NAME}.ts`;\n    }\n\n    let possibleName = `${GESTURE_CONFIG_FILE_NAME}-`;\n    let index = 1;\n    while (this.fileSystem.fileExists(join(sourceRoot, `${possibleName}-${index}.ts`))) {\n      index++;\n    }\n    return `${possibleName + index}.ts`;\n  }\n\n  /** Replaces a given gesture config reference with a new import. */\n  private _replaceGestureConfigReference(\n    {node, importData, isImport}: IdentifierReference,\n    symbolName: string,\n    moduleSpecifier: string,\n  ) {\n    const sourceFile = node.getSourceFile();\n    const recorder = this.fileSystem.edit(this.fileSystem.resolve(sourceFile.fileName));\n\n    // List of all identifiers referring to the gesture config in the current file. This\n    // allows us to add an import for the copied gesture configuration without generating a\n    // new identifier for the import to avoid collisions. i.e. \"GestureConfig_1\". The import\n    // manager checks for possible name collisions, but is able to ignore specific identifiers.\n    // We use this to ignore all references to the original Angular Material gesture config,\n    // because these will be replaced and therefore will not interfere.\n    const gestureIdentifiersInFile = this._getGestureConfigIdentifiersOfFile(sourceFile);\n\n    // If the parent of the identifier is accessed through a namespace, we can just\n    // import the new gesture config without rewriting the import declaration because\n    // the config has been imported through a namespaced import.\n    if (isNamespacedIdentifierAccess(node)) {\n      const newExpression = this._importManager.addImportToSourceFile(\n        sourceFile,\n        symbolName,\n        moduleSpecifier,\n        false,\n        gestureIdentifiersInFile,\n      );\n\n      recorder.remove(node.parent.getStart(), node.parent.getWidth());\n      recorder.insertRight(node.parent.getStart(), this._printNode(newExpression, sourceFile));\n      return;\n    }\n\n    // Delete the old import to the \"GestureConfig\".\n    this._importManager.deleteNamedBindingImport(\n      sourceFile,\n      GESTURE_CONFIG_CLASS_NAME,\n      importData.moduleName,\n    );\n\n    // If the current reference is not from inside of a import, we need to add a new\n    // import to the copied gesture config and replace the identifier. For references\n    // within an import, we do nothing but removing the actual import. This allows us\n    // to remove unused imports to the Material gesture config.\n    if (!isImport) {\n      const newExpression = this._importManager.addImportToSourceFile(\n        sourceFile,\n        symbolName,\n        moduleSpecifier,\n        false,\n        gestureIdentifiersInFile,\n      );\n\n      recorder.remove(node.getStart(), node.getWidth());\n      recorder.insertRight(node.getStart(), this._printNode(newExpression, sourceFile));\n    }\n  }\n\n  /**\n   * Removes a given gesture config reference and its corresponding import from\n   * its containing source file. Imports will be always removed, but in some cases,\n   * where it's not guaranteed that a removal can be performed safely, we just\n   * create a migration failure (and add a TODO if possible).\n   */\n  private _removeGestureConfigReference({node, importData, isImport}: IdentifierReference) {\n    const sourceFile = node.getSourceFile();\n    const recorder = this.fileSystem.edit(this.fileSystem.resolve(sourceFile.fileName));\n    // Only remove the import for the gesture config if the gesture config has\n    // been accessed through a non-namespaced identifier access.\n    if (!isNamespacedIdentifierAccess(node)) {\n      this._importManager.deleteNamedBindingImport(\n        sourceFile,\n        GESTURE_CONFIG_CLASS_NAME,\n        importData.moduleName,\n      );\n    }\n\n    // For references from within an import, we do not need to do anything other than\n    // removing the import. For other references, we remove the import and the reference\n    // identifier if used inside of a provider definition.\n    if (isImport) {\n      return;\n    }\n\n    const providerAssignment = node.parent;\n\n    // Only remove references to the gesture config which are part of a statically\n    // analyzable provider definition. We only support the common case of a gesture\n    // config provider definition where the config is set up through \"useClass\".\n    // Otherwise, it's not guaranteed that we can safely remove the provider definition.\n    if (\n      !ts.isPropertyAssignment(providerAssignment) ||\n      getPropertyNameText(providerAssignment.name) !== 'useClass'\n    ) {\n      this._nodeFailures.push({node, message: CANNOT_REMOVE_REFERENCE_ERROR});\n      return;\n    }\n\n    const objectLiteralExpr = providerAssignment.parent;\n    const provideToken = objectLiteralExpr.properties.find(\n      (p): p is ts.PropertyAssignment =>\n        ts.isPropertyAssignment(p) && getPropertyNameText(p.name) === 'provide',\n    );\n\n    // Do not remove the reference if the gesture config is not part of a provider definition,\n    // or if the provided toke is not referring to the known HAMMER_GESTURE_CONFIG token\n    // from platform-browser.\n    if (!provideToken || !this._isReferenceToHammerConfigToken(provideToken.initializer)) {\n      this._nodeFailures.push({node, message: CANNOT_REMOVE_REFERENCE_ERROR});\n      return;\n    }\n\n    // Collect all nested identifiers which will be deleted. This helps us\n    // determining if we can remove imports for the \"HAMMER_GESTURE_CONFIG\" token.\n    this._deletedIdentifiers.push(...findMatchingChildNodes(objectLiteralExpr, ts.isIdentifier));\n\n    // In case the found provider definition is not part of an array literal,\n    // we cannot safely remove the provider. This is because it could be declared\n    // as a variable. e.g. \"const gestureProvider = {provide: .., useClass: GestureConfig}\".\n    // In that case, we just add an empty object literal with TODO and print a failure.\n    if (!ts.isArrayLiteralExpression(objectLiteralExpr.parent)) {\n      recorder.remove(objectLiteralExpr.getStart(), objectLiteralExpr.getWidth());\n      recorder.insertRight(objectLiteralExpr.getStart(), `/* TODO: remove */ {}`);\n      this._nodeFailures.push({\n        node: objectLiteralExpr,\n        message:\n          `Unable to delete provider definition for \"GestureConfig\" completely. ` +\n          `Please clean up the provider.`,\n      });\n      return;\n    }\n\n    // Removes the object literal from the parent array expression. Removes\n    // the trailing comma token if present.\n    removeElementFromArrayExpression(objectLiteralExpr, recorder);\n  }\n\n  /** Removes the given hammer config token import if it is not used. */\n  private _removeHammerConfigTokenImportIfUnused({node, importData}: IdentifierReference) {\n    const sourceFile = node.getSourceFile();\n    const isTokenUsed = this._hammerConfigTokenReferences.some(\n      r =>\n        !r.isImport &&\n        !isNamespacedIdentifierAccess(r.node) &&\n        r.node.getSourceFile() === sourceFile &&\n        !this._deletedIdentifiers.includes(r.node),\n    );\n\n    // We don't want to remove the import for the token if the token is\n    // still used somewhere.\n    if (!isTokenUsed) {\n      this._importManager.deleteNamedBindingImport(\n        sourceFile,\n        HAMMER_CONFIG_TOKEN_NAME,\n        importData.moduleName,\n      );\n    }\n  }\n\n  /** Removes Hammer from all index HTML files of the current project. */\n  private _removeHammerFromIndexFile() {\n    const indexFilePaths = getProjectIndexFiles(this.context.project);\n    indexFilePaths.forEach(filePath => {\n      if (!this.fileSystem.fileExists(filePath)) {\n        return;\n      }\n\n      const htmlContent = this.fileSystem.read(filePath)!;\n      const recorder = this.fileSystem.edit(filePath);\n\n      findHammerScriptImportElements(htmlContent).forEach(el =>\n        removeElementFromHtml(el, recorder),\n      );\n    });\n  }\n\n  /** Sets up the Hammer gesture config in the root module if needed. */\n  private _setupNewGestureConfigInRootModule(gestureConfigPath: Path) {\n    const {project} = this.context;\n    const mainFilePath = getProjectMainFile(project);\n    const rootModuleSymbol = this._getRootModuleSymbol(mainFilePath);\n\n    if (rootModuleSymbol === null || rootModuleSymbol.valueDeclaration === undefined) {\n      this.failures.push({\n        filePath: mainFilePath,\n        message:\n          `Could not setup Hammer gestures in module. Please ` +\n          `manually ensure that the Hammer gesture config is set up.`,\n      });\n      return;\n    }\n\n    const sourceFile = rootModuleSymbol.valueDeclaration.getSourceFile();\n    const metadata = getDecoratorMetadata(\n      sourceFile,\n      'NgModule',\n      '@angular/core',\n    ) as ts.ObjectLiteralExpression[];\n\n    // If no \"NgModule\" definition is found inside the source file, we just do nothing.\n    if (!metadata.length) {\n      return;\n    }\n\n    const filePath = this.fileSystem.resolve(sourceFile.fileName);\n    const recorder = this.fileSystem.edit(filePath);\n    const providersField = getMetadataField(metadata[0], 'providers')[0];\n    const providerIdentifiers = providersField\n      ? findMatchingChildNodes(providersField, ts.isIdentifier)\n      : null;\n    const gestureConfigExpr = this._importManager.addImportToSourceFile(\n      sourceFile,\n      GESTURE_CONFIG_CLASS_NAME,\n      getModuleSpecifier(gestureConfigPath, filePath),\n      false,\n      this._getGestureConfigIdentifiersOfFile(sourceFile),\n    );\n    const hammerConfigTokenExpr = this._importManager.addImportToSourceFile(\n      sourceFile,\n      HAMMER_CONFIG_TOKEN_NAME,\n      HAMMER_CONFIG_TOKEN_MODULE,\n    );\n    const newProviderNode = ts.factory.createObjectLiteralExpression([\n      ts.factory.createPropertyAssignment('provide', hammerConfigTokenExpr),\n      ts.factory.createPropertyAssignment('useClass', gestureConfigExpr),\n    ]);\n\n    // If the providers field exists and already contains references to the hammer gesture\n    // config token and the gesture config, we naively assume that the gesture config is\n    // already set up. We only want to add the gesture config provider if it is not set up.\n    if (\n      !providerIdentifiers ||\n      !(\n        this._hammerConfigTokenReferences.some(r => providerIdentifiers.includes(r.node)) &&\n        this._gestureConfigReferences.some(r => providerIdentifiers.includes(r.node))\n      )\n    ) {\n      const symbolName = this._printNode(newProviderNode, sourceFile);\n      addSymbolToNgModuleMetadata(\n        sourceFile,\n        sourceFile.fileName,\n        'providers',\n        symbolName,\n        null,\n      ).forEach(change => {\n        if (change instanceof InsertChange) {\n          recorder.insertRight(change.pos, change.toAdd);\n        }\n      });\n    }\n  }\n\n  /**\n   * Gets the TypeScript symbol of the root module by looking for the module\n   * bootstrap expression in the specified source file.\n   */\n  private _getRootModuleSymbol(mainFilePath: Path): ts.Symbol | null {\n    const mainFile = this.program.getSourceFile(mainFilePath);\n    if (!mainFile) {\n      return null;\n    }\n\n    const appModuleExpr = findMainModuleExpression(mainFile);\n    if (!appModuleExpr) {\n      return null;\n    }\n\n    const appModuleSymbol = this._getDeclarationSymbolOfNode(unwrapExpression(appModuleExpr));\n    if (!appModuleSymbol || !appModuleSymbol.valueDeclaration) {\n      return null;\n    }\n    return appModuleSymbol;\n  }\n\n  /** Sets up the \"HammerModule\" in the root module of the current project. */\n  private _setupHammerModuleInRootModule() {\n    const {project} = this.context;\n    const mainFilePath = getProjectMainFile(project);\n    const rootModuleSymbol = this._getRootModuleSymbol(mainFilePath);\n\n    if (rootModuleSymbol === null || rootModuleSymbol.valueDeclaration === undefined) {\n      this.failures.push({\n        filePath: mainFilePath,\n        message:\n          `Could not setup HammerModule. Please manually set up the \"HammerModule\" ` +\n          `from \"@angular/platform-browser\".`,\n      });\n      return;\n    }\n\n    const sourceFile = rootModuleSymbol.valueDeclaration.getSourceFile();\n    const metadata = getDecoratorMetadata(\n      sourceFile,\n      'NgModule',\n      '@angular/core',\n    ) as ts.ObjectLiteralExpression[];\n    if (!metadata.length) {\n      return;\n    }\n\n    const importsField = getMetadataField(metadata[0], 'imports')[0];\n    const importIdentifiers = importsField\n      ? findMatchingChildNodes(importsField, ts.isIdentifier)\n      : null;\n    const recorder = this.fileSystem.edit(this.fileSystem.resolve(sourceFile.fileName));\n    const hammerModuleExpr = this._importManager.addImportToSourceFile(\n      sourceFile,\n      HAMMER_MODULE_NAME,\n      HAMMER_MODULE_IMPORT,\n    );\n\n    // If the \"HammerModule\" is not already imported in the app module, we set it up\n    // by adding it to the \"imports\" field of the app module.\n    if (\n      !importIdentifiers ||\n      !this._hammerModuleReferences.some(r => importIdentifiers.includes(r.node))\n    ) {\n      const symbolName = this._printNode(hammerModuleExpr, sourceFile);\n      addSymbolToNgModuleMetadata(\n        sourceFile,\n        sourceFile.fileName,\n        'imports',\n        symbolName,\n        null,\n      ).forEach(change => {\n        if (change instanceof InsertChange) {\n          recorder.insertRight(change.pos, change.toAdd);\n        }\n      });\n    }\n  }\n\n  /** Prints a given node within the specified source file. */\n  private _printNode(node: ts.Node, sourceFile: ts.SourceFile): string {\n    return this._printer.printNode(ts.EmitHint.Unspecified, node, sourceFile);\n  }\n\n  /** Gets all referenced gesture config identifiers of a given source file */\n  private _getGestureConfigIdentifiersOfFile(sourceFile: ts.SourceFile): ts.Identifier[] {\n    return this._gestureConfigReferences\n      .filter(d => d.node.getSourceFile() === sourceFile)\n      .map(d => d.node);\n  }\n\n  /** Gets the symbol that contains the value declaration of the specified node. */\n  private _getDeclarationSymbolOfNode(node: ts.Node): ts.Symbol | undefined {\n    const symbol = this.typeChecker.getSymbolAtLocation(node);\n\n    // Symbols can be aliases of the declaration symbol. e.g. in named import specifiers.\n    // We need to resolve the aliased symbol back to the declaration symbol.\n    // tslint:disable-next-line:no-bitwise\n    if (symbol && (symbol.flags & ts.SymbolFlags.Alias) !== 0) {\n      return this.typeChecker.getAliasedSymbol(symbol);\n    }\n    return symbol;\n  }\n\n  /**\n   * Checks whether the given expression resolves to a hammer gesture config\n   * token reference from \"@angular/platform-browser\".\n   */\n  private _isReferenceToHammerConfigToken(expr: ts.Expression) {\n    const unwrapped = unwrapExpression(expr);\n    if (ts.isIdentifier(unwrapped)) {\n      return this._hammerConfigTokenReferences.some(r => r.node === unwrapped);\n    } else if (ts.isPropertyAccessExpression(unwrapped)) {\n      return this._hammerConfigTokenReferences.some(r => r.node === unwrapped.name);\n    }\n    return false;\n  }\n\n  /**\n   * Creates migration failures of the collected node failures. The returned migration\n   * failures are updated to reflect the post-migration state of source files. Meaning\n   * that failure positions are corrected if source file modifications shifted lines.\n   */\n  private _createMigrationFailures(): MigrationFailure[] {\n    return this._nodeFailures.map(({node, message}) => {\n      const sourceFile = node.getSourceFile();\n      const offset = node.getStart();\n      const position = ts.getLineAndCharacterOfPosition(sourceFile, node.getStart());\n      return {\n        position: this._importManager.correctNodePosition(node, offset, position),\n        message: message,\n        filePath: this.fileSystem.resolve(sourceFile.fileName),\n      };\n    });\n  }\n\n  /** Global state of whether Hammer is used in any analyzed project target. */\n  static globalUsesHammer = false;\n\n  /**\n   * Static migration rule method that will be called once all project targets\n   * have been migrated individually. This method can be used to make changes based\n   * on the analysis of the individual targets. For example: we only remove Hammer\n   * from the \"package.json\" if it is not used in *any* project target.\n   */\n  static override globalPostMigration(\n    tree: Tree,\n    target: TargetVersion,\n    context: SchematicContext,\n  ): PostMigrationAction {\n    // Skip printing any global messages when the target version is not allowed.\n    if (!this._isAllowedVersion(target)) {\n      return;\n    }\n\n    // Always notify the developer that the Hammer v9 migration does not migrate tests.\n    context.logger.info(\n      '\\n\u26A0  General notice: The HammerJS v9 migration for Angular Components is not able to ' +\n        'migrate tests. Please manually clean up tests in your project if they rely on ' +\n        (this.globalUsesHammer ? 'the deprecated Angular Material gesture config.' : 'HammerJS.'),\n    );\n    context.logger.info(\n      'Read more about migrating tests: https://github.com/angular/components/blob/3a204da37fd1366cae411b5c234517ecad199737/guides/v9-hammerjs-migration.md#how-to-migrate-my-tests',\n    );\n\n    if (!this.globalUsesHammer && this._removeHammerFromPackageJson(tree)) {\n      // Since Hammer has been removed from the workspace \"package.json\" file,\n      // we schedule a node package install task to refresh the lock file.\n      return {runPackageManager: true};\n    }\n\n    // Clean global state once the workspace has been migrated. This is technically\n    // not necessary in \"ng update\", but in tests we re-use the same rule class.\n    this.globalUsesHammer = false;\n  }\n\n  /**\n   * Removes the hammer package from the workspace \"package.json\".\n   * @returns Whether Hammer was set up and has been removed from the \"package.json\"\n   */\n  private static _removeHammerFromPackageJson(tree: Tree): boolean {\n    if (!tree.exists('/package.json')) {\n      return false;\n    }\n\n    const packageJson = JSON.parse(tree.read('/package.json')!.toString('utf8')) as PackageJson;\n\n    // We do not handle the case where someone manually added \"hammerjs\" to the dev dependencies.\n    if (packageJson.dependencies && packageJson.dependencies[HAMMER_MODULE_SPECIFIER]) {\n      delete packageJson.dependencies[HAMMER_MODULE_SPECIFIER];\n      tree.overwrite('/package.json', JSON.stringify(packageJson, null, 2));\n      return true;\n    }\n    return false;\n  }\n\n  /** Gets whether the migration is allowed to run for specified target version. */\n  private static _isAllowedVersion(target: TargetVersion | null) {\n    // This migration is only allowed to run for v9 or v10 target versions.\n    return target === TargetVersion.V9 || target === TargetVersion.V10;\n  }\n}\n\n/**\n * Recursively unwraps a given expression if it is wrapped\n * by parenthesis, type casts or type assertions.\n */\nfunction unwrapExpression(node: ts.Node): ts.Node {\n  if (ts.isParenthesizedExpression(node)) {\n    return unwrapExpression(node.expression);\n  } else if (ts.isAsExpression(node)) {\n    return unwrapExpression(node.expression);\n  } else if (ts.isTypeAssertion(node)) {\n    return unwrapExpression(node.expression);\n  }\n  return node;\n}\n\n/**\n * Converts the specified path to a valid TypeScript module specifier which is\n * relative to the given containing file.\n */\nfunction getModuleSpecifier(newPath: Path, containingFile: Path) {\n  let result = relative(dirname(containingFile), newPath).replace(/\\\\/g, '/').replace(/\\.ts$/, '');\n  if (!result.startsWith('.')) {\n    result = `./${result}`;\n  }\n  return result;\n}\n\n/**\n * Gets the text of the given property name.\n * @returns Text of the given property name. Null if not statically analyzable.\n */\nfunction getPropertyNameText(node: ts.PropertyName): string | null {\n  if (ts.isIdentifier(node) || ts.isStringLiteralLike(node)) {\n    return node.text;\n  }\n  return null;\n}\n\n/** Checks whether the given identifier is part of a namespaced access. */\nfunction isNamespacedIdentifierAccess(node: ts.Identifier): boolean {\n  return ts.isQualifiedName(node.parent) || ts.isPropertyAccessExpression(node.parent);\n}\n\n/**\n * Walks through the specified node and returns all child nodes which match the\n * given predicate.\n */\nfunction findMatchingChildNodes<T extends ts.Node>(\n  parent: ts.Node,\n  predicate: (node: ts.Node) => node is T,\n): T[] {\n  const result: T[] = [];\n  const visitNode = (node: ts.Node) => {\n    if (predicate(node)) {\n      result.push(node);\n    }\n    ts.forEachChild(node, visitNode);\n  };\n  ts.forEachChild(parent, visitNode);\n  return result;\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {determineBaseTypes, Migration, TargetVersion} from '@angular/cdk/schematics';\nimport * as ts from 'typescript';\n\n/**\n * Migration that checks for classes that extend Angular Material classes which\n * have changed their API.\n */\nexport class MiscClassInheritanceMigration extends Migration<null> {\n  // Only enable this rule if the migration targets version 6. The rule\n  // currently only includes migrations for V6 deprecations.\n  enabled = this.targetVersion === TargetVersion.V6;\n\n  override visitNode(node: ts.Node): void {\n    if (ts.isClassDeclaration(node)) {\n      this._visitClassDeclaration(node);\n    }\n  }\n\n  private _visitClassDeclaration(node: ts.ClassDeclaration) {\n    const baseTypes = determineBaseTypes(node);\n    const className = node.name ? node.name.text : '{unknown-name}';\n\n    if (!baseTypes) {\n      return;\n    }\n\n    // Migration for: https://github.com/angular/components/pull/10293 (v6)\n    if (baseTypes.includes('MatFormFieldControl')) {\n      const hasFloatLabelMember = node.members\n        .filter(member => member.name)\n        .find(member => member.name!.getText() === 'shouldLabelFloat');\n\n      if (!hasFloatLabelMember) {\n        this.createFailureAtNode(\n          node,\n          `Found class \"${className}\" which extends ` +\n            `\"${'MatFormFieldControl'}\". This class must define ` +\n            `\"${'shouldLabelFloat'}\" which is now a required property.`,\n        );\n      }\n    }\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Migration, TargetVersion} from '@angular/cdk/schematics';\nimport * as ts from 'typescript';\n\n/**\n * Migration that looks for class name identifiers that have been removed but\n * cannot be automatically migrated.\n */\nexport class MiscClassNamesMigration extends Migration<null> {\n  // Only enable this rule if the migration targets version 6. The rule\n  // currently only includes migrations for V6 deprecations.\n  enabled = this.targetVersion === TargetVersion.V6;\n\n  override visitNode(node: ts.Node): void {\n    if (ts.isIdentifier(node)) {\n      this._visitIdentifier(node);\n    }\n  }\n\n  private _visitIdentifier(identifier: ts.Identifier) {\n    // Migration for: https://github.com/angular/components/pull/10279 (v6)\n    if (identifier.getText() === 'MatDrawerToggleResult') {\n      this.createFailureAtNode(\n        identifier,\n        `Found \"MatDrawerToggleResult\" which has changed from a class type to a string ` +\n          `literal type. Your code may need to be updated.`,\n      );\n    }\n\n    // Migration for: https://github.com/angular/components/pull/10398 (v6)\n    if (identifier.getText() === 'MatListOptionChange') {\n      this.createFailureAtNode(\n        identifier,\n        `Found usage of \"MatListOptionChange\" which has been removed. Please listen for ` +\n          `\"selectionChange\" on \"MatSelectionList\" instead.`,\n      );\n    }\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isMaterialImportDeclaration, Migration, TargetVersion} from '@angular/cdk/schematics';\nimport * as ts from 'typescript';\n\n/**\n * Migration that detects import declarations that refer to outdated identifiers from\n * Angular Material which cannot be updated automatically.\n */\nexport class MiscImportsMigration extends Migration<null> {\n  // Only enable this rule if the migration targets version 6. The rule\n  // currently only includes migrations for V6 deprecations.\n  enabled = this.targetVersion === TargetVersion.V6;\n\n  override visitNode(node: ts.Node): void {\n    if (ts.isImportDeclaration(node)) {\n      this._visitImportDeclaration(node);\n    }\n  }\n\n  private _visitImportDeclaration(node: ts.ImportDeclaration) {\n    if (\n      !isMaterialImportDeclaration(node) ||\n      !node.importClause ||\n      !node.importClause.namedBindings\n    ) {\n      return;\n    }\n\n    const namedBindings = node.importClause.namedBindings;\n\n    if (ts.isNamedImports(namedBindings)) {\n      // Migration for: https://github.com/angular/components/pull/10405 (v6)\n      this._checkAnimationConstants(namedBindings);\n    }\n  }\n\n  /**\n   * Checks for named imports that refer to the deleted animation constants.\n   * https://github.com/angular/components/commit/9f3bf274c4f15f0b0fbd8ab7dbf1a453076e66d9\n   */\n  private _checkAnimationConstants(namedImports: ts.NamedImports) {\n    namedImports.elements\n      .filter(element => ts.isIdentifier(element.name))\n      .forEach(element => {\n        const importName = element.name.text;\n\n        if (importName === 'SHOW_ANIMATION' || importName === 'HIDE_ANIMATION') {\n          this.createFailureAtNode(\n            element,\n            `Found deprecated symbol \"${importName}\" which has been removed`,\n          );\n        }\n      });\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Migration, TargetVersion} from '@angular/cdk/schematics';\nimport * as ts from 'typescript';\n\n/**\n * Migration that walks through every property access expression and and reports a failure if\n * a given property name no longer exists but cannot be automatically migrated.\n */\nexport class MiscPropertyNamesMigration extends Migration<null> {\n  // Only enable this rule if the migration targets version 6. The rule\n  // currently only includes migrations for V6 deprecations.\n  enabled = this.targetVersion === TargetVersion.V6;\n\n  override visitNode(node: ts.Node): void {\n    if (ts.isPropertyAccessExpression(node)) {\n      this._visitPropertyAccessExpression(node);\n    }\n  }\n\n  private _visitPropertyAccessExpression(node: ts.PropertyAccessExpression) {\n    const hostType = this.typeChecker.getTypeAtLocation(node.expression);\n    const typeName = hostType && hostType.symbol && hostType.symbol.getName();\n\n    // Migration for: https://github.com/angular/components/pull/10398 (v6)\n    if (typeName === 'MatListOption' && node.name.text === 'selectionChange') {\n      this.createFailureAtNode(\n        node,\n        `Found deprecated property \"selectionChange\" of ` +\n          `class \"MatListOption\". Use the \"selectionChange\" property on the ` +\n          `parent \"MatSelectionList\" instead.`,\n      );\n    }\n\n    // Migration for: https://github.com/angular/components/pull/10413 (v6)\n    if (typeName === 'MatDatepicker' && node.name.text === 'selectedChanged') {\n      this.createFailureAtNode(\n        node,\n        `Found deprecated property \"selectedChanged\" of ` +\n          `class \"MatDatepicker\". Use the \"dateChange\" or \"dateInput\" methods ` +\n          `on \"MatDatepickerInput\" instead.`,\n      );\n    }\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  findInputsOnElementWithTag,\n  findOutputsOnElementWithTag,\n  Migration,\n  ResolvedResource,\n  TargetVersion,\n} from '@angular/cdk/schematics';\n\n/**\n * Migration that walks through every inline or external template and reports if there\n * are outdated usages of the Angular Material API that needs to be updated manually.\n */\nexport class MiscTemplateMigration extends Migration<null> {\n  // Only enable this rule if the migration targets version 6. The rule\n  // currently only includes migrations for V6 deprecations.\n  enabled = this.targetVersion === TargetVersion.V6;\n\n  override visitTemplate(template: ResolvedResource): void {\n    // Migration for: https://github.com/angular/components/pull/10398 (v6)\n    findOutputsOnElementWithTag(template.content, 'selectionChange', ['mat-list-option']).forEach(\n      offset => {\n        this.failures.push({\n          filePath: template.filePath,\n          position: template.getCharacterAndLineOfPosition(template.start + offset),\n          message:\n            `Found deprecated \"selectionChange\" output binding on \"mat-list-option\". ` +\n            `Use \"selectionChange\" on \"mat-selection-list\" instead.`,\n        });\n      },\n    );\n\n    // Migration for: https://github.com/angular/components/pull/10413 (v6)\n    findOutputsOnElementWithTag(template.content, 'selectedChanged', ['mat-datepicker']).forEach(\n      offset => {\n        this.failures.push({\n          filePath: template.filePath,\n          position: template.getCharacterAndLineOfPosition(template.start + offset),\n          message:\n            `Found deprecated \"selectedChanged\" output binding on \"mat-datepicker\". ` +\n            `Use \"dateChange\" or \"dateInput\" on \"<input [matDatepicker]>\" instead.`,\n        });\n      },\n    );\n\n    // Migration for: https://github.com/angular/components/commit/f0bf6e7 (v6)\n    findInputsOnElementWithTag(template.content, 'selected', ['mat-button-toggle-group']).forEach(\n      offset => {\n        this.failures.push({\n          filePath: template.filePath,\n          position: template.getCharacterAndLineOfPosition(template.start + offset),\n          message:\n            `Found deprecated \"selected\" input binding on \"mat-radio-button-group\". ` +\n            `Use \"value\" instead.`,\n        });\n      },\n    );\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Converts the specified speed factor into the exact static enter duration. */\nexport function convertSpeedFactorToDuration(factor: number) {\n  // Based on the numeric speed factor value that only affected the `enterDuration` we can\n  // now calculate the exact `enterDuration`. 450ms is the enter duration without factor.\n  return 450 / (factor || 1);\n}\n\n/**\n * Creates a runtime TypeScript expression that can be used in order to calculate the duration\n * from the speed factor expression that couldn't be statically analyzed.\n *\n * @param speedFactorValue Speed factor expression that couldn't be statically analyzed.\n */\nexport function createSpeedFactorConvertExpression(speedFactorValue: string): string {\n  // To be sure that the speed factor value expression is calculated properly, we need to add\n  // the according parenthesis.\n  return `450 / (${speedFactorValue})`;\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Migration, ResolvedResource, TargetVersion, WorkspacePath} from '@angular/cdk/schematics';\nimport * as ts from 'typescript';\nimport {\n  convertSpeedFactorToDuration,\n  createSpeedFactorConvertExpression,\n} from './ripple-speed-factor';\n\n/** Regular expression that matches [matRippleSpeedFactor]=\"$NUMBER\" in templates. */\nconst speedFactorNumberRegex = /\\[matRippleSpeedFactor]=\"(\\d+(?:\\.\\d+)?)\"/g;\n\n/** Regular expression that matches [matRippleSpeedFactor]=\"$NOT_A_NUMBER\" in templates. */\nconst speedFactorNotParseable = /\\[matRippleSpeedFactor]=\"(?!\\d+(?:\\.\\d+)?\")(.*)\"/g;\n\n/**\n * Note that will be added whenever a speed factor expression has been converted to calculate\n * the according duration. This note should encourage people to clean up their code by switching\n * away from the speed factors to explicit durations.\n */\nconst removeNote = `TODO: Cleanup duration calculation.`;\n\n/**\n * Migration that walks through every property assignment and switches the global `baseSpeedFactor`\n * ripple option to the new global animation config. Also updates every class member assignment\n * that refers to MatRipple#speedFactor.\n */\nexport class RippleSpeedFactorMigration extends Migration<null> {\n  // Only enable this rule if the migration targets version 7 as the ripple\n  // speed factor has been removed in that version.\n  enabled = this.targetVersion === TargetVersion.V7;\n\n  override visitNode(node: ts.Node): void {\n    if (ts.isBinaryExpression(node)) {\n      this._visitBinaryExpression(node);\n    } else if (ts.isPropertyAssignment(node)) {\n      this._visitPropertyAssignment(node);\n    }\n  }\n\n  override visitTemplate(template: ResolvedResource): void {\n    let match: RegExpMatchArray | null;\n\n    while ((match = speedFactorNumberRegex.exec(template.content)) !== null) {\n      const newEnterDuration = convertSpeedFactorToDuration(parseFloat(match[1]));\n\n      this._replaceText(\n        template.filePath,\n        template.start + match.index!,\n        match[0].length,\n        `[matRippleAnimation]=\"{enterDuration: ${newEnterDuration}}\"`,\n      );\n    }\n\n    while ((match = speedFactorNotParseable.exec(template.content)) !== null) {\n      const newDurationExpression = createSpeedFactorConvertExpression(match[1]);\n      this._replaceText(\n        template.filePath,\n        template.start + match.index!,\n        match[0].length,\n        `[matRippleAnimation]=\"{enterDuration: (${newDurationExpression})}\"`,\n      );\n    }\n  }\n\n  /** Switches binary expressions (e.g. myRipple.speedFactor = 0.5) to the new animation config. */\n  private _visitBinaryExpression(expression: ts.BinaryExpression) {\n    if (!ts.isPropertyAccessExpression(expression.left)) {\n      return;\n    }\n\n    // Left side expression consists of target object and property name (e.g. myInstance.val)\n    const leftExpression = expression.left as ts.PropertyAccessExpression;\n    const targetTypeNode = this.typeChecker.getTypeAtLocation(leftExpression.expression);\n\n    if (!targetTypeNode.symbol) {\n      return;\n    }\n\n    const targetTypeName = targetTypeNode.symbol.getName();\n    const propertyName = leftExpression.name.getText();\n    const filePath = this.fileSystem.resolve(leftExpression.getSourceFile().fileName);\n\n    if (targetTypeName === 'MatRipple' && propertyName === 'speedFactor') {\n      if (ts.isNumericLiteral(expression.right)) {\n        const numericValue = parseFloat(expression.right.text);\n        const newEnterDurationValue = convertSpeedFactorToDuration(numericValue);\n\n        // Replace the `speedFactor` property name with `animation`.\n        this._replaceText(\n          filePath,\n          leftExpression.name.getStart(),\n          leftExpression.name.getWidth(),\n          'animation',\n        );\n\n        // Replace the value assignment with the new animation config.\n        this._replaceText(\n          filePath,\n          expression.right.getStart(),\n          expression.right.getWidth(),\n          `{enterDuration: ${newEnterDurationValue}}`,\n        );\n      } else {\n        // Handle the right expression differently if the previous speed factor value can't\n        // be resolved statically. In that case, we just create a TypeScript expression that\n        // calculates the explicit duration based on the non-static speed factor expression.\n        const newExpression = createSpeedFactorConvertExpression(expression.right.getText());\n\n        // Replace the `speedFactor` property name with `animation`.\n        this._replaceText(\n          filePath,\n          leftExpression.name.getStart(),\n          leftExpression.name.getWidth(),\n          'animation',\n        );\n\n        // Replace the value assignment with the new animation config and remove TODO.\n        this._replaceText(\n          filePath,\n          expression.right.getStart(),\n          expression.right.getWidth(),\n          `/** ${removeNote} */ {enterDuration: ${newExpression}}`,\n        );\n      }\n    }\n  }\n\n  /**\n   * Switches the global option `baseSpeedFactor` to the new animation config. For this\n   * we assume that the `baseSpeedFactor` is not used in combination with individual\n   * speed factors.\n   */\n  private _visitPropertyAssignment(assignment: ts.PropertyAssignment) {\n    // For switching the `baseSpeedFactor` global option we expect the property assignment\n    // to be inside of a normal object literal. Custom ripple global options cannot be\n    // witched automatically.\n    if (!ts.isObjectLiteralExpression(assignment.parent)) {\n      return;\n    }\n\n    // The assignment consists of a name (key) and initializer (value).\n    if (assignment.name.getText() !== 'baseSpeedFactor') {\n      return;\n    }\n\n    // We could technically lazily check for the MAT_RIPPLE_GLOBAL_OPTIONS injection token to\n    // be present, but it's not right to assume that everyone sets the ripple global options\n    // immediately in the provider object (e.g. it can happen that someone just imports the\n    // config from a separate file).\n\n    const {initializer, name} = assignment;\n    const filePath = this.fileSystem.resolve(assignment.getSourceFile().fileName);\n\n    if (ts.isNumericLiteral(initializer)) {\n      const numericValue = parseFloat(initializer.text);\n      const newEnterDurationValue = convertSpeedFactorToDuration(numericValue);\n\n      // Replace the `baseSpeedFactor` property name with `animation`.\n      this._replaceText(filePath, name.getStart(), name.getWidth(), 'animation');\n      // Replace the value assignment initializer with the new animation config.\n      this._replaceText(\n        filePath,\n        initializer.getStart(),\n        initializer.getWidth(),\n        `{enterDuration: ${newEnterDurationValue}}`,\n      );\n    } else {\n      // Handle the right expression differently if the previous speed factor value can't\n      // be resolved statically. In that case, we just create a TypeScript expression that\n      // calculates the explicit duration based on the non-static speed factor expression.\n      const newExpression = createSpeedFactorConvertExpression(initializer.getText());\n\n      // Replace the `baseSpeedFactor` property name with `animation`.\n      this._replaceText(filePath, name.getStart(), name.getWidth(), 'animation');\n\n      // Replace the value assignment with the new animation config and remove TODO.\n      this._replaceText(\n        filePath,\n        initializer.getStart(),\n        initializer.getWidth(),\n        `/** ${removeNote} */ {enterDuration: ${newExpression}}`,\n      );\n    }\n  }\n\n  private _replaceText(filePath: WorkspacePath, start: number, width: number, newText: string) {\n    const recorder = this.fileSystem.edit(filePath);\n    recorder.remove(start, width);\n    recorder.insertRight(start, newText);\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getExportDeclaration, getImportDeclaration} from '@angular/cdk/schematics';\nimport * as ts from 'typescript';\n\n/** Name of the Angular Material module specifier. */\nexport const materialModuleSpecifier = '@angular/material';\n\n/** Name of the Angular CDK module specifier. */\nexport const cdkModuleSpecifier = '@angular/cdk';\n\n/** Whether the specified node is part of an Angular Material or CDK import declaration. */\nexport function isMaterialImportDeclaration(node: ts.Node) {\n  return isMaterialDeclaration(getImportDeclaration(node));\n}\n\n/** Whether the specified node is part of an Angular Material or CDK import declaration. */\nexport function isMaterialExportDeclaration(node: ts.Node) {\n  return isMaterialDeclaration(getExportDeclaration(node));\n}\n\n/** Whether the declaration is part of Angular Material. */\nfunction isMaterialDeclaration(declaration: ts.ImportDeclaration | ts.ExportDeclaration) {\n  if (!declaration.moduleSpecifier) {\n    return false;\n  }\n\n  const moduleSpecifier = declaration.moduleSpecifier.getText();\n  return (\n    moduleSpecifier.indexOf(materialModuleSpecifier) !== -1 ||\n    moduleSpecifier.indexOf(cdkModuleSpecifier) !== -1\n  );\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Mapping of Material symbol names to their module names. Used as a fallback if\n * we didn't manage to resolve the module name of a symbol using the type checker.\n */\nexport const materialSymbolMap: Record<string, string> = {\n  'AUTOCOMPLETE_OPTION_HEIGHT': 'autocomplete',\n  'AUTOCOMPLETE_PANEL_HEIGHT': 'autocomplete',\n  'getMatAutocompleteMissingPanelError': 'autocomplete',\n  'MAT_AUTOCOMPLETE_DEFAULT_OPTIONS': 'autocomplete',\n  'MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY': 'autocomplete',\n  'MAT_AUTOCOMPLETE_SCROLL_STRATEGY': 'autocomplete',\n  'MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY': 'autocomplete',\n  'MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER': 'autocomplete',\n  'MAT_AUTOCOMPLETE_VALUE_ACCESSOR': 'autocomplete',\n  'MatAutocomplete': 'autocomplete',\n  'MatAutocompleteDefaultOptions': 'autocomplete',\n  'MatAutocompleteModule': 'autocomplete',\n  'MatAutocompleteOrigin': 'autocomplete',\n  'MatAutocompleteSelectedEvent': 'autocomplete',\n  'MatAutocompleteTrigger': 'autocomplete',\n  'MatBadge': 'badge',\n  'MatBadgeModule': 'badge',\n  'MatBadgePosition': 'badge',\n  'MatBadgeSize': 'badge',\n  'MAT_BOTTOM_SHEET_DATA': 'bottom-sheet',\n  'MAT_BOTTOM_SHEET_DEFAULT_OPTIONS': 'bottom-sheet',\n  'MatBottomSheet': 'bottom-sheet',\n  'matBottomSheetAnimations': 'bottom-sheet',\n  'MatBottomSheetConfig': 'bottom-sheet',\n  'MatBottomSheetContainer': 'bottom-sheet',\n  'MatBottomSheetModule': 'bottom-sheet',\n  'MatBottomSheetRef': 'bottom-sheet',\n  'MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS': 'button-toggle',\n  'MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR': 'button-toggle',\n  'MatButtonToggle': 'button-toggle',\n  'MatButtonToggleAppearance': 'button-toggle',\n  'MatButtonToggleChange': 'button-toggle',\n  'MatButtonToggleDefaultOptions': 'button-toggle',\n  'MatButtonToggleGroup': 'button-toggle',\n  'MatButtonToggleGroupMultiple': 'button-toggle',\n  'MatButtonToggleModule': 'button-toggle',\n  'ToggleType': 'button-toggle',\n  'MatAnchor': 'button',\n  'MatButton': 'button',\n  'MatButtonModule': 'button',\n  'MatCard': 'card',\n  'MatCardActions': 'card',\n  'MatCardAvatar': 'card',\n  'MatCardContent': 'card',\n  'MatCardFooter': 'card',\n  'MatCardHeader': 'card',\n  'MatCardImage': 'card',\n  'MatCardLgImage': 'card',\n  'MatCardMdImage': 'card',\n  'MatCardModule': 'card',\n  'MatCardSmImage': 'card',\n  'MatCardSubtitle': 'card',\n  'MatCardTitle': 'card',\n  'MatCardTitleGroup': 'card',\n  'MatCardXlImage': 'card',\n  '_MatCheckboxRequiredValidatorModule': 'checkbox',\n  'MAT_CHECKBOX_CLICK_ACTION': 'checkbox',\n  'MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR': 'checkbox',\n  'MAT_CHECKBOX_REQUIRED_VALIDATOR': 'checkbox',\n  'MatCheckbox': 'checkbox',\n  'MatCheckboxChange': 'checkbox',\n  'MatCheckboxClickAction': 'checkbox',\n  'MatCheckboxModule': 'checkbox',\n  'MatCheckboxRequiredValidator': 'checkbox',\n  'TransitionCheckState': 'checkbox',\n  'MAT_CHIPS_DEFAULT_OPTIONS': 'chips',\n  'MatChip': 'chips',\n  'MatChipAvatar': 'chips',\n  'MatChipEvent': 'chips',\n  'MatChipInput': 'chips',\n  'MatChipInputEvent': 'chips',\n  'MatChipList': 'chips',\n  'MatChipListChange': 'chips',\n  'MatChipRemove': 'chips',\n  'MatChipsDefaultOptions': 'chips',\n  'MatChipSelectionChange': 'chips',\n  'MatChipsModule': 'chips',\n  'MatChipTrailingIcon': 'chips',\n  '_countGroupLabelsBeforeOption': 'core',\n  '_getOptionScrollPosition': 'core',\n  'AnimationCurves': 'core',\n  'AnimationDurations': 'core',\n  'JAN': 'core',\n  'FEB': 'core',\n  'MAR': 'core',\n  'APR': 'core',\n  'MAY': 'core',\n  'JUN': 'core',\n  'JUL': 'core',\n  'AUG': 'core',\n  'SEP': 'core',\n  'OCT': 'core',\n  'NOV': 'core',\n  'DEC': 'core',\n  'CanColor': 'core',\n  'CanColorCtor': 'core',\n  'CanDisable': 'core',\n  'CanDisableCtor': 'core',\n  'CanDisableRipple': 'core',\n  'CanDisableRippleCtor': 'core',\n  'CanUpdateErrorState': 'core',\n  'CanUpdateErrorStateCtor': 'core',\n  'DateAdapter': 'core',\n  'defaultRippleAnimationConfig': 'core',\n  'ErrorStateMatcher': 'core',\n  'FloatLabelType': 'core',\n  'GestureConfig': 'core',\n  'HammerInput': 'core',\n  'HammerInstance': 'core',\n  'HammerManager': 'core',\n  'HammerOptions': 'core',\n  'HammerStatic': 'core',\n  'HasInitialized': 'core',\n  'HasInitializedCtor': 'core',\n  'HasTabIndex': 'core',\n  'HasTabIndexCtor': 'core',\n  'LabelOptions': 'core',\n  'MAT_DATE_FORMATS': 'core',\n  'MAT_DATE_LOCALE': 'core',\n  'MAT_DATE_LOCALE_FACTORY': 'core',\n  'MAT_DATE_LOCALE_PROVIDER': 'core',\n  'MAT_HAMMER_OPTIONS': 'core',\n  'MAT_LABEL_GLOBAL_OPTIONS': 'core',\n  'MAT_NATIVE_DATE_FORMATS': 'core',\n  'MAT_OPTION_PARENT_COMPONENT': 'core',\n  'MAT_RIPPLE_GLOBAL_OPTIONS': 'core',\n  'MatCommonModule': 'core',\n  'MatDateFormats': 'core',\n  'MATERIAL_SANITY_CHECKS': 'core',\n  'MatLine': 'core',\n  'MatLineModule': 'core',\n  'MatLineSetter': 'core',\n  'MatNativeDateModule': 'core',\n  'MatOptgroup': 'core',\n  'MatOption': 'core',\n  'MatOptionModule': 'core',\n  'MatOptionParentComponent': 'core',\n  'MatOptionSelectionChange': 'core',\n  'MatPseudoCheckbox': 'core',\n  'MatPseudoCheckboxModule': 'core',\n  'MatPseudoCheckboxState': 'core',\n  'MatRipple': 'core',\n  'MatRippleModule': 'core',\n  'mixinColor': 'core',\n  'mixinDisabled': 'core',\n  'mixinDisableRipple': 'core',\n  'mixinErrorState': 'core',\n  'mixinInitialized': 'core',\n  'mixinTabIndex': 'core',\n  'NativeDateAdapter': 'core',\n  'NativeDateModule': 'core',\n  'Recognizer': 'core',\n  'RecognizerStatic': 'core',\n  'RippleAnimationConfig': 'core',\n  'RippleConfig': 'core',\n  'RippleGlobalOptions': 'core',\n  'RippleRef': 'core',\n  'RippleRenderer': 'core',\n  'RippleState': 'core',\n  'RippleTarget': 'core',\n  'setLines': 'core',\n  'ShowOnDirtyErrorStateMatcher': 'core',\n  'ThemePalette': 'core',\n  'VERSION': 'core',\n  'MAT_DATEPICKER_SCROLL_STRATEGY': 'datepicker',\n  'MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY': 'datepicker',\n  'MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER': 'datepicker',\n  'MAT_DATEPICKER_VALIDATORS': 'datepicker',\n  'MAT_DATEPICKER_VALUE_ACCESSOR': 'datepicker',\n  'MatCalendar': 'datepicker',\n  'MatCalendarBody': 'datepicker',\n  'MatCalendarCell': 'datepicker',\n  'MatCalendarCellCssClasses': 'datepicker',\n  'MatCalendarHeader': 'datepicker',\n  'MatCalendarView': 'datepicker',\n  'MatDatepicker': 'datepicker',\n  'matDatepickerAnimations': 'datepicker',\n  'MatDatepickerContent': 'datepicker',\n  'MatDatepickerInput': 'datepicker',\n  'MatDatepickerInputEvent': 'datepicker',\n  'MatDatepickerIntl': 'datepicker',\n  'MatDatepickerModule': 'datepicker',\n  'MatDatepickerToggle': 'datepicker',\n  'MatDatepickerToggleIcon': 'datepicker',\n  'MatMonthView': 'datepicker',\n  'MatMultiYearView': 'datepicker',\n  'MatYearView': 'datepicker',\n  'yearsPerPage': 'datepicker',\n  'yearsPerRow': 'datepicker',\n  'DialogPosition': 'dialog',\n  'DialogRole': 'dialog',\n  'MAT_DIALOG_DATA': 'dialog',\n  'MAT_DIALOG_DEFAULT_OPTIONS': 'dialog',\n  'MAT_DIALOG_SCROLL_STRATEGY': 'dialog',\n  'MAT_DIALOG_SCROLL_STRATEGY_FACTORY': 'dialog',\n  'MAT_DIALOG_SCROLL_STRATEGY_PROVIDER': 'dialog',\n  'MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY': 'dialog',\n  'MatDialog': 'dialog',\n  'MatDialogActions': 'dialog',\n  'matDialogAnimations': 'dialog',\n  'MatDialogClose': 'dialog',\n  'MatDialogConfig': 'dialog',\n  'MatDialogContainer': 'dialog',\n  'MatDialogContent': 'dialog',\n  'MatDialogModule': 'dialog',\n  'MatDialogRef': 'dialog',\n  'MatDialogState': 'dialog',\n  'MatDialogTitle': 'dialog',\n  'throwMatDialogContentAlreadyAttachedError': 'dialog',\n  'MatDivider': 'divider',\n  'MatDividerModule': 'divider',\n  'EXPANSION_PANEL_ANIMATION_TIMING': 'expansion',\n  'MAT_ACCORDION': 'expansion',\n  'MAT_EXPANSION_PANEL_DEFAULT_OPTIONS': 'expansion',\n  'MatAccordion': 'expansion',\n  'MatAccordionBase': 'expansion',\n  'MatAccordionDisplayMode': 'expansion',\n  'MatAccordionTogglePosition': 'expansion',\n  'matExpansionAnimations': 'expansion',\n  'MatExpansionModule': 'expansion',\n  'MatExpansionPanel': 'expansion',\n  'MatExpansionPanelActionRow': 'expansion',\n  'MatExpansionPanelContent': 'expansion',\n  'MatExpansionPanelDefaultOptions': 'expansion',\n  'MatExpansionPanelDescription': 'expansion',\n  'MatExpansionPanelHeader': 'expansion',\n  'MatExpansionPanelState': 'expansion',\n  'MatExpansionPanelTitle': 'expansion',\n  'getMatFormFieldDuplicatedHintError': 'form-field',\n  'getMatFormFieldMissingControlError': 'form-field',\n  'getMatFormFieldPlaceholderConflictError': 'form-field',\n  'MAT_FORM_FIELD_DEFAULT_OPTIONS': 'form-field',\n  'MatError': 'form-field',\n  'MatFormField': 'form-field',\n  'matFormFieldAnimations': 'form-field',\n  'MatFormFieldAppearance': 'form-field',\n  'MatFormFieldControl': 'form-field',\n  'MatFormFieldDefaultOptions': 'form-field',\n  'MatFormFieldModule': 'form-field',\n  'MatHint': 'form-field',\n  'MatLabel': 'form-field',\n  'MatPlaceholder': 'form-field',\n  'MatPrefix': 'form-field',\n  'MatSuffix': 'form-field',\n  'MatGridAvatarCssMatStyler': 'grid-list',\n  'MatGridList': 'grid-list',\n  'MatGridListModule': 'grid-list',\n  'MatGridTile': 'grid-list',\n  'MatGridTileFooterCssMatStyler': 'grid-list',\n  'MatGridTileHeaderCssMatStyler': 'grid-list',\n  'MatGridTileText': 'grid-list',\n  'getMatIconFailedToSanitizeLiteralError': 'icon',\n  'getMatIconFailedToSanitizeUrlError': 'icon',\n  'getMatIconNameNotFoundError': 'icon',\n  'getMatIconNoHttpProviderError': 'icon',\n  'ICON_REGISTRY_PROVIDER': 'icon',\n  'ICON_REGISTRY_PROVIDER_FACTORY': 'icon',\n  'IconOptions': 'icon',\n  'MAT_ICON_LOCATION': 'icon',\n  'MAT_ICON_LOCATION_FACTORY': 'icon',\n  'MatIcon': 'icon',\n  'MatIconLocation': 'icon',\n  'MatIconModule': 'icon',\n  'MatIconRegistry': 'icon',\n  'getMatInputUnsupportedTypeError': 'input',\n  'MAT_INPUT_VALUE_ACCESSOR': 'input',\n  'MatInput': 'input',\n  'MatInputModule': 'input',\n  'MatTextareaAutosize': 'input',\n  'MAT_SELECTION_LIST_VALUE_ACCESSOR': 'list',\n  'MatList': 'list',\n  'MatListAvatarCssMatStyler': 'list',\n  'MatListIconCssMatStyler': 'list',\n  'MatListItem': 'list',\n  'MatListModule': 'list',\n  'MatListOption': 'list',\n  'MatListSubheaderCssMatStyler': 'list',\n  'MatNavList': 'list',\n  'MatSelectionList': 'list',\n  'MatSelectionListChange': 'list',\n  '_MatMenu': 'menu',\n  '_MatMenuBase': 'menu',\n  '_MatMenuDirectivesModule': 'menu',\n  'fadeInItems': 'menu',\n  'MAT_MENU_DEFAULT_OPTIONS': 'menu',\n  'MAT_MENU_PANEL': 'menu',\n  'MAT_MENU_SCROLL_STRATEGY': 'menu',\n  'MatMenu': 'menu',\n  'matMenuAnimations': 'menu',\n  'MatMenuContent': 'menu',\n  'MatMenuDefaultOptions': 'menu',\n  'MatMenuItem': 'menu',\n  'MatMenuModule': 'menu',\n  'MatMenuPanel': 'menu',\n  'MatMenuTrigger': 'menu',\n  'MenuPositionX': 'menu',\n  'MenuPositionY': 'menu',\n  'transformMenu': 'menu',\n  'MAT_PAGINATOR_INTL_PROVIDER': 'paginator',\n  'MAT_PAGINATOR_INTL_PROVIDER_FACTORY': 'paginator',\n  'MatPaginator': 'paginator',\n  'MatPaginatorIntl': 'paginator',\n  'MatPaginatorModule': 'paginator',\n  'PageEvent': 'paginator',\n  'MAT_PROGRESS_BAR_LOCATION': 'progress-bar',\n  'MAT_PROGRESS_BAR_LOCATION_FACTORY': 'progress-bar',\n  'MatProgressBar': 'progress-bar',\n  'MatProgressBarLocation': 'progress-bar',\n  'MatProgressBarModule': 'progress-bar',\n  'ProgressAnimationEnd': 'progress-bar',\n  'MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS': 'progress-spinner',\n  'MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY': 'progress-spinner',\n  'MatProgressSpinner': 'progress-spinner',\n  'MatProgressSpinnerDefaultOptions': 'progress-spinner',\n  'MatProgressSpinnerModule': 'progress-spinner',\n  'MatSpinner': 'progress-spinner',\n  'ProgressSpinnerMode': 'progress-spinner',\n  'MAT_RADIO_DEFAULT_OPTIONS': 'radio',\n  'MAT_RADIO_DEFAULT_OPTIONS_FACTORY': 'radio',\n  'MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR': 'radio',\n  'MatRadioButton': 'radio',\n  'MatRadioChange': 'radio',\n  'MatRadioDefaultOptions': 'radio',\n  'MatRadioGroup': 'radio',\n  'MatRadioModule': 'radio',\n  'fadeInContent': 'select',\n  'MAT_SELECT_SCROLL_STRATEGY': 'select',\n  'MAT_SELECT_SCROLL_STRATEGY_PROVIDER': 'select',\n  'MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY': 'select',\n  'MatSelect': 'select',\n  'matSelectAnimations': 'select',\n  'MatSelectChange': 'select',\n  'MatSelectModule': 'select',\n  'MatSelectTrigger': 'select',\n  'SELECT_ITEM_HEIGHT_EM': 'select',\n  'SELECT_MULTIPLE_PANEL_PADDING_X': 'select',\n  'SELECT_PANEL_INDENT_PADDING_X': 'select',\n  'SELECT_PANEL_MAX_HEIGHT': 'select',\n  'SELECT_PANEL_PADDING_X': 'select',\n  'SELECT_PANEL_VIEWPORT_PADDING': 'select',\n  'transformPanel': 'select',\n  'MAT_DRAWER_DEFAULT_AUTOSIZE': 'sidenav',\n  'MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY': 'sidenav',\n  'MatDrawer': 'sidenav',\n  'matDrawerAnimations': 'sidenav',\n  'MatDrawerContainer': 'sidenav',\n  'MatDrawerContent': 'sidenav',\n  'MatDrawerToggleResult': 'sidenav',\n  'MatSidenav': 'sidenav',\n  'MatSidenavContainer': 'sidenav',\n  'MatSidenavContent': 'sidenav',\n  'MatSidenavModule': 'sidenav',\n  'throwMatDuplicatedDrawerError': 'sidenav',\n  '_MatSlideToggleRequiredValidatorModule': 'slide-toggle',\n  'MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS': 'slide-toggle',\n  'MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR': 'slide-toggle',\n  'MAT_SLIDE_TOGGLE_VALUE_ACCESSOR': 'slide-toggle',\n  'MatSlideToggle': 'slide-toggle',\n  'MatSlideToggleChange': 'slide-toggle',\n  'MatSlideToggleDefaultOptions': 'slide-toggle',\n  'MatSlideToggleModule': 'slide-toggle',\n  'MatSlideToggleRequiredValidator': 'slide-toggle',\n  'MAT_SLIDER_VALUE_ACCESSOR': 'slider',\n  'MatSlider': 'slider',\n  'MatSliderChange': 'slider',\n  'MatSliderModule': 'slider',\n  'MAT_SNACK_BAR_DATA': 'snack-bar',\n  'MAT_SNACK_BAR_DEFAULT_OPTIONS': 'snack-bar',\n  'MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY': 'snack-bar',\n  'MatSnackBar': 'snack-bar',\n  'matSnackBarAnimations': 'snack-bar',\n  'MatSnackBarConfig': 'snack-bar',\n  'MatSnackBarContainer': 'snack-bar',\n  'MatSnackBarDismiss': 'snack-bar',\n  'MatSnackBarHorizontalPosition': 'snack-bar',\n  'MatSnackBarModule': 'snack-bar',\n  'MatSnackBarRef': 'snack-bar',\n  'MatSnackBarVerticalPosition': 'snack-bar',\n  'SimpleSnackBar': 'snack-bar',\n  'ArrowViewState': 'sort',\n  'ArrowViewStateTransition': 'sort',\n  'MAT_SORT_HEADER_INTL_PROVIDER': 'sort',\n  'MAT_SORT_HEADER_INTL_PROVIDER_FACTORY': 'sort',\n  'MatSort': 'sort',\n  'MatSortable': 'sort',\n  'matSortAnimations': 'sort',\n  'MatSortHeader': 'sort',\n  'MatSortHeaderIntl': 'sort',\n  'MatSortModule': 'sort',\n  'Sort': 'sort',\n  'SortDirection': 'sort',\n  'MAT_STEPPER_INTL_PROVIDER': 'stepper',\n  'MAT_STEPPER_INTL_PROVIDER_FACTORY': 'stepper',\n  'MatHorizontalStepper': 'stepper',\n  'MatStep': 'stepper',\n  'MatStepHeader': 'stepper',\n  'MatStepLabel': 'stepper',\n  'MatStepper': 'stepper',\n  'matStepperAnimations': 'stepper',\n  'MatStepperIcon': 'stepper',\n  'MatStepperIconContext': 'stepper',\n  'MatStepperIntl': 'stepper',\n  'MatStepperModule': 'stepper',\n  'MatStepperNext': 'stepper',\n  'MatStepperPrevious': 'stepper',\n  'MatVerticalStepper': 'stepper',\n  'MatCell': 'table',\n  'MatCellDef': 'table',\n  'MatColumnDef': 'table',\n  'MatFooterCell': 'table',\n  'MatFooterCellDef': 'table',\n  'MatFooterRow': 'table',\n  'MatFooterRowDef': 'table',\n  'MatHeaderCell': 'table',\n  'MatHeaderCellDef': 'table',\n  'MatHeaderRow': 'table',\n  'MatHeaderRowDef': 'table',\n  'MatRow': 'table',\n  'MatRowDef': 'table',\n  'MatTable': 'table',\n  'MatTableDataSource': 'table',\n  'MatTableModule': 'table',\n  'MatTextColumn': 'table',\n  '_MAT_INK_BAR_POSITIONER': 'tabs',\n  '_MatInkBarPositioner': 'tabs',\n  '_MatTabBodyBase': 'tabs',\n  '_MatTabGroupBase': 'tabs',\n  '_MatTabHeaderBase': 'tabs',\n  '_MatTabLinkBase': 'tabs',\n  '_MatTabNavBase': 'tabs',\n  'MAT_TABS_CONFIG': 'tabs',\n  'MatInkBar': 'tabs',\n  'MatTab': 'tabs',\n  'MatTabBody': 'tabs',\n  'MatTabBodyOriginState': 'tabs',\n  'MatTabBodyPortal': 'tabs',\n  'MatTabBodyPositionState': 'tabs',\n  'MatTabChangeEvent': 'tabs',\n  'MatTabContent': 'tabs',\n  'MatTabGroup': 'tabs',\n  'MatTabHeader': 'tabs',\n  'MatTabHeaderPosition': 'tabs',\n  'MatTabLabel': 'tabs',\n  'MatTabLabelWrapper': 'tabs',\n  'MatTabLink': 'tabs',\n  'MatTabNav': 'tabs',\n  'matTabsAnimations': 'tabs',\n  'MatTabsConfig': 'tabs',\n  'MatTabsModule': 'tabs',\n  'ScrollDirection': 'tabs',\n  'MatToolbar': 'toolbar',\n  'MatToolbarModule': 'toolbar',\n  'MatToolbarRow': 'toolbar',\n  'throwToolbarMixedModesError': 'toolbar',\n  'getMatTooltipInvalidPositionError': 'tooltip',\n  'MAT_TOOLTIP_DEFAULT_OPTIONS': 'tooltip',\n  'MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY': 'tooltip',\n  'MAT_TOOLTIP_SCROLL_STRATEGY': 'tooltip',\n  'MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY': 'tooltip',\n  'MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER': 'tooltip',\n  'MatTooltip': 'tooltip',\n  'matTooltipAnimations': 'tooltip',\n  'MatTooltipDefaultOptions': 'tooltip',\n  'MatTooltipModule': 'tooltip',\n  'SCROLL_THROTTLE_MS': 'tooltip',\n  'TOOLTIP_PANEL_CLASS': 'tooltip',\n  'TooltipComponent': 'tooltip',\n  'TooltipPosition': 'tooltip',\n  'TooltipVisibility': 'tooltip',\n  'MatNestedTreeNode': 'tree',\n  'MatTree': 'tree',\n  'MatTreeFlatDataSource': 'tree',\n  'MatTreeFlattener': 'tree',\n  'MatTreeModule': 'tree',\n  'MatTreeNestedDataSource': 'tree',\n  'MatTreeNode': 'tree',\n  'MatTreeNodeDef': 'tree',\n  'MatTreeNodeOutlet': 'tree',\n  'MatTreeNodePadding': 'tree',\n  'MatTreeNodeToggle': 'tree',\n};\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Migration, TargetVersion} from '@angular/cdk/schematics';\nimport * as ts from 'typescript';\nimport {materialModuleSpecifier} from '../../../ng-update/typescript/module-specifiers';\nimport {materialSymbolMap} from './material-symbols';\n\nconst ONLY_SUBPACKAGE_FAILURE_STR =\n  `Importing from \"@angular/material\" is deprecated. ` +\n  `Instead import from the entry-point the symbol belongs to.`;\n\nconst NO_IMPORT_NAMED_SYMBOLS_FAILURE_STR =\n  `Imports from Angular Material should import ` +\n  `specific symbols rather than importing the entire library.`;\n\n/**\n * Regex for testing file paths against to determine if the file is from the\n * Angular Material library.\n */\nconst ANGULAR_MATERIAL_FILEPATH_REGEX = new RegExp(`${materialModuleSpecifier}/(.*?)/`);\n\n/**\n * Migration that updates imports which refer to the primary Angular Material\n * entry-point to use the appropriate secondary entry points (e.g. @angular/material/button).\n */\nexport class SecondaryEntryPointsMigration extends Migration<null> {\n  printer = ts.createPrinter();\n\n  // Only enable this rule if the migration targets version 8. The primary\n  // entry-point of Material has been marked as deprecated in version 8.\n  enabled = this.targetVersion === TargetVersion.V8 || this.targetVersion === TargetVersion.V9;\n\n  override visitNode(declaration: ts.Node): void {\n    // Only look at import declarations.\n    if (\n      !ts.isImportDeclaration(declaration) ||\n      !ts.isStringLiteralLike(declaration.moduleSpecifier)\n    ) {\n      return;\n    }\n\n    const importLocation = declaration.moduleSpecifier.text;\n    // If the import module is not @angular/material, skip the check.\n    if (importLocation !== materialModuleSpecifier) {\n      return;\n    }\n\n    // If no import clause is found, or nothing is named as a binding in the\n    // import, add failure saying to import symbols in clause.\n    if (!declaration.importClause || !declaration.importClause.namedBindings) {\n      this.createFailureAtNode(declaration, NO_IMPORT_NAMED_SYMBOLS_FAILURE_STR);\n      return;\n    }\n\n    // All named bindings in import clauses must be named symbols, otherwise add\n    // failure saying to import symbols in clause.\n    if (!ts.isNamedImports(declaration.importClause.namedBindings)) {\n      this.createFailureAtNode(declaration, NO_IMPORT_NAMED_SYMBOLS_FAILURE_STR);\n      return;\n    }\n\n    // If no symbols are in the named bindings then add failure saying to\n    // import symbols in clause.\n    if (!declaration.importClause.namedBindings.elements.length) {\n      this.createFailureAtNode(declaration, NO_IMPORT_NAMED_SYMBOLS_FAILURE_STR);\n      return;\n    }\n\n    // Whether the existing import declaration is using a single quote module specifier.\n    const singleQuoteImport = declaration.moduleSpecifier.getText()[0] === `'`;\n\n    // Map which consists of secondary entry-points and import specifiers which are used\n    // within the current import declaration.\n    const importMap = new Map<string, ts.ImportSpecifier[]>();\n\n    // Determine the subpackage each symbol in the namedBinding comes from.\n    for (const element of declaration.importClause.namedBindings.elements) {\n      const elementName = element.propertyName ? element.propertyName : element.name;\n\n      // Try to resolve the module name via the type checker, and if it fails, fall back to\n      // resolving it from our list of symbol to entry point mappings. Using the type checker is\n      // more accurate and doesn't require us to keep a list of symbols, but it won't work if\n      // the symbols don't exist anymore (e.g. after we remove the top-level @angular/material).\n      const moduleName =\n        resolveModuleName(elementName, this.typeChecker) ||\n        materialSymbolMap[elementName.text] ||\n        null;\n\n      if (!moduleName) {\n        this.createFailureAtNode(\n          element,\n          `\"${element.getText()}\" was not found in the Material library.`,\n        );\n        return;\n      }\n\n      // The module name where the symbol is defined e.g. card, dialog. The\n      // first capture group is contains the module name.\n      if (importMap.has(moduleName)) {\n        importMap.get(moduleName)!.push(element);\n      } else {\n        importMap.set(moduleName, [element]);\n      }\n    }\n\n    // Transforms the import declaration into multiple import declarations that import\n    // the given symbols from the individual secondary entry-points. For example:\n    // import {MatCardModule, MatCardTitle} from '@angular/material/legacy-card';\n    // import {MatRadioModule} from '@angular/material/radio';\n    const newImportStatements = Array.from(importMap.entries())\n      .sort()\n      .map(([name, elements]) => {\n        const newImport = ts.factory.createImportDeclaration(\n          undefined,\n          undefined,\n          ts.factory.createImportClause(false, undefined, ts.factory.createNamedImports(elements)),\n          ts.factory.createStringLiteral(`${materialModuleSpecifier}/${name}`, singleQuoteImport),\n        );\n        return this.printer.printNode(\n          ts.EmitHint.Unspecified,\n          newImport,\n          declaration.getSourceFile(),\n        );\n      })\n      .join('\\n');\n\n    // Without any import statements that were generated, we can assume that this was an empty\n    // import declaration. We still want to add a failure in order to make developers aware that\n    // importing from \"@angular/material\" is deprecated.\n    if (!newImportStatements) {\n      this.createFailureAtNode(declaration.moduleSpecifier, ONLY_SUBPACKAGE_FAILURE_STR);\n      return;\n    }\n\n    const filePath = this.fileSystem.resolve(declaration.moduleSpecifier.getSourceFile().fileName);\n    const recorder = this.fileSystem.edit(filePath);\n\n    // Perform the replacement that switches the primary entry-point import to\n    // the individual secondary entry-point imports.\n    recorder.remove(declaration.getStart(), declaration.getWidth());\n    recorder.insertRight(declaration.getStart(), newImportStatements);\n  }\n}\n\n/** Gets the symbol that contains the value declaration of the given node. */\nfunction getDeclarationSymbolOfNode(node: ts.Node, checker: ts.TypeChecker): ts.Symbol | undefined {\n  const symbol = checker.getSymbolAtLocation(node);\n\n  // Symbols can be aliases of the declaration symbol. e.g. in named import specifiers.\n  // We need to resolve the aliased symbol back to the declaration symbol.\n  // tslint:disable-next-line:no-bitwise\n  if (symbol && (symbol.flags & ts.SymbolFlags.Alias) !== 0) {\n    return checker.getAliasedSymbol(symbol);\n  }\n  return symbol;\n}\n\n/** Tries to resolve the name of the Material module that a node is imported from. */\nfunction resolveModuleName(node: ts.Identifier, typeChecker: ts.TypeChecker): string | null {\n  // Get the symbol for the named binding element. Note that we cannot determine the\n  // value declaration based on the type of the element as types are not necessarily\n  // specific to a given secondary entry-point (e.g. exports with the type of \"string\")\n  // would resolve to the module types provided by TypeScript itself.\n  const symbol = getDeclarationSymbolOfNode(node, typeChecker);\n\n  // If the symbol can't be found, or no declaration could be found within\n  // the symbol, add failure to report that the given symbol can't be found.\n  if (\n    !symbol ||\n    !(symbol.valueDeclaration || (symbol.declarations && symbol.declarations.length !== 0))\n  ) {\n    return null;\n  }\n\n  // The filename for the source file of the node that contains the\n  // first declaration of the symbol. All symbol declarations must be\n  // part of a defining node, so parent can be asserted to be defined.\n  const resolvedNode = symbol.valueDeclaration || symbol.declarations?.[0];\n\n  if (resolvedNode === undefined) {\n    return null;\n  }\n\n  const sourceFile = resolvedNode.getSourceFile().fileName;\n\n  // File the module the symbol belongs to from a regex match of the\n  // filename. This will always match since only \"@angular/material\"\n  // elements are analyzed.\n  const matches = sourceFile.match(ANGULAR_MATERIAL_FILEPATH_REGEX);\n  return matches ? matches[1] : null;\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Mapping of Material mixins that should be renamed. */\nexport const materialMixins: Record<string, string> = {\n  'mat-core': 'core',\n  'mat-core-color': 'core-color',\n  'mat-core-theme': 'core-theme',\n  'angular-material-theme': 'all-component-themes',\n  'angular-material-typography': 'all-component-typographies',\n  'angular-material-color': 'all-component-colors',\n  'mat-base-typography': 'typography-hierarchy',\n  'mat-typography-level-to-styles': 'typography-level',\n  'mat-elevation': 'elevation',\n  'mat-overridable-elevation': 'overridable-elevation',\n  'mat-elevation-transition': 'elevation-transition',\n  'mat-ripple': 'ripple',\n  'mat-ripple-color': 'ripple-color',\n  'mat-ripple-theme': 'ripple-theme',\n  'mat-strong-focus-indicators': 'strong-focus-indicators',\n  'mat-strong-focus-indicators-color': 'strong-focus-indicators-color',\n  'mat-strong-focus-indicators-theme': 'strong-focus-indicators-theme',\n  'mat-font-shorthand': 'font-shorthand',\n  // The expansion panel is a special case, because the package is called `expansion`, but the\n  // mixins were prefixed with `expansion-panel`. This was corrected by the Sass module migration.\n  'mat-expansion-panel-theme': 'expansion-theme',\n  'mat-expansion-panel-color': 'expansion-color',\n  'mat-expansion-panel-typography': 'expansion-typography',\n};\n\n// The component themes all follow the same pattern so we can spare ourselves some typing.\n[\n  'option',\n  'optgroup',\n  'pseudo-checkbox',\n  'autocomplete',\n  'badge',\n  'bottom-sheet',\n  'button',\n  'button-toggle',\n  'card',\n  'checkbox',\n  'chips',\n  'divider',\n  'table',\n  'datepicker',\n  'dialog',\n  'grid-list',\n  'icon',\n  'input',\n  'list',\n  'menu',\n  'paginator',\n  'progress-bar',\n  'progress-spinner',\n  'radio',\n  'select',\n  'sidenav',\n  'slide-toggle',\n  'slider',\n  'stepper',\n  'sort',\n  'tabs',\n  'toolbar',\n  'tooltip',\n  'snack-bar',\n  'form-field',\n  'tree',\n].forEach(name => {\n  materialMixins[`mat-${name}-theme`] = `${name}-theme`;\n  materialMixins[`mat-${name}-color`] = `${name}-color`;\n  materialMixins[`mat-${name}-typography`] = `${name}-typography`;\n});\n\n/** Mapping of Material functions that should be renamed. */\nexport const materialFunctions: Record<string, string> = {\n  'mat-color': 'get-color-from-palette',\n  'mat-contrast': 'get-contrast-color-from-palette',\n  'mat-palette': 'define-palette',\n  'mat-dark-theme': 'define-dark-theme',\n  'mat-light-theme': 'define-light-theme',\n  'mat-typography-level': 'define-typography-level',\n  'mat-typography-config': 'define-typography-config',\n  'mat-font-size': 'font-size',\n  'mat-line-height': 'line-height',\n  'mat-font-weight': 'font-weight',\n  'mat-letter-spacing': 'letter-spacing',\n  'mat-font-family': 'font-family',\n};\n\n/** Mapping of Material variables that should be renamed. */\nexport const materialVariables: Record<string, string> = {\n  'mat-light-theme-background': 'light-theme-background-palette',\n  'mat-dark-theme-background': 'dark-theme-background-palette',\n  'mat-light-theme-foreground': 'light-theme-foreground-palette',\n  'mat-dark-theme-foreground': 'dark-theme-foreground-palette',\n};\n\n// The palettes all follow the same pattern.\n[\n  'red',\n  'pink',\n  'indigo',\n  'purple',\n  'deep-purple',\n  'blue',\n  'light-blue',\n  'cyan',\n  'teal',\n  'green',\n  'light-green',\n  'lime',\n  'yellow',\n  'amber',\n  'orange',\n  'deep-orange',\n  'brown',\n  'grey',\n  'gray',\n  'blue-grey',\n  'blue-gray',\n].forEach(name => (materialVariables[`mat-${name}`] = `${name}-palette`));\n\n/** Mapping of CDK variables that should be renamed. */\nexport const cdkVariables: Record<string, string> = {\n  'cdk-z-index-overlay-container': 'overlay-container-z-index',\n  'cdk-z-index-overlay': 'overlay-z-index',\n  'cdk-z-index-overlay-backdrop': 'overlay-backdrop-z-index',\n  'cdk-overlay-dark-backdrop-background': 'overlay-backdrop-color',\n};\n\n/** Mapping of CDK mixins that should be renamed. */\nexport const cdkMixins: Record<string, string> = {\n  'cdk-overlay': 'overlay',\n  'cdk-a11y': 'a11y-visually-hidden',\n  'cdk-high-contrast': 'high-contrast',\n  'cdk-text-field-autofill-color': 'text-field-autofill-color',\n  // This one was split up into two mixins which is trickier to\n  // migrate so for now we forward to the deprecated variant.\n  'cdk-text-field': 'text-field',\n};\n\n/**\n * Material variables that have been removed from the public API\n * and which should be replaced with their values.\n */\nexport const removedMaterialVariables: Record<string, string> = {\n  // Note: there's also a usage of a variable called `$pi`, but the name is short enough that\n  // it matches things like `$mat-pink`. Don't migrate it since it's unlikely to be used.\n  'mat-xsmall': 'max-width: 599px',\n  'mat-small': 'max-width: 959px',\n  'mat-toggle-padding': '8px',\n  'mat-toggle-size': '20px',\n  'mat-linear-out-slow-in-timing-function': 'cubic-bezier(0, 0, 0.2, 0.1)',\n  'mat-fast-out-slow-in-timing-function': 'cubic-bezier(0.4, 0, 0.2, 1)',\n  'mat-fast-out-linear-in-timing-function': 'cubic-bezier(0.4, 0, 1, 1)',\n  'mat-elevation-transition-duration': '280ms',\n  'mat-elevation-transition-timing-function': 'cubic-bezier(0.4, 0, 0.2, 1)',\n  'mat-elevation-color': '#000',\n  'mat-elevation-opacity': '1',\n  'mat-elevation-prefix': `'mat-elevation-z'`,\n  'mat-ripple-color-opacity': '0.1',\n  'mat-badge-font-size': '12px',\n  'mat-badge-font-weight': '600',\n  'mat-badge-default-size': '22px',\n  'mat-badge-small-size': '16px',\n  'mat-badge-large-size': '28px',\n  'mat-button-toggle-standard-height': '48px',\n  'mat-button-toggle-standard-minimum-height': '24px',\n  'mat-button-toggle-standard-maximum-height': '48px',\n  'mat-chip-remove-font-size': '18px',\n  'mat-datepicker-selected-today-box-shadow-width': '1px',\n  'mat-datepicker-selected-fade-amount': '0.6',\n  'mat-datepicker-range-fade-amount': '0.2',\n  'mat-datepicker-today-fade-amount': '0.2',\n  'mat-calendar-body-font-size': '13px',\n  'mat-calendar-weekday-table-font-size': '11px',\n  'mat-expansion-panel-header-collapsed-height': '48px',\n  'mat-expansion-panel-header-collapsed-minimum-height': '36px',\n  'mat-expansion-panel-header-collapsed-maximum-height': '48px',\n  'mat-expansion-panel-header-expanded-height': '64px',\n  'mat-expansion-panel-header-expanded-minimum-height': '48px',\n  'mat-expansion-panel-header-expanded-maximum-height': '64px',\n  'mat-expansion-panel-header-transition': '225ms cubic-bezier(0.4, 0, 0.2, 1)',\n  'mat-menu-side-padding': '16px',\n  'menu-menu-item-height': '48px',\n  'menu-menu-icon-margin': '16px',\n  'mat-paginator-height': '56px',\n  'mat-paginator-minimum-height': '40px',\n  'mat-paginator-maximum-height': '56px',\n  'mat-stepper-header-height': '72px',\n  'mat-stepper-header-minimum-height': '42px',\n  'mat-stepper-header-maximum-height': '72px',\n  'mat-stepper-label-header-height': '24px',\n  'mat-stepper-label-position-bottom-top-gap': '16px',\n  'mat-stepper-label-min-width': '50px',\n  'mat-vertical-stepper-content-margin': '36px',\n  'mat-stepper-side-gap': '24px',\n  'mat-stepper-line-width': '1px',\n  'mat-stepper-line-gap': '8px',\n  'mat-step-sub-label-font-size': '12px',\n  'mat-step-header-icon-size': '16px',\n  'mat-toolbar-minimum-height': '44px',\n  'mat-toolbar-height-desktop': '64px',\n  'mat-toolbar-maximum-height-desktop': '64px',\n  'mat-toolbar-minimum-height-desktop': '44px',\n  'mat-toolbar-height-mobile': '56px',\n  'mat-toolbar-maximum-height-mobile': '56px',\n  'mat-toolbar-minimum-height-mobile': '44px',\n  'mat-tooltip-target-height': '22px',\n  'mat-tooltip-font-size': '10px',\n  'mat-tooltip-vertical-padding': '6px',\n  'mat-tooltip-handset-target-height': '30px',\n  'mat-tooltip-handset-font-size': '14px',\n  'mat-tooltip-handset-vertical-padding': '8px',\n  'mat-tree-node-height': '48px',\n  'mat-tree-node-minimum-height': '24px',\n  'mat-tree-node-maximum-height': '48px',\n};\n\n/**\n * Material variables **without a `mat-` prefix** that have been removed from the public API\n * and which should be replaced with their values. These should be migrated only when there's a\n * Material import, because their names could conflict with other variables in the user's app.\n */\nexport const unprefixedRemovedVariables: Record<string, string> = {\n  'z-index-fab': '20',\n  'z-index-drawer': '100',\n  'ease-in-out-curve-function': 'cubic-bezier(0.35, 0, 0.25, 1)',\n  'swift-ease-out-duration': '400ms',\n  'swift-ease-out-timing-function': 'cubic-bezier(0.25, 0.8, 0.25, 1)',\n  'swift-ease-out': 'all 400ms cubic-bezier(0.25, 0.8, 0.25, 1)',\n  'swift-ease-in-duration': '300ms',\n  'swift-ease-in-timing-function': 'cubic-bezier(0.55, 0, 0.55, 0.2)',\n  'swift-ease-in': 'all 300ms cubic-bezier(0.55, 0, 0.55, 0.2)',\n  'swift-ease-in-out-duration': '500ms',\n  'swift-ease-in-out-timing-function': 'cubic-bezier(0.35, 0, 0.25, 1)',\n  'swift-ease-in-out': 'all 500ms cubic-bezier(0.35, 0, 0.25, 1)',\n  'swift-linear-duration': '80ms',\n  'swift-linear-timing-function': 'linear',\n  'swift-linear': 'all 80ms linear',\n  'black-87-opacity': 'rgba(black, 0.87)',\n  'white-87-opacity': 'rgba(white, 0.87)',\n  'black-12-opacity': 'rgba(black, 0.12)',\n  'white-12-opacity': 'rgba(white, 0.12)',\n  'black-6-opacity': 'rgba(black, 0.06)',\n  'white-6-opacity': 'rgba(white, 0.06)',\n  'dark-primary-text': 'rgba(black, 0.87)',\n  'dark-secondary-text': 'rgba(black, 0.54)',\n  'dark-disabled-text': 'rgba(black, 0.38)',\n  'dark-dividers': 'rgba(black, 0.12)',\n  'dark-focused': 'rgba(black, 0.12)',\n  'light-primary-text': 'white',\n  'light-secondary-text': 'rgba(white, 0.7)',\n  'light-disabled-text': 'rgba(white, 0.5)',\n  'light-dividers': 'rgba(white, 0.12)',\n  'light-focused': 'rgba(white, 0.12)',\n};\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  materialMixins,\n  materialFunctions,\n  materialVariables,\n  cdkMixins,\n  cdkVariables,\n  removedMaterialVariables,\n  unprefixedRemovedVariables,\n} from './config';\n\n/** The result of a search for imports and namespaces in a file. */\ninterface DetectImportResult {\n  imports: string[];\n  namespaces: string[];\n}\n\n/** Addition mixin and function names that can be updated when invoking migration directly. */\ninterface ExtraSymbols {\n  mixins?: Record<string, string>;\n  functions?: Record<string, string>;\n  variables?: Record<string, string>;\n}\n\n/** Possible pairs of comment characters in a Sass file. */\nconst commentPairs = new Map<string, string>([\n  ['/*', '*/'],\n  ['//', '\\n'],\n]);\n\n/** Prefix for the placeholder that will be used to escape comments. */\nconst commentPlaceholderStart = '__<<ngThemingMigrationEscapedComment';\n\n/** Suffix for the comment escape placeholder. */\nconst commentPlaceholderEnd = '>>__';\n\n/**\n * Migrates the content of a file to the new theming API. Note that this migration is using plain\n * string manipulation, rather than the AST from PostCSS and the schematics string manipulation\n * APIs, because it allows us to run it inside g3 and to avoid introducing new dependencies.\n * @param fileContent Content of the file.\n * @param oldMaterialPrefix Prefix with which the old Material imports should start.\n *   Has to end with a slash. E.g. if `@import '@angular/material/theming'` should be\n *   matched, the prefix would be `@angular/material/`.\n * @param oldCdkPrefix Prefix with which the old CDK imports should start.\n *   Has to end with a slash. E.g. if `@import '@angular/cdk/overlay'` should be\n *   matched, the prefix would be `@angular/cdk/`.\n * @param newMaterialImportPath New import to the Material theming API (e.g. `@angular/material`).\n * @param newCdkImportPath New import to the CDK Sass APIs (e.g. `@angular/cdk`).\n * @param excludedImports Pattern that can be used to exclude imports from being processed.\n */\nexport function migrateFileContent(\n  fileContent: string,\n  oldMaterialPrefix: string,\n  oldCdkPrefix: string,\n  newMaterialImportPath: string,\n  newCdkImportPath: string,\n  extraMaterialSymbols: ExtraSymbols = {},\n  excludedImports?: RegExp,\n): string {\n  let {content, placeholders} = escapeComments(fileContent);\n  const materialResults = detectImports(content, oldMaterialPrefix, excludedImports);\n  const cdkResults = detectImports(content, oldCdkPrefix, excludedImports);\n\n  // Try to migrate the symbols even if there are no imports. This is used\n  // to cover the case where the Components symbols were used transitively.\n  content = migrateCdkSymbols(content, newCdkImportPath, placeholders, cdkResults);\n  content = migrateMaterialSymbols(\n    content,\n    newMaterialImportPath,\n    materialResults,\n    placeholders,\n    extraMaterialSymbols,\n  );\n  content = replaceRemovedVariables(content, removedMaterialVariables);\n\n  // We can assume that the migration has taken care of any Components symbols that were\n  // imported transitively so we can always drop the old imports. We also assume that imports\n  // to the new entry points have been added already.\n  if (materialResults.imports.length) {\n    content = replaceRemovedVariables(content, unprefixedRemovedVariables);\n    content = removeStrings(content, materialResults.imports);\n  }\n\n  if (cdkResults.imports.length) {\n    content = removeStrings(content, cdkResults.imports);\n  }\n\n  return restoreComments(content, placeholders);\n}\n\n/**\n * Counts the number of imports with a specific prefix and extracts their namespaces.\n * @param content File content in which to look for imports.\n * @param prefix Prefix that the imports should start with.\n * @param excludedImports Pattern that can be used to exclude imports from being processed.\n */\nfunction detectImports(\n  content: string,\n  prefix: string,\n  excludedImports?: RegExp,\n): DetectImportResult {\n  if (prefix[prefix.length - 1] !== '/') {\n    // Some of the logic further down makes assumptions about the import depth.\n    throw Error(`Prefix \"${prefix}\" has to end in a slash.`);\n  }\n\n  // List of `@use` namespaces from which Angular CDK/Material APIs may be referenced.\n  // Since we know that the library doesn't have any name collisions, we can treat all of these\n  // namespaces as equivalent.\n  const namespaces: string[] = [];\n  const imports: string[] = [];\n  const pattern = new RegExp(`@(import|use) +['\"]~?${escapeRegExp(prefix)}.*['\"].*;?\\n`, 'g');\n  let match: RegExpExecArray | null = null;\n\n  while ((match = pattern.exec(content))) {\n    const [fullImport, type] = match;\n\n    if (excludedImports?.test(fullImport)) {\n      continue;\n    }\n\n    if (type === 'use') {\n      const namespace = extractNamespaceFromUseStatement(fullImport);\n\n      if (namespaces.indexOf(namespace) === -1) {\n        namespaces.push(namespace);\n      }\n    }\n\n    imports.push(fullImport);\n  }\n\n  return {imports, namespaces};\n}\n\n/** Migrates the Material symbols in a file. */\nfunction migrateMaterialSymbols(\n  content: string,\n  importPath: string,\n  detectedImports: DetectImportResult,\n  commentPlaceholders: Record<string, string>,\n  extraMaterialSymbols: ExtraSymbols = {},\n): string {\n  const initialContent = content;\n  const namespace = 'mat';\n\n  // Migrate the mixins.\n  const mixinsToUpdate = {...materialMixins, ...extraMaterialSymbols.mixins};\n  content = renameSymbols(\n    content,\n    mixinsToUpdate,\n    detectedImports.namespaces,\n    mixinKeyFormatter,\n    getMixinValueFormatter(namespace),\n  );\n\n  // Migrate the functions.\n  const functionsToUpdate = {...materialFunctions, ...extraMaterialSymbols.functions};\n  content = renameSymbols(\n    content,\n    functionsToUpdate,\n    detectedImports.namespaces,\n    functionKeyFormatter,\n    getFunctionValueFormatter(namespace),\n  );\n\n  // Migrate the variables.\n  const variablesToUpdate = {...materialVariables, ...extraMaterialSymbols.variables};\n  content = renameSymbols(\n    content,\n    variablesToUpdate,\n    detectedImports.namespaces,\n    variableKeyFormatter,\n    getVariableValueFormatter(namespace),\n  );\n\n  if (content !== initialContent) {\n    // Add an import to the new API only if any of the APIs were being used.\n    content = insertUseStatement(content, importPath, namespace, commentPlaceholders);\n  }\n\n  return content;\n}\n\n/** Migrates the CDK symbols in a file. */\nfunction migrateCdkSymbols(\n  content: string,\n  importPath: string,\n  commentPlaceholders: Record<string, string>,\n  detectedImports: DetectImportResult,\n): string {\n  const initialContent = content;\n  const namespace = 'cdk';\n\n  // Migrate the mixins.\n  content = renameSymbols(\n    content,\n    cdkMixins,\n    detectedImports.namespaces,\n    mixinKeyFormatter,\n    getMixinValueFormatter(namespace),\n  );\n\n  // Migrate the variables.\n  content = renameSymbols(\n    content,\n    cdkVariables,\n    detectedImports.namespaces,\n    variableKeyFormatter,\n    getVariableValueFormatter(namespace),\n  );\n\n  // Previously the CDK symbols were exposed through `material/theming`, but now we have a\n  // dedicated entrypoint for the CDK. Only add an import for it if any of the symbols are used.\n  if (content !== initialContent) {\n    content = insertUseStatement(content, importPath, namespace, commentPlaceholders);\n  }\n\n  return content;\n}\n\n/**\n * Renames all Sass symbols in a file based on a pre-defined mapping.\n * @param content Content of a file to be migrated.\n * @param mapping Mapping between symbol names and their replacements.\n * @param namespaces Names to iterate over and pass to getKeyPattern.\n * @param getKeyPattern Function used to turn each of the keys into a regex.\n * @param formatValue Formats the value that will replace any matches of the pattern returned by\n *  `getKeyPattern`.\n */\nfunction renameSymbols(\n  content: string,\n  mapping: Record<string, string>,\n  namespaces: string[],\n  getKeyPattern: (namespace: string | null, key: string) => RegExp,\n  formatValue: (key: string) => string,\n): string {\n  // The null at the end is so that we make one last pass to cover non-namespaced symbols.\n  [...namespaces.slice(), null].forEach(namespace => {\n    Object.keys(mapping).forEach(key => {\n      const pattern = getKeyPattern(namespace, key);\n\n      // Sanity check since non-global regexes will only replace the first match.\n      if (pattern.flags.indexOf('g') === -1) {\n        throw Error('Replacement pattern must be global.');\n      }\n\n      content = content.replace(pattern, formatValue(mapping[key]));\n    });\n  });\n\n  return content;\n}\n\n/** Inserts an `@use` statement in a string. */\nfunction insertUseStatement(\n  content: string,\n  importPath: string,\n  namespace: string,\n  commentPlaceholders: Record<string, string>,\n): string {\n  // If the content already has the `@use` import, we don't need to add anything.\n  if (new RegExp(`@use +['\"]${importPath}['\"]`, 'g').test(content)) {\n    return content;\n  }\n\n  // Sass will throw an error if an `@use` statement comes after another statement. The safest way\n  // to ensure that we conform to that requirement is by always inserting our imports at the top\n  // of the file. Detecting where the user's content starts is tricky, because there are many\n  // different kinds of syntax we'd have to account for. One approach is to find the first `@import`\n  // and insert before it, but the problem is that Sass allows `@import` to be placed anywhere.\n  let newImportIndex = 0;\n\n  // One special case is if the file starts with a license header which we want to preserve on top.\n  if (content.trim().startsWith(commentPlaceholderStart)) {\n    const commentStartIndex = content.indexOf(commentPlaceholderStart);\n    newImportIndex =\n      content.indexOf(commentPlaceholderEnd, commentStartIndex + 1) + commentPlaceholderEnd.length;\n    // If the leading comment doesn't end with a newline,\n    // we need to insert the import at the next line.\n    if (!commentPlaceholders[content.slice(commentStartIndex, newImportIndex)].endsWith('\\n')) {\n      newImportIndex = Math.max(newImportIndex, content.indexOf('\\n', newImportIndex) + 1);\n    }\n  }\n\n  return (\n    content.slice(0, newImportIndex) +\n    `@use '${importPath}' as ${namespace};\\n` +\n    content.slice(newImportIndex)\n  );\n}\n\n/** Formats a migration key as a Sass mixin invocation. */\nfunction mixinKeyFormatter(namespace: string | null, name: string): RegExp {\n  // Note that adding a `(` at the end of the pattern would be more accurate, but mixin\n  // invocations don't necessarily have to include the parentheses. We could add `[(;]`,\n  // but then we won't know which character to include in the replacement string.\n  return new RegExp(`@include +${escapeRegExp((namespace ? namespace + '.' : '') + name)}`, 'g');\n}\n\n/** Returns a function that can be used to format a Sass mixin replacement. */\nfunction getMixinValueFormatter(namespace: string): (name: string) => string {\n  // Note that adding a `(` at the end of the pattern would be more accurate,\n  // but mixin invocations don't necessarily have to include the parentheses.\n  return name => `@include ${namespace}.${name}`;\n}\n\n/** Formats a migration key as a Sass function invocation. */\nfunction functionKeyFormatter(namespace: string | null, name: string): RegExp {\n  const functionName = escapeRegExp(`${namespace ? namespace + '.' : ''}${name}(`);\n  return new RegExp(`(?<![-_a-zA-Z0-9])${functionName}`, 'g');\n}\n\n/** Returns a function that can be used to format a Sass function replacement. */\nfunction getFunctionValueFormatter(namespace: string): (name: string) => string {\n  return name => `${namespace}.${name}(`;\n}\n\n/** Formats a migration key as a Sass variable. */\nfunction variableKeyFormatter(namespace: string | null, name: string): RegExp {\n  const variableName = escapeRegExp(`${namespace ? namespace + '.' : ''}$${name}`);\n  return new RegExp(`${variableName}(?![-_a-zA-Z0-9])`, 'g');\n}\n\n/** Returns a function that can be used to format a Sass variable replacement. */\nfunction getVariableValueFormatter(namespace: string): (name: string) => string {\n  return name => `${namespace}.$${name}`;\n}\n\n/** Escapes special regex characters in a string. */\nfunction escapeRegExp(str: string): string {\n  return str.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\n\n/** Removes all strings from another string. */\nfunction removeStrings(content: string, toRemove: string[]): string {\n  return toRemove\n    .reduce((accumulator, current) => accumulator.replace(current, ''), content)\n    .replace(/^\\s+/, '');\n}\n\n/** Parses out the namespace from a Sass `@use` statement. */\nfunction extractNamespaceFromUseStatement(fullImport: string): string {\n  const closeQuoteIndex = Math.max(fullImport.lastIndexOf(`\"`), fullImport.lastIndexOf(`'`));\n\n  if (closeQuoteIndex > -1) {\n    const asExpression = 'as ';\n    const asIndex = fullImport.indexOf(asExpression, closeQuoteIndex);\n\n    // If we found an ` as ` expression, we consider the rest of the text as the namespace.\n    if (asIndex > -1) {\n      return fullImport\n        .slice(asIndex + asExpression.length)\n        .split(';')[0]\n        .trim();\n    }\n\n    // Otherwise the namespace is the name of the file that is being imported.\n    const lastSlashIndex = fullImport.lastIndexOf('/', closeQuoteIndex);\n\n    if (lastSlashIndex > -1) {\n      const fileName = fullImport\n        .slice(lastSlashIndex + 1, closeQuoteIndex)\n        // Sass allows for leading underscores to be omitted and it technically supports .scss.\n        .replace(/^_|(\\.import)?\\.scss$|\\.import$/g, '');\n\n      // Sass ignores `/index` and infers the namespace as the next segment in the path.\n      if (fileName === 'index') {\n        const nextSlashIndex = fullImport.lastIndexOf('/', lastSlashIndex - 1);\n\n        if (nextSlashIndex > -1) {\n          return fullImport.slice(nextSlashIndex + 1, lastSlashIndex);\n        }\n      } else {\n        return fileName;\n      }\n    }\n  }\n\n  throw Error(`Could not extract namespace from import \"${fullImport}\".`);\n}\n\n/**\n * Replaces variables that have been removed with their values.\n * @param content Content of the file to be migrated.\n * @param variables Mapping between variable names and their values.\n */\nfunction replaceRemovedVariables(content: string, variables: Record<string, string>): string {\n  Object.keys(variables).forEach(variableName => {\n    // Note that the pattern uses a negative lookahead to exclude\n    // variable assignments, because they can't be migrated.\n    const regex = new RegExp(`\\\\$${escapeRegExp(variableName)}(?!\\\\s+:|[-_a-zA-Z0-9:])`, 'g');\n    content = content.replace(regex, variables[variableName]);\n  });\n\n  return content;\n}\n\n/**\n * Replaces all of the comments in a Sass file with placeholders and\n * returns the list of placeholders so they can be restored later.\n */\nfunction escapeComments(content: string): {content: string; placeholders: Record<string, string>} {\n  const placeholders: Record<string, string> = {};\n  let commentCounter = 0;\n  let [openIndex, closeIndex] = findComment(content);\n\n  while (openIndex > -1 && closeIndex > -1) {\n    const placeholder = commentPlaceholderStart + commentCounter++ + commentPlaceholderEnd;\n    placeholders[placeholder] = content.slice(openIndex, closeIndex);\n    content = content.slice(0, openIndex) + placeholder + content.slice(closeIndex);\n    [openIndex, closeIndex] = findComment(content);\n  }\n\n  return {content, placeholders};\n}\n\n/** Finds the start and end index of a comment in a file. */\nfunction findComment(content: string): [openIndex: number, closeIndex: number] {\n  // Add an extra new line at the end so that we can correctly capture single-line comments\n  // at the end of the file. It doesn't really matter that the end index will be out of bounds,\n  // because `String.prototype.slice` will clamp it to the string length.\n  content += '\\n';\n\n  for (const [open, close] of commentPairs.entries()) {\n    const openIndex = content.indexOf(open);\n\n    if (openIndex > -1) {\n      const closeIndex = content.indexOf(close, openIndex + 1);\n      return closeIndex > -1 ? [openIndex, closeIndex + close.length] : [-1, -1];\n    }\n  }\n\n  return [-1, -1];\n}\n\n/** Restores the comments that have been escaped by `escapeComments`. */\nfunction restoreComments(content: string, placeholders: Record<string, string>): string {\n  Object.keys(placeholders).forEach(key => (content = content.replace(key, placeholders[key])));\n  return content;\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {extname} from '@angular-devkit/core';\nimport {SchematicContext} from '@angular-devkit/schematics';\nimport {DevkitMigration, ResolvedResource, TargetVersion} from '@angular/cdk/schematics';\nimport {migrateFileContent} from './migration';\n\n/** Migration that switches all Sass files using Material theming APIs to `@use`. */\nexport class ThemingApiMigration extends DevkitMigration<null> {\n  /** Number of files that have been migrated. */\n  static migratedFileCount = 0;\n\n  enabled = this.targetVersion === TargetVersion.V12;\n\n  override visitStylesheet(stylesheet: ResolvedResource): void {\n    if (extname(stylesheet.filePath) === '.scss') {\n      const content = stylesheet.content;\n      const migratedContent = content\n        ? migrateFileContent(\n            content,\n            '@angular/material/',\n            '@angular/cdk/',\n            '@angular/material',\n            '@angular/cdk',\n            undefined,\n            /material\\/prebuilt-themes|cdk\\/.*-prebuilt/,\n          )\n        : content;\n\n      if (migratedContent && migratedContent !== content) {\n        this.fileSystem\n          .edit(stylesheet.filePath)\n          .remove(0, stylesheet.content.length)\n          .insertLeft(0, migratedContent);\n        ThemingApiMigration.migratedFileCount++;\n      }\n    }\n  }\n\n  /** Logs out the number of migrated files at the end of the migration. */\n  static override globalPostMigration(\n    _tree: unknown,\n    _targetVersion: TargetVersion,\n    context: SchematicContext,\n  ): void {\n    const count = ThemingApiMigration.migratedFileCount;\n\n    if (count > 0) {\n      context.logger.info(\n        `Migrated ${count === 1 ? `1 file` : `${count} files`} to the ` +\n          `new Angular Material theming API.`,\n      );\n      ThemingApiMigration.migratedFileCount = 0;\n    }\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Migration, TargetVersion} from '@angular/cdk/schematics';\nimport * as ts from 'typescript';\n\nexport class LegacyComponentsMigration extends Migration<null> {\n  enabled = this.targetVersion === TargetVersion.V15;\n\n  override visitNode(node: ts.Node): void {\n    if (ts.isImportDeclaration(node)) {\n      this._handleImportDeclaration(node);\n      return;\n    }\n    if (this._isDestructuredAsyncImport(node)) {\n      this._handleDestructuredAsyncImport(node);\n      return;\n    }\n    if (this._isImportCallExpression(node)) {\n      this._handleImportExpression(node);\n      return;\n    }\n  }\n\n  /** Handles updating the named bindings of awaited @angular/material import expressions. */\n  private _handleDestructuredAsyncImport(\n    node: ts.VariableDeclaration & {name: ts.ObjectBindingPattern},\n  ): void {\n    for (let i = 0; i < node.name.elements.length; i++) {\n      const n = node.name.elements[i];\n      const name = n.propertyName ? n.propertyName : n.name;\n      if (ts.isIdentifier(name)) {\n        const oldExport = name.escapedText.toString();\n        const suffix = oldExport.slice('Mat'.length);\n        const newExport = n.propertyName\n          ? `MatLegacy${suffix}`\n          : `MatLegacy${suffix}: Mat${suffix}`;\n        this._replaceAt(name, {old: oldExport, new: newExport});\n      }\n    }\n  }\n\n  /** Handles updating the module specifier of @angular/material imports. */\n  private _handleImportDeclaration(node: ts.ImportDeclaration): void {\n    const moduleSpecifier = node.moduleSpecifier as ts.StringLiteral;\n    if (moduleSpecifier.text.startsWith('@angular/material/')) {\n      this._replaceAt(node, {old: '@angular/material/', new: '@angular/material/legacy-'});\n\n      if (node.importClause?.namedBindings && ts.isNamedImports(node.importClause.namedBindings)) {\n        this._handleNamedImportBindings(node.importClause.namedBindings);\n      }\n    }\n  }\n\n  /** Handles updating the module specifier of @angular/material import expressions. */\n  private _handleImportExpression(node: ts.CallExpression): void {\n    const moduleSpecifier = node.arguments[0] as ts.StringLiteral;\n    if (moduleSpecifier.text.startsWith('@angular/material/')) {\n      this._replaceAt(node, {old: '@angular/material/', new: '@angular/material/legacy-'});\n    }\n  }\n\n  /** Handles updating the named bindings of @angular/material imports. */\n  private _handleNamedImportBindings(node: ts.NamedImports): void {\n    for (let i = 0; i < node.elements.length; i++) {\n      const n = node.elements[i];\n      const name = n.propertyName ? n.propertyName : n.name;\n      const oldExport = name.escapedText.toString();\n      const suffix = oldExport.slice('Mat'.length);\n      const newExport = n.propertyName\n        ? `MatLegacy${suffix}`\n        : `MatLegacy${suffix} as Mat${suffix}`;\n      this._replaceAt(name, {old: oldExport, new: newExport});\n    }\n  }\n\n  /**\n   * Returns true if the given node is a variable declaration assigns\n   * the awaited result of an import expression using an object binding.\n   */\n  private _isDestructuredAsyncImport(\n    node: ts.Node,\n  ): node is ts.VariableDeclaration & {name: ts.ObjectBindingPattern} {\n    return (\n      ts.isVariableDeclaration(node) &&\n      !!node.initializer &&\n      ts.isAwaitExpression(node.initializer) &&\n      ts.isCallExpression(node.initializer.expression) &&\n      ts.SyntaxKind.ImportKeyword === node.initializer.expression.expression.kind &&\n      ts.isObjectBindingPattern(node.name)\n    );\n  }\n\n  /** Gets whether the specified node is an import expression. */\n  private _isImportCallExpression(\n    node: ts.Node,\n  ): node is ts.CallExpression & {arguments: [ts.StringLiteralLike]} {\n    return (\n      ts.isCallExpression(node) &&\n      node.expression.kind === ts.SyntaxKind.ImportKeyword &&\n      node.arguments.length === 1 &&\n      ts.isStringLiteralLike(node.arguments[0])\n    );\n  }\n\n  /** Updates the source file of the given node with the given replacements. */\n  private _replaceAt(node: ts.Node, str: {old: string; new: string}): void {\n    const filePath = this.fileSystem.resolve(node.getSourceFile().fileName);\n    const index = this.fileSystem.read(filePath)!.indexOf(str.old, node.pos);\n    this.fileSystem.edit(filePath).remove(index, str.old.length).insertRight(index, str.new);\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AttributeSelectorUpgradeData, VersionChanges} from '@angular/cdk/schematics';\n\nexport const attributeSelectors: VersionChanges<AttributeSelectorUpgradeData> = {};\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ClassNameUpgradeData, TargetVersion, VersionChanges} from '@angular/cdk/schematics';\n\nexport const classNames: VersionChanges<ClassNameUpgradeData> = {\n  [TargetVersion.V10]: [\n    {\n      pr: 'https://github.com/angular/components/pull/19289',\n      changes: [{replace: 'MatButtonToggleGroupMultiple', replaceWith: 'MatButtonToggleGroup'}],\n    },\n  ],\n  [TargetVersion.V6]: [\n    {\n      pr: 'https://github.com/angular/components/pull/10291',\n      changes: [\n        {replace: 'FloatPlaceholderType', replaceWith: 'FloatLabelType'},\n        {replace: 'MAT_PLACEHOLDER_GLOBAL_OPTIONS', replaceWith: 'MAT_LABEL_GLOBAL_OPTIONS'},\n        {replace: 'PlaceholderOptions', replaceWith: 'LabelOptions'},\n      ],\n    },\n  ],\n};\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ConstructorChecksUpgradeData, TargetVersion, VersionChanges} from '@angular/cdk/schematics';\n\n/**\n * List of class names for which the constructor signature has been changed. The new constructor\n * signature types don't need to be stored here because the signature will be determined\n * automatically through type checking.\n */\nexport const constructorChecks: VersionChanges<ConstructorChecksUpgradeData> = {\n  [TargetVersion.V14]: [\n    {\n      pr: 'https://github.com/angular/components/pull/23327',\n      changes: ['MatSelectionList', 'MatSelectionListChange'],\n    },\n  ],\n  [TargetVersion.V13]: [\n    {\n      pr: 'https://github.com/angular/components/pull/23389',\n      changes: ['MatFormField'],\n    },\n    {\n      pr: 'https://github.com/angular/components/pull/23573',\n      changes: ['MatDatepicker', 'MatDateRangePicker'],\n    },\n    {\n      pr: 'https://github.com/angular/components/pull/23328',\n      changes: ['MatStepper'],\n    },\n  ],\n  [TargetVersion.V12]: [\n    {\n      pr: 'https://github.com/angular/components/pull/21897',\n      changes: ['MatTooltip'],\n    },\n    {\n      pr: 'https://github.com/angular/components/pull/21952',\n      changes: ['MatDatepickerContent'],\n    },\n    {\n      pr: 'https://github.com/angular/components/issues/21900',\n      changes: ['MatVerticalStepper', 'MatStep'],\n    },\n  ],\n  [TargetVersion.V11]: [\n    {\n      pr: 'https://github.com/angular/components/issues/20463',\n      changes: ['MatChip', 'MatChipRemove'],\n    },\n    {\n      pr: 'https://github.com/angular/components/pull/20449',\n      changes: ['MatDatepickerContent'],\n    },\n    {\n      pr: 'https://github.com/angular/components/pull/20545',\n      changes: ['MatBottomSheet', 'MatBottomSheetRef'],\n    },\n    {\n      pr: 'https://github.com/angular/components/issues/20535',\n      changes: ['MatCheckbox'],\n    },\n    {\n      pr: 'https://github.com/angular/components/pull/20499',\n      changes: ['MatPaginatedTabHeader', 'MatTabBodyPortal', 'MatTabNav', 'MatTab'],\n    },\n    {\n      pr: 'https://github.com/angular/components/pull/20479',\n      changes: ['MatCommonModule'],\n    },\n  ],\n  [TargetVersion.V10]: [\n    {\n      pr: 'https://github.com/angular/components/pull/19307',\n      changes: ['MatSlideToggle'],\n    },\n    {\n      pr: 'https://github.com/angular/components/pull/19379',\n      changes: ['MatSlider'],\n    },\n    {\n      pr: 'https://github.com/angular/components/pull/19372',\n      changes: ['MatSortHeader'],\n    },\n    {\n      pr: 'https://github.com/angular/components/pull/19324',\n      changes: ['MatAutocompleteTrigger'],\n    },\n    {\n      pr: 'https://github.com/angular/components/pull/19363',\n      changes: ['MatTooltip'],\n    },\n    {\n      pr: 'https://github.com/angular/components/pull/19323',\n      changes: ['MatIcon', 'MatIconRegistry'],\n    },\n  ],\n  [TargetVersion.V9]: [\n    {\n      pr: 'https://github.com/angular/components/pull/17230',\n      changes: ['MatSelect'],\n    },\n    {\n      pr: 'https://github.com/angular/components/pull/17333',\n      changes: ['MatDialogRef'],\n    },\n  ],\n  [TargetVersion.V8]: [\n    {\n      pr: 'https://github.com/angular/components/pull/15647',\n      changes: ['MatFormField', 'MatTabLink', 'MatVerticalStepper'],\n    },\n    {pr: 'https://github.com/angular/components/pull/15757', changes: ['MatBadge']},\n    {pr: 'https://github.com/angular/components/issues/15734', changes: ['MatButton', 'MatAnchor']},\n    {\n      pr: 'https://github.com/angular/components/pull/15761',\n      changes: ['MatSpinner', 'MatProgressSpinner'],\n    },\n    {pr: 'https://github.com/angular/components/pull/15723', changes: ['MatList', 'MatListItem']},\n    {pr: 'https://github.com/angular/components/pull/15722', changes: ['MatExpansionPanel']},\n    {\n      pr: 'https://github.com/angular/components/pull/15737',\n      changes: ['MatTabHeader', 'MatTabBody'],\n    },\n    {pr: 'https://github.com/angular/components/pull/15806', changes: ['MatSlideToggle']},\n    {pr: 'https://github.com/angular/components/pull/15773', changes: ['MatDrawerContainer']},\n  ],\n\n  [TargetVersion.V7]: [\n    {\n      pr: 'https://github.com/angular/components/pull/11706',\n      changes: ['MatDrawerContent'],\n    },\n    {pr: 'https://github.com/angular/components/pull/11706', changes: ['MatSidenavContent']},\n  ],\n\n  [TargetVersion.V6]: [\n    {\n      pr: 'https://github.com/angular/components/pull/9190',\n      changes: ['NativeDateAdapter'],\n    },\n    {\n      pr: 'https://github.com/angular/components/pull/10319',\n      changes: ['MatAutocomplete'],\n    },\n    {\n      pr: 'https://github.com/angular/components/pull/10344',\n      changes: ['MatTooltip'],\n    },\n    {\n      pr: 'https://github.com/angular/components/pull/10389',\n      changes: ['MatIconRegistry'],\n    },\n    {\n      pr: 'https://github.com/angular/components/pull/9775',\n      changes: ['MatCalendar'],\n    },\n  ],\n};\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TargetVersion, VersionChanges} from '@angular/cdk/schematics';\n\nexport interface MaterialCssSelectorData {\n  /** The CSS selector to replace. */\n  replace: string;\n  /** The new CSS selector. */\n  replaceWith: string;\n  /**\n   * Controls which file types in which this replacement is made. If omitted, it is made in all\n   * files.\n   */\n  replaceIn?: {\n    /** Replace this name in stylesheet files. */\n    stylesheet?: boolean;\n    /** Replace this name in HTML files. */\n    html?: boolean;\n    /** Replace this name in TypeScript strings. */\n    tsStringLiterals?: boolean;\n  };\n}\n\nexport const cssSelectors: VersionChanges<MaterialCssSelectorData> = {\n  [TargetVersion.V14]: [\n    {\n      pr: 'https://github.com/angular/components/pull/23327',\n      changes: [{replace: '.mat-list-item-avatar', replaceWith: '.mat-list-item-with-avatar'}],\n    },\n  ],\n  [TargetVersion.V6]: [\n    {\n      pr: 'https://github.com/angular/components/pull/10296',\n      changes: [\n        {replace: '.mat-form-field-placeholder', replaceWith: '.mat-form-field-label'},\n        {replace: '.mat-input-container', replaceWith: '.mat-form-field'},\n        {replace: '.mat-input-flex', replaceWith: '.mat-form-field-flex'},\n        {replace: '.mat-input-hint-spacer', replaceWith: '.mat-form-field-hint-spacer'},\n        {replace: '.mat-input-hint-wrapper', replaceWith: '.mat-form-field-hint-wrapper'},\n        {replace: '.mat-input-infix', replaceWith: '.mat-form-field-infix'},\n        {replace: '.mat-input-invalid', replaceWith: '.mat-form-field-invalid'},\n        {replace: '.mat-input-placeholder', replaceWith: '.mat-form-field-label'},\n        {replace: '.mat-input-placeholder-wrapper', replaceWith: '.mat-form-field-label-wrapper'},\n        {replace: '.mat-input-prefix', replaceWith: '.mat-form-field-prefix'},\n        {replace: '.mat-input-ripple', replaceWith: '.mat-form-field-ripple'},\n        {replace: '.mat-input-subscript-wrapper', replaceWith: '.mat-form-field-subscript-wrapper'},\n        {replace: '.mat-input-suffix', replaceWith: '.mat-form-field-suffix'},\n        {replace: '.mat-input-underline', replaceWith: '.mat-form-field-underline'},\n        {replace: '.mat-input-wrapper', replaceWith: '.mat-form-field-wrapper'},\n      ],\n    },\n\n    // TODO(devversion): this shouldn't be here because it's not a CSS selector. Move into misc\n    // rule.\n    {\n      pr: 'https://github.com/angular/components/pull/10430',\n      changes: [\n        {\n          replace: '$mat-font-family',\n          replaceWith: \"Roboto, 'Helvetica Neue', sans-serif\",\n          replaceIn: {stylesheet: true},\n        },\n      ],\n    },\n  ],\n};\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementSelectorUpgradeData, TargetVersion, VersionChanges} from '@angular/cdk/schematics';\n\nexport const elementSelectors: VersionChanges<ElementSelectorUpgradeData> = {\n  [TargetVersion.V6]: [\n    {\n      pr: 'https://github.com/angular/components/pull/10297',\n      changes: [{replace: 'mat-input-container', replaceWith: 'mat-form-field'}],\n    },\n  ],\n};\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InputNameUpgradeData, TargetVersion, VersionChanges} from '@angular/cdk/schematics';\n\nexport const inputNames: VersionChanges<InputNameUpgradeData> = {\n  [TargetVersion.V6]: [\n    {\n      pr: 'https://github.com/angular/components/pull/10218',\n      changes: [\n        {\n          replace: 'align',\n          replaceWith: 'labelPosition',\n          limitedTo: {elements: ['mat-radio-group', 'mat-radio-button']},\n        },\n      ],\n    },\n\n    {\n      pr: 'https://github.com/angular/components/pull/10279',\n      changes: [\n        {\n          replace: 'align',\n          replaceWith: 'position',\n          limitedTo: {elements: ['mat-drawer', 'mat-sidenav']},\n        },\n      ],\n    },\n\n    {\n      pr: 'https://github.com/angular/components/pull/10294',\n      changes: [\n        {replace: 'dividerColor', replaceWith: 'color', limitedTo: {elements: ['mat-form-field']}},\n        {\n          replace: 'floatPlaceholder',\n          replaceWith: 'floatLabel',\n          limitedTo: {elements: ['mat-form-field']},\n        },\n      ],\n    },\n\n    {\n      pr: 'https://github.com/angular/components/pull/10309',\n      changes: [\n        {\n          replace: 'mat-dynamic-height',\n          replaceWith: 'dynamicHeight',\n          limitedTo: {elements: ['mat-tab-group']},\n        },\n      ],\n    },\n\n    {\n      pr: 'https://github.com/angular/components/pull/10342',\n      changes: [\n        {replace: 'align', replaceWith: 'labelPosition', limitedTo: {elements: ['mat-checkbox']}},\n      ],\n    },\n\n    {\n      pr: 'https://github.com/angular/components/pull/10344',\n      changes: [\n        {\n          replace: 'tooltip-position',\n          replaceWith: 'matTooltipPosition',\n          limitedTo: {attributes: ['matTooltip']},\n        },\n      ],\n    },\n\n    {\n      pr: 'https://github.com/angular/components/pull/10373',\n      changes: [\n        {replace: 'thumb-label', replaceWith: 'thumbLabel', limitedTo: {elements: ['mat-slider']}},\n        {\n          replace: 'tick-interval',\n          replaceWith: 'tickInterval',\n          limitedTo: {elements: ['mat-slider']},\n        },\n      ],\n    },\n  ],\n};\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MethodCallUpgradeData, TargetVersion, VersionChanges} from '@angular/cdk/schematics';\n\nexport const methodCallChecks: VersionChanges<MethodCallUpgradeData> = {\n  [TargetVersion.V11]: [\n    {\n      pr: 'https://github.com/angular/components/pull/20499',\n      changes: [\n        {\n          className: 'MatTabNav',\n          method: 'updateActiveLink',\n          invalidArgCounts: [{count: 1, message: 'The \"_element\" parameter has been removed'}],\n        },\n      ],\n    },\n  ],\n};\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OutputNameUpgradeData, TargetVersion, VersionChanges} from '@angular/cdk/schematics';\n\nexport const outputNames: VersionChanges<OutputNameUpgradeData> = {\n  [TargetVersion.V6]: [\n    {\n      pr: 'https://github.com/angular/components/pull/10163',\n      changes: [\n        {\n          replace: 'change',\n          replaceWith: 'selectionChange',\n          limitedTo: {\n            elements: ['mat-select'],\n          },\n        },\n        {\n          replace: 'onClose',\n          replaceWith: 'closed',\n          limitedTo: {\n            elements: ['mat-select'],\n          },\n        },\n        {\n          replace: 'onOpen',\n          replaceWith: 'opened',\n          limitedTo: {\n            elements: ['mat-select'],\n          },\n        },\n      ],\n    },\n\n    {\n      pr: 'https://github.com/angular/components/pull/10279',\n      changes: [\n        {\n          replace: 'align-changed',\n          replaceWith: 'positionChanged',\n          limitedTo: {\n            elements: ['mat-drawer', 'mat-sidenav'],\n          },\n        },\n        {\n          replace: 'close',\n          replaceWith: 'closed',\n          limitedTo: {\n            elements: ['mat-drawer', 'mat-sidenav'],\n          },\n        },\n        {\n          replace: 'open',\n          replaceWith: 'opened',\n          limitedTo: {\n            elements: ['mat-drawer', 'mat-sidenav'],\n          },\n        },\n      ],\n    },\n\n    {\n      pr: 'https://github.com/angular/components/pull/10309',\n      changes: [\n        {\n          replace: 'selectChange',\n          replaceWith: 'selectedTabChange',\n          limitedTo: {\n            elements: ['mat-tab-group'],\n          },\n        },\n      ],\n    },\n\n    {\n      pr: 'https://github.com/angular/components/pull/10311',\n      changes: [\n        {\n          replace: 'remove',\n          replaceWith: 'removed',\n          limitedTo: {\n            attributes: ['mat-chip', 'mat-basic-chip'],\n            elements: ['mat-chip', 'mat-basic-chip'],\n          },\n        },\n        {\n          replace: 'destroy',\n          replaceWith: 'destroyed',\n          limitedTo: {\n            attributes: ['mat-chip', 'mat-basic-chip'],\n            elements: ['mat-chip', 'mat-basic-chip'],\n          },\n        },\n      ],\n    },\n  ],\n};\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PropertyNameUpgradeData, TargetVersion, VersionChanges} from '@angular/cdk/schematics';\n\nexport const propertyNames: VersionChanges<PropertyNameUpgradeData> = {\n  [TargetVersion.V11]: [\n    {\n      pr: 'https://github.com/angular/components/pull/20449',\n      changes: [\n        {\n          replace: 'getPopupConnectionElementRef',\n          replaceWith: 'getConnectedOverlayOrigin',\n          limitedTo: {classes: ['MatDatepickerInput']},\n        },\n      ],\n    },\n  ],\n  [TargetVersion.V9]: [\n    {\n      pr: 'https://github.com/angular/components/pull/17333',\n      changes: [\n        {\n          replace: 'afterOpen',\n          replaceWith: 'afterOpened',\n          limitedTo: {classes: ['MatDialogRef']},\n        },\n        {\n          replace: 'beforeClose',\n          replaceWith: 'beforeClosed',\n          limitedTo: {classes: ['MatDialogRef']},\n        },\n        {\n          replace: 'afterOpen',\n          replaceWith: 'afterOpened',\n          limitedTo: {classes: ['MatDialog']},\n        },\n      ],\n    },\n  ],\n  [TargetVersion.V6]: [\n    {\n      pr: 'https://github.com/angular/components/pull/10163',\n      changes: [\n        {replace: 'change', replaceWith: 'selectionChange', limitedTo: {classes: ['MatSelect']}},\n        {\n          replace: 'onOpen',\n          replaceWith: 'openedChange.pipe(filter(isOpen => isOpen))',\n          limitedTo: {classes: ['MatSelect']},\n        },\n        {\n          replace: 'onClose',\n          replaceWith: 'openedChange.pipe(filter(isOpen => !isOpen))',\n          limitedTo: {classes: ['MatSelect']},\n        },\n      ],\n    },\n\n    {\n      pr: 'https://github.com/angular/components/pull/10218',\n      changes: [\n        {\n          replace: 'align',\n          replaceWith: 'labelPosition',\n          limitedTo: {classes: ['MatRadioGroup', 'MatRadioButton']},\n        },\n      ],\n    },\n\n    {\n      pr: 'https://github.com/angular/components/pull/10253',\n      changes: [\n        {\n          replace: 'extraClasses',\n          replaceWith: 'panelClass',\n          limitedTo: {classes: ['MatSnackBarConfig']},\n        },\n      ],\n    },\n\n    {\n      pr: 'https://github.com/angular/components/pull/10279',\n      changes: [\n        {\n          replace: 'align',\n          replaceWith: 'position',\n          limitedTo: {classes: ['MatDrawer', 'MatSidenav']},\n        },\n        {\n          replace: 'onAlignChanged',\n          replaceWith: 'onPositionChanged',\n          limitedTo: {classes: ['MatDrawer', 'MatSidenav']},\n        },\n        {\n          replace: 'onOpen',\n          replaceWith: 'openedChange.pipe(filter(isOpen => isOpen))',\n          limitedTo: {classes: ['MatDrawer', 'MatSidenav']},\n        },\n        {\n          replace: 'onClose',\n          replaceWith: 'openedChange.pipe(filter(isOpen => !isOpen))',\n          limitedTo: {classes: ['MatDrawer', 'MatSidenav']},\n        },\n      ],\n    },\n\n    {\n      pr: 'https://github.com/angular/components/pull/10293',\n      changes: [\n        {\n          replace: 'shouldPlaceholderFloat',\n          replaceWith: 'shouldLabelFloat',\n          limitedTo: {classes: ['MatFormFieldControl', 'MatSelect']},\n        },\n      ],\n    },\n\n    {\n      pr: 'https://github.com/angular/components/pull/10294',\n      changes: [\n        {replace: 'dividerColor', replaceWith: 'color', limitedTo: {classes: ['MatFormField']}},\n        {\n          replace: 'floatPlaceholder',\n          replaceWith: 'floatLabel',\n          limitedTo: {classes: ['MatFormField']},\n        },\n      ],\n    },\n\n    {\n      pr: 'https://github.com/angular/components/pull/10309',\n      changes: [\n        {\n          replace: 'selectChange',\n          replaceWith: 'selectedTabChange',\n          limitedTo: {classes: ['MatTabGroup']},\n        },\n        {\n          replace: '_dynamicHeightDeprecated',\n          replaceWith: 'dynamicHeight',\n          limitedTo: {classes: ['MatTabGroup']},\n        },\n      ],\n    },\n\n    {\n      pr: 'https://github.com/angular/components/pull/10311',\n      changes: [\n        {replace: 'destroy', replaceWith: 'destroyed', limitedTo: {classes: ['MatChip']}},\n        {replace: 'onRemove', replaceWith: 'removed', limitedTo: {classes: ['MatChip']}},\n      ],\n    },\n\n    {\n      pr: 'https://github.com/angular/components/pull/10342',\n      changes: [\n        {replace: 'align', replaceWith: 'labelPosition', limitedTo: {classes: ['MatCheckbox']}},\n      ],\n    },\n\n    {\n      pr: 'https://github.com/angular/components/pull/10344',\n      changes: [\n        {\n          replace: '_positionDeprecated',\n          replaceWith: 'position',\n          limitedTo: {classes: ['MatTooltip']},\n        },\n      ],\n    },\n\n    {\n      pr: 'https://github.com/angular/components/pull/10373',\n      changes: [\n        {\n          replace: '_thumbLabelDeprecated',\n          replaceWith: 'thumbLabel',\n          limitedTo: {classes: ['MatSlider']},\n        },\n        {\n          replace: '_tickIntervalDeprecated',\n          replaceWith: 'tickInterval',\n          limitedTo: {classes: ['MatSlider']},\n        },\n      ],\n    },\n  ],\n};\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SymbolRemovalUpgradeData, TargetVersion, VersionChanges} from '@angular/cdk/schematics';\n\nexport const symbolRemoval: VersionChanges<SymbolRemovalUpgradeData> = {\n  [TargetVersion.V13]: [\n    {\n      pr: 'https://github.com/angular/components/pull/23529',\n      changes: [\n        'CanColorCtor',\n        'CanDisableRippleCtor',\n        'CanDisableCtor',\n        'CanUpdateErrorStateCtor',\n        'HasInitializedCtor',\n        'HasTabIndexCtor',\n      ].map(name => ({\n        name,\n        module: '@angular/material/core',\n        message: `\\`${name}\\` is no longer necessary and has been removed.`,\n      })),\n    },\n  ],\n};\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './attribute-selectors';\nexport * from './class-names';\nexport * from './constructor-checks';\nexport * from './css-selectors';\nexport * from './element-selectors';\nexport * from './input-names';\nexport * from './method-call-checks';\nexport * from './output-names';\nexport * from './property-names';\nexport * from './symbol-removal';\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {UpgradeData} from '@angular/cdk/schematics';\nimport {\n  attributeSelectors,\n  classNames,\n  constructorChecks,\n  cssSelectors,\n  elementSelectors,\n  inputNames,\n  methodCallChecks,\n  outputNames,\n  propertyNames,\n  symbolRemoval,\n} from './data';\n\n/** Upgrade data that will be used for the Angular Material ng-update schematic. */\nexport const materialUpgradeData: UpgradeData = {\n  attributeSelectors,\n  classNames,\n  constructorChecks,\n  cssSelectors,\n  elementSelectors,\n  inputNames,\n  methodCallChecks,\n  outputNames,\n  propertyNames,\n  symbolRemoval,\n};\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Rule, SchematicContext} from '@angular-devkit/schematics';\nimport {\n  createMigrationSchematicRule,\n  NullableDevkitMigration,\n  TargetVersion,\n} from '@angular/cdk/schematics';\nimport {HammerGesturesMigration} from './migrations/hammer-gestures-v9/hammer-gestures-migration';\nimport {MiscClassInheritanceMigration} from './migrations/misc-checks/misc-class-inheritance';\nimport {MiscClassNamesMigration} from './migrations/misc-checks/misc-class-names';\nimport {MiscImportsMigration} from './migrations/misc-checks/misc-imports';\nimport {MiscPropertyNamesMigration} from './migrations/misc-checks/misc-property-names';\nimport {MiscTemplateMigration} from './migrations/misc-checks/misc-template';\nimport {RippleSpeedFactorMigration} from './migrations/misc-ripples-v7/ripple-speed-factor-migration';\nimport {SecondaryEntryPointsMigration} from './migrations/package-imports-v8/secondary-entry-points-migration';\nimport {ThemingApiMigration} from './migrations/theming-api-v12/theming-api-migration';\nimport {LegacyComponentsMigration} from './migrations/legacy-components-v15';\n\nimport {materialUpgradeData} from './upgrade-data';\n\nconst materialMigrations: NullableDevkitMigration[] = [\n  MiscClassInheritanceMigration,\n  MiscClassNamesMigration,\n  MiscImportsMigration,\n  MiscPropertyNamesMigration,\n  MiscTemplateMigration,\n  RippleSpeedFactorMigration,\n  SecondaryEntryPointsMigration,\n  HammerGesturesMigration,\n  ThemingApiMigration,\n  LegacyComponentsMigration,\n];\n\n/** Entry point for the migration schematics with target of Angular Material v6 */\nexport function updateToV6(): Rule {\n  return createMigrationSchematicRule(\n    TargetVersion.V6,\n    materialMigrations,\n    materialUpgradeData,\n    onMigrationComplete,\n  );\n}\n\n/** Entry point for the migration schematics with target of Angular Material v7 */\nexport function updateToV7(): Rule {\n  return createMigrationSchematicRule(\n    TargetVersion.V7,\n    materialMigrations,\n    materialUpgradeData,\n    onMigrationComplete,\n  );\n}\n\n/** Entry point for the migration schematics with target of Angular Material v8 */\nexport function updateToV8(): Rule {\n  return createMigrationSchematicRule(\n    TargetVersion.V8,\n    materialMigrations,\n    materialUpgradeData,\n    onMigrationComplete,\n  );\n}\n\n/** Entry point for the migration schematics with target of Angular Material v9 */\nexport function updateToV9(): Rule {\n  return createMigrationSchematicRule(\n    TargetVersion.V9,\n    materialMigrations,\n    materialUpgradeData,\n    onMigrationComplete,\n  );\n}\n\n/** Entry point for the migration schematics with target of Angular Material v10 */\nexport function updateToV10(): Rule {\n  return createMigrationSchematicRule(\n    TargetVersion.V10,\n    materialMigrations,\n    materialUpgradeData,\n    onMigrationComplete,\n  );\n}\n\n/** Entry point for the migration schematics with target of Angular Material v11 */\nexport function updateToV11(): Rule {\n  return createMigrationSchematicRule(\n    TargetVersion.V11,\n    materialMigrations,\n    materialUpgradeData,\n    onMigrationComplete,\n  );\n}\n\n/** Entry point for the migration schematics with target of Angular Material v12 */\nexport function updateToV12(): Rule {\n  return createMigrationSchematicRule(\n    TargetVersion.V12,\n    materialMigrations,\n    materialUpgradeData,\n    onMigrationComplete,\n  );\n}\n\n/** Entry point for the migration schematics with target of Angular Material v13 */\nexport function updateToV13(): Rule {\n  return createMigrationSchematicRule(\n    TargetVersion.V13,\n    materialMigrations,\n    materialUpgradeData,\n    onMigrationComplete,\n  );\n}\n\n/** Entry point for the migration schematics with target of Angular Material v14 */\nexport function updateToV14(): Rule {\n  return createMigrationSchematicRule(\n    TargetVersion.V14,\n    materialMigrations,\n    materialUpgradeData,\n    onMigrationComplete,\n  );\n}\n\n/** Entry point for the migration schematics with target of Angular Material v15 */\nexport function updateToV15(): Rule {\n  return createMigrationSchematicRule(\n    TargetVersion.V15,\n    materialMigrations,\n    materialUpgradeData,\n    onMigrationComplete,\n  );\n}\n\n/** Function that will be called when the migration completed. */\nfunction onMigrationComplete(\n  context: SchematicContext,\n  targetVersion: TargetVersion,\n  hasFailures: boolean,\n) {\n  context.logger.info('');\n  context.logger.info(`  \u2713  Updated Angular Material to ${targetVersion}`);\n  context.logger.info('');\n\n  if (hasFailures) {\n    context.logger.warn(\n      '  \u26A0  Some issues were detected but could not be fixed automatically. Please check the ' +\n        'output above and fix these issues manually.',\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
