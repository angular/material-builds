"use strict";
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateToV13 = exports.updateToV12 = exports.updateToV11 = exports.updateToV10 = exports.updateToV9 = exports.updateToV8 = exports.updateToV7 = exports.updateToV6 = void 0;
const schematics_1 = require("@angular/cdk/schematics");
const hammer_gestures_migration_1 = require("./migrations/hammer-gestures-v9/hammer-gestures-migration");
const misc_class_inheritance_1 = require("./migrations/misc-checks/misc-class-inheritance");
const misc_class_names_1 = require("./migrations/misc-checks/misc-class-names");
const misc_imports_1 = require("./migrations/misc-checks/misc-imports");
const misc_property_names_1 = require("./migrations/misc-checks/misc-property-names");
const misc_template_1 = require("./migrations/misc-checks/misc-template");
const ripple_speed_factor_migration_1 = require("./migrations/misc-ripples-v7/ripple-speed-factor-migration");
const secondary_entry_points_migration_1 = require("./migrations/package-imports-v8/secondary-entry-points-migration");
const theming_api_migration_1 = require("./migrations/theming-api-v12/theming-api-migration");
const upgrade_data_1 = require("./upgrade-data");
const materialMigrations = [
    misc_class_inheritance_1.MiscClassInheritanceMigration,
    misc_class_names_1.MiscClassNamesMigration,
    misc_imports_1.MiscImportsMigration,
    misc_property_names_1.MiscPropertyNamesMigration,
    misc_template_1.MiscTemplateMigration,
    ripple_speed_factor_migration_1.RippleSpeedFactorMigration,
    secondary_entry_points_migration_1.SecondaryEntryPointsMigration,
    hammer_gestures_migration_1.HammerGesturesMigration,
    theming_api_migration_1.ThemingApiMigration,
];
/** Entry point for the migration schematics with target of Angular Material v6 */
function updateToV6() {
    return (0, schematics_1.createMigrationSchematicRule)(schematics_1.TargetVersion.V6, materialMigrations, upgrade_data_1.materialUpgradeData, onMigrationComplete);
}
exports.updateToV6 = updateToV6;
/** Entry point for the migration schematics with target of Angular Material v7 */
function updateToV7() {
    return (0, schematics_1.createMigrationSchematicRule)(schematics_1.TargetVersion.V7, materialMigrations, upgrade_data_1.materialUpgradeData, onMigrationComplete);
}
exports.updateToV7 = updateToV7;
/** Entry point for the migration schematics with target of Angular Material v8 */
function updateToV8() {
    return (0, schematics_1.createMigrationSchematicRule)(schematics_1.TargetVersion.V8, materialMigrations, upgrade_data_1.materialUpgradeData, onMigrationComplete);
}
exports.updateToV8 = updateToV8;
/** Entry point for the migration schematics with target of Angular Material v9 */
function updateToV9() {
    return (0, schematics_1.createMigrationSchematicRule)(schematics_1.TargetVersion.V9, materialMigrations, upgrade_data_1.materialUpgradeData, onMigrationComplete);
}
exports.updateToV9 = updateToV9;
/** Entry point for the migration schematics with target of Angular Material v10 */
function updateToV10() {
    return (0, schematics_1.createMigrationSchematicRule)(schematics_1.TargetVersion.V10, materialMigrations, upgrade_data_1.materialUpgradeData, onMigrationComplete);
}
exports.updateToV10 = updateToV10;
/** Entry point for the migration schematics with target of Angular Material v11 */
function updateToV11() {
    return (0, schematics_1.createMigrationSchematicRule)(schematics_1.TargetVersion.V11, materialMigrations, upgrade_data_1.materialUpgradeData, onMigrationComplete);
}
exports.updateToV11 = updateToV11;
/** Entry point for the migration schematics with target of Angular Material v12 */
function updateToV12() {
    return (0, schematics_1.createMigrationSchematicRule)(schematics_1.TargetVersion.V12, materialMigrations, upgrade_data_1.materialUpgradeData, onMigrationComplete);
}
exports.updateToV12 = updateToV12;
/** Entry point for the migration schematics with target of Angular Material v13 */
function updateToV13() {
    return (0, schematics_1.createMigrationSchematicRule)(schematics_1.TargetVersion.V13, materialMigrations, upgrade_data_1.materialUpgradeData, onMigrationComplete);
}
exports.updateToV13 = updateToV13;
/** Function that will be called when the migration completed. */
function onMigrationComplete(context, targetVersion, hasFailures) {
    context.logger.info('');
    context.logger.info(`  ✓  Updated Angular Material to ${targetVersion}`);
    context.logger.info('');
    if (hasFailures) {
        context.logger.warn('  ⚠  Some issues were detected but could not be fixed automatically. Please check the ' +
            'output above and fix these issues manually.');
    }
}
//# sourceMappingURL=data:application/json;base64,