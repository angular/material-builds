"use strict";
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
Object.defineProperty(exports, "__esModule", { value: true });
const schematics_1 = require("@angular-devkit/schematics");
const schematics_2 = require("@angular/cdk/schematics");
/**
 * Scaffolds a new table component.
 * Internally it bootstraps the base component schematic
 */
function default_1(options) {
    return (0, schematics_1.chain)([
        (0, schematics_2.buildComponent)({ ...options }, {
            template: './__path__/__name@dasherize@if-flat__/__name@dasherize__.component.html.template',
            stylesheet: './__path__/__name@dasherize@if-flat__/__name@dasherize__.component.__style__.template',
        }),
        options.skipImport ? (0, schematics_1.noop)() : addFormModulesToModule(options),
    ]);
}
exports.default = default_1;
/**
 * Adds the required modules to the relative module.
 */
function addFormModulesToModule(options) {
    return async (host) => {
        const modulePath = (await (0, schematics_2.findModuleFromOptions)(host, options));
        (0, schematics_2.addModuleImportToModule)(host, modulePath, 'MatLegacyInputModule', '@angular/material/legacy-input');
        (0, schematics_2.addModuleImportToModule)(host, modulePath, 'MatLegacyButtonModule', '@angular/material/legacy-button');
        (0, schematics_2.addModuleImportToModule)(host, modulePath, 'MatLegacySelectModule', '@angular/material/legacy-select');
        (0, schematics_2.addModuleImportToModule)(host, modulePath, 'MatLegacyRadioModule', '@angular/material/legacy-radio');
        (0, schematics_2.addModuleImportToModule)(host, modulePath, 'MatLegacyCardModule', '@angular/material/legacy-card');
        (0, schematics_2.addModuleImportToModule)(host, modulePath, 'ReactiveFormsModule', '@angular/forms');
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvbWF0ZXJpYWwvc2NoZW1hdGljcy9uZy1nZW5lcmF0ZS9hZGRyZXNzLWZvcm0vaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7R0FNRzs7QUFFSCwyREFBbUU7QUFDbkUsd0RBSWlDO0FBR2pDOzs7R0FHRztBQUNILG1CQUF5QixPQUFlO0lBQ3RDLE9BQU8sSUFBQSxrQkFBSyxFQUFDO1FBQ1gsSUFBQSwyQkFBYyxFQUNaLEVBQUMsR0FBRyxPQUFPLEVBQUMsRUFDWjtZQUNFLFFBQVEsRUFDTixrRkFBa0Y7WUFDcEYsVUFBVSxFQUNSLHVGQUF1RjtTQUMxRixDQUNGO1FBQ0QsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsSUFBQSxpQkFBSSxHQUFFLENBQUMsQ0FBQyxDQUFDLHNCQUFzQixDQUFDLE9BQU8sQ0FBQztLQUM5RCxDQUFDLENBQUM7QUFDTCxDQUFDO0FBYkQsNEJBYUM7QUFFRDs7R0FFRztBQUNILFNBQVMsc0JBQXNCLENBQUMsT0FBZTtJQUM3QyxPQUFPLEtBQUssRUFBRSxJQUFVLEVBQUUsRUFBRTtRQUMxQixNQUFNLFVBQVUsR0FBRyxDQUFDLE1BQU0sSUFBQSxrQ0FBcUIsRUFBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUUsQ0FBQztRQUNqRSxJQUFBLG9DQUF1QixFQUNyQixJQUFJLEVBQ0osVUFBVSxFQUNWLHNCQUFzQixFQUN0QixnQ0FBZ0MsQ0FDakMsQ0FBQztRQUNGLElBQUEsb0NBQXVCLEVBQ3JCLElBQUksRUFDSixVQUFVLEVBQ1YsdUJBQXVCLEVBQ3ZCLGlDQUFpQyxDQUNsQyxDQUFDO1FBQ0YsSUFBQSxvQ0FBdUIsRUFDckIsSUFBSSxFQUNKLFVBQVUsRUFDVix1QkFBdUIsRUFDdkIsaUNBQWlDLENBQ2xDLENBQUM7UUFDRixJQUFBLG9DQUF1QixFQUNyQixJQUFJLEVBQ0osVUFBVSxFQUNWLHNCQUFzQixFQUN0QixnQ0FBZ0MsQ0FDakMsQ0FBQztRQUNGLElBQUEsb0NBQXVCLEVBQ3JCLElBQUksRUFDSixVQUFVLEVBQ1YscUJBQXFCLEVBQ3JCLCtCQUErQixDQUNoQyxDQUFDO1FBQ0YsSUFBQSxvQ0FBdUIsRUFBQyxJQUFJLEVBQUUsVUFBVSxFQUFFLHFCQUFxQixFQUFFLGdCQUFnQixDQUFDLENBQUM7SUFDckYsQ0FBQyxDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5pbXBvcnQge2NoYWluLCBub29wLCBSdWxlLCBUcmVlfSBmcm9tICdAYW5ndWxhci1kZXZraXQvc2NoZW1hdGljcyc7XG5pbXBvcnQge1xuICBhZGRNb2R1bGVJbXBvcnRUb01vZHVsZSxcbiAgYnVpbGRDb21wb25lbnQsXG4gIGZpbmRNb2R1bGVGcm9tT3B0aW9ucyxcbn0gZnJvbSAnQGFuZ3VsYXIvY2RrL3NjaGVtYXRpY3MnO1xuaW1wb3J0IHtTY2hlbWF9IGZyb20gJy4vc2NoZW1hJztcblxuLyoqXG4gKiBTY2FmZm9sZHMgYSBuZXcgdGFibGUgY29tcG9uZW50LlxuICogSW50ZXJuYWxseSBpdCBib290c3RyYXBzIHRoZSBiYXNlIGNvbXBvbmVudCBzY2hlbWF0aWNcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKG9wdGlvbnM6IFNjaGVtYSk6IFJ1bGUge1xuICByZXR1cm4gY2hhaW4oW1xuICAgIGJ1aWxkQ29tcG9uZW50KFxuICAgICAgey4uLm9wdGlvbnN9LFxuICAgICAge1xuICAgICAgICB0ZW1wbGF0ZTpcbiAgICAgICAgICAnLi9fX3BhdGhfXy9fX25hbWVAZGFzaGVyaXplQGlmLWZsYXRfXy9fX25hbWVAZGFzaGVyaXplX18uY29tcG9uZW50Lmh0bWwudGVtcGxhdGUnLFxuICAgICAgICBzdHlsZXNoZWV0OlxuICAgICAgICAgICcuL19fcGF0aF9fL19fbmFtZUBkYXNoZXJpemVAaWYtZmxhdF9fL19fbmFtZUBkYXNoZXJpemVfXy5jb21wb25lbnQuX19zdHlsZV9fLnRlbXBsYXRlJyxcbiAgICAgIH0sXG4gICAgKSxcbiAgICBvcHRpb25zLnNraXBJbXBvcnQgPyBub29wKCkgOiBhZGRGb3JtTW9kdWxlc1RvTW9kdWxlKG9wdGlvbnMpLFxuICBdKTtcbn1cblxuLyoqXG4gKiBBZGRzIHRoZSByZXF1aXJlZCBtb2R1bGVzIHRvIHRoZSByZWxhdGl2ZSBtb2R1bGUuXG4gKi9cbmZ1bmN0aW9uIGFkZEZvcm1Nb2R1bGVzVG9Nb2R1bGUob3B0aW9uczogU2NoZW1hKSB7XG4gIHJldHVybiBhc3luYyAoaG9zdDogVHJlZSkgPT4ge1xuICAgIGNvbnN0IG1vZHVsZVBhdGggPSAoYXdhaXQgZmluZE1vZHVsZUZyb21PcHRpb25zKGhvc3QsIG9wdGlvbnMpKSE7XG4gICAgYWRkTW9kdWxlSW1wb3J0VG9Nb2R1bGUoXG4gICAgICBob3N0LFxuICAgICAgbW9kdWxlUGF0aCxcbiAgICAgICdNYXRMZWdhY3lJbnB1dE1vZHVsZScsXG4gICAgICAnQGFuZ3VsYXIvbWF0ZXJpYWwvbGVnYWN5LWlucHV0JyxcbiAgICApO1xuICAgIGFkZE1vZHVsZUltcG9ydFRvTW9kdWxlKFxuICAgICAgaG9zdCxcbiAgICAgIG1vZHVsZVBhdGgsXG4gICAgICAnTWF0TGVnYWN5QnV0dG9uTW9kdWxlJyxcbiAgICAgICdAYW5ndWxhci9tYXRlcmlhbC9sZWdhY3ktYnV0dG9uJyxcbiAgICApO1xuICAgIGFkZE1vZHVsZUltcG9ydFRvTW9kdWxlKFxuICAgICAgaG9zdCxcbiAgICAgIG1vZHVsZVBhdGgsXG4gICAgICAnTWF0TGVnYWN5U2VsZWN0TW9kdWxlJyxcbiAgICAgICdAYW5ndWxhci9tYXRlcmlhbC9sZWdhY3ktc2VsZWN0JyxcbiAgICApO1xuICAgIGFkZE1vZHVsZUltcG9ydFRvTW9kdWxlKFxuICAgICAgaG9zdCxcbiAgICAgIG1vZHVsZVBhdGgsXG4gICAgICAnTWF0TGVnYWN5UmFkaW9Nb2R1bGUnLFxuICAgICAgJ0Bhbmd1bGFyL21hdGVyaWFsL2xlZ2FjeS1yYWRpbycsXG4gICAgKTtcbiAgICBhZGRNb2R1bGVJbXBvcnRUb01vZHVsZShcbiAgICAgIGhvc3QsXG4gICAgICBtb2R1bGVQYXRoLFxuICAgICAgJ01hdExlZ2FjeUNhcmRNb2R1bGUnLFxuICAgICAgJ0Bhbmd1bGFyL21hdGVyaWFsL2xlZ2FjeS1jYXJkJyxcbiAgICApO1xuICAgIGFkZE1vZHVsZUltcG9ydFRvTW9kdWxlKGhvc3QsIG1vZHVsZVBhdGgsICdSZWFjdGl2ZUZvcm1zTW9kdWxlJywgJ0Bhbmd1bGFyL2Zvcm1zJyk7XG4gIH07XG59XG4iXX0=