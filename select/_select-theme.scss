@use 'sass:map';
@use '../core/theming/palette';
@use '../core/theming/theming';
@use '../core/style/private';
@use '../core/style/form-common';
@use '../core/typography/typography-utils';


@mixin color($config-or-theme) {
  $config: theming.get-color-config($config-or-theme);
  $foreground: map.get($config, foreground);
  $background: map.get($config, background);
  $primary: map.get($config, primary);
  $accent: map.get($config, accent);
  $warn: map.get($config, warn);

  .mat-select-value {
    color: theming.color($foreground, text);
  }

  .mat-select-placeholder {
    color: form-common.control-placeholder-color($config);
  }

  .mat-select-disabled .mat-select-value {
    color: theming.color($foreground, disabled-text);
  }

  .mat-select-arrow {
    color: theming.color($foreground, secondary-text);
  }

  .mat-select-panel {
    background: theming.color($background, card);
    @include private.theme-overridable-elevation(4, $config);

    .mat-option.mat-selected:not(.mat-option-multiple) {
      background: theming.color($background, hover, 0.12);
    }
  }

  .mat-form-field {
    &.mat-focused {
      &.mat-primary .mat-select-arrow {
        color: theming.color($primary, text);
      }

      &.mat-accent .mat-select-arrow {
        color: theming.color($accent, text);
      }

      &.mat-warn .mat-select-arrow {
        color: theming.color($warn, text);
      }
    }

    .mat-select.mat-select-invalid .mat-select-arrow {
      color: theming.color($warn, text);
    }

    .mat-select.mat-select-disabled .mat-select-arrow {
      color: theming.color($foreground, disabled-text);
    }
  }
}

@mixin typography($config-or-theme) {
  $config: theming.get-typography-config($config-or-theme);
  // The unit-less line-height from the font config.
  $line-height: typography-utils.height($config, input);

  .mat-select {
    font-family: typography-utils.font-family($config);
  }

  .mat-select-trigger {
    height: $line-height * 1em;
  }
}

@mixin _mat-select-density($config-or-theme) {}

@mixin theme($theme-or-color-config) {
  $theme: theming.legacy-get-theme($theme-or-color-config);
  @include theming.check-duplicate-theme-styles($theme, 'mat-select') {
    $color: theming.get-color-config($theme);
    $density: theming.get-density-config($theme);
    $typography: theming.get-typography-config($theme);

    @if $color != null {
      @include color($color);
    }
    @if $density != null {
      @include _mat-select-density($density);
    }
    @if $typography != null {
      @include typography($typography);
    }
  }
}
